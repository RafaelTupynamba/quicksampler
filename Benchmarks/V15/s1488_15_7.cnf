p cnf 941 2783
c
c CNF representation of circuit s1488 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 667 Total inputs 14
c
c
p cnf 941 2783
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 0
c
c Gate #16: not (NOT_0): out = 15, in = 8 
15 8 0
-15 -8 0
c Gate #17: not (NOT_1): out = 16, in = 7 
16 7 0
-16 -7 0
c Gate #18: not (NOT_2): out = 17, in = 6 
17 6 0
-17 -6 0
c Gate #19: not (NOT_3): out = 18, in = 5 
18 5 0
-18 -5 0
c Gate #20: not (NOT_4): out = 19, in = 4 
19 4 0
-19 -4 0
c Gate #21: not (NOT_5): out = 20, in = 3 
20 3 0
-20 -3 0
c Gate #22: not (NOT_6): out = 21, in = 2 
21 2 0
-21 -2 0
c Gate #23: not (NOT_7): out = 22, in = 14 
22 14 0
-22 -14 0
c Gate #24: not (NOT_8): out = 23, in = 13 
23 13 0
-23 -13 0
c Gate #25: not (NOT_9): out = 24, in = 12 
24 12 0
-24 -12 0
c Gate #26: not (NOT_10): out = 25, in = 11 
25 11 0
-25 -11 0
c Gate #27: not (NOT_11): out = 26, in = 10 
26 10 0
-26 -10 0
c Gate #28: not (NOT_12): out = 27, in = 9 
27 9 0
-27 -9 0
c Gate #29: not (NOT_14): out = 28, in = 12 
28 12 0
-28 -12 0
c Gate #30: not (NOT_15): out = 29, in = 28 
29 28 0
-29 -28 0
c Gate #31: not (NOT_17): out = 30, in = 6 
30 6 0
-30 -6 0
c Gate #32: not (NOT_18): out = 31, in = 30 
31 30 0
-31 -30 0
c Gate #33: not (NOT_20): out = 32, in = 25 
32 25 0
-32 -25 0
c Gate #34: not (NOT_21): out = 33, in = 32 
33 32 0
-33 -32 0
c Gate #35: not (NOT_44): out = 34, in = 10 
34 10 0
-34 -10 0
c Gate #36: not (NOT_45): out = 35, in = 34 
35 34 0
-35 -34 0
c Gate #37: and (AND2_0): out = 36, in = 11 12 
-36 11 0
-36 12 0
36 -11 -12 0
c Gate #38: and (AND2_1): out = 37, in = 11 12 
-37 11 0
-37 12 0
37 -11 -12 0
c Gate #39: and (AND3_0): out = 38, in = 11 12 13 
-668 11 0
-668 12 0
668 -11 -12 0
-38 668 0
-38 13 0
38 -668 -13 0
c Gate #40: and (AND2_2): out = 39, in = 10 13 
-39 10 0
-39 13 0
39 -10 -13 0
c Gate #41: and (AND2_3): out = 40, in = 10 8 
-40 10 0
-40 8 0
40 -10 -8 0
c Gate #42: and (AND2_4): out = 41, in = 10 8 
-41 10 0
-41 8 0
41 -10 -8 0
c Gate #43: and (AND2_5): out = 42, in = 10 6 
-42 10 0
-42 6 0
42 -10 -6 0
c Gate #44: and (AND2_6): out = 43, in = 10 12 
-43 10 0
-43 12 0
43 -10 -12 0
c Gate #45: and (AND2_7): out = 44, in = 9 7 
-44 9 0
-44 7 0
44 -9 -7 0
c Gate #46: and (AND2_8): out = 45, in = 21 18 
-45 21 0
-45 18 0
45 -21 -18 0
c Gate #47: and (AND3_1): out = 46, in = 11 22 5 
-669 11 0
-669 22 0
669 -11 -22 0
-46 669 0
-46 5 0
46 -669 -5 0
c Gate #48: and (AND3_2): out = 47, in = 10 23 8 
-670 10 0
-670 23 0
670 -10 -23 0
-47 670 0
-47 8 0
47 -670 -8 0
c Gate #49: and (AND4_0): out = 48, in = 9 23 22 21 
-671 9 0
-671 23 0
671 -9 -23 0
-672 671 0
-672 22 0
672 -671 -22 0
-48 672 0
-48 21 0
48 -672 -21 0
c Gate #50: and (AND2_9): out = 49, in = 10 23 
-49 10 0
-49 23 0
49 -10 -23 0
c Gate #51: and (AND3_3): out = 50, in = 9 12 23 
-673 9 0
-673 12 0
673 -9 -12 0
-50 673 0
-50 23 0
50 -673 -23 0
c Gate #52: and (AND3_4): out = 51, in = 11 12 23 
-674 11 0
-674 12 0
674 -11 -12 0
-51 674 0
-51 23 0
51 -674 -23 0
c Gate #53: and (AND4_1): out = 52, in = 23 22 2 7 
-675 23 0
-675 22 0
675 -23 -22 0
-676 675 0
-676 2 0
676 -675 -2 0
-52 676 0
-52 7 0
52 -676 -7 0
c Gate #54: and (AND3_5): out = 53, in = 24 13 17 
-677 24 0
-677 13 0
677 -24 -13 0
-53 677 0
-53 17 0
53 -677 -17 0
c Gate #55: and (AND2_10): out = 54, in = 10 24 
-54 10 0
-54 24 0
54 -10 -24 0
c Gate #56: and (AND2_11): out = 55, in = 24 18 
-55 24 0
-55 18 0
55 -24 -18 0
c Gate #57: and (AND3_6): out = 56, in = 24 23 22 
-678 24 0
-678 23 0
678 -24 -23 0
-56 678 0
-56 22 0
56 -678 -22 0
c Gate #58: and (AND3_7): out = 57, in = 24 13 14 
-679 24 0
-679 13 0
679 -24 -13 0
-57 679 0
-57 14 0
57 -679 -14 0
c Gate #59: and (AND2_12): out = 58, in = 25 23 
-58 25 0
-58 23 0
58 -25 -23 0
c Gate #60: and (AND3_8): out = 59, in = 9 25 7 
-680 9 0
-680 25 0
680 -9 -25 0
-59 680 0
-59 7 0
59 -680 -7 0
c Gate #61: and (AND3_9): out = 60, in = 10 25 23 
-681 10 0
-681 25 0
681 -10 -25 0
-60 681 0
-60 23 0
60 -681 -23 0
c Gate #62: and (AND2_13): out = 61, in = 9 25 
-61 9 0
-61 25 0
61 -9 -25 0
c Gate #63: and (AND3_10): out = 62, in = 25 12 16 
-682 25 0
-682 12 0
682 -25 -12 0
-62 682 0
-62 16 0
62 -682 -16 0
c Gate #64: and (AND2_14): out = 63, in = 25 23 
-63 25 0
-63 23 0
63 -25 -23 0
c Gate #65: and (AND2_15): out = 64, in = 26 11 
-64 26 0
-64 11 0
64 -26 -11 0
c Gate #66: and (AND2_16): out = 65, in = 26 2 
-65 26 0
-65 2 0
65 -26 -2 0
c Gate #67: and (AND3_12): out = 66, in = 26 12 22 
-683 26 0
-683 12 0
683 -26 -12 0
-66 683 0
-66 22 0
66 -683 -22 0
c Gate #68: and (AND2_17): out = 67, in = 26 24 
-67 26 0
-67 24 0
67 -26 -24 0
c Gate #69: and (AND2_18): out = 68, in = 26 23 
-68 26 0
-68 23 0
68 -26 -23 0
c Gate #70: and (AND2_19): out = 69, in = 26 11 
-69 26 0
-69 11 0
69 -26 -11 0
c Gate #71: and (AND2_20): out = 70, in = 26 12 
-70 26 0
-70 12 0
70 -26 -12 0
c Gate #72: and (AND2_21): out = 71, in = 26 11 
-71 26 0
-71 11 0
71 -26 -11 0
c Gate #73: and (AND2_22): out = 72, in = 26 11 
-72 26 0
-72 11 0
72 -26 -11 0
c Gate #74: and (AND2_23): out = 73, in = 26 11 
-73 26 0
-73 11 0
73 -26 -11 0
c Gate #75: and (AND2_26): out = 74, in = 27 22 
-74 27 0
-74 22 0
74 -27 -22 0
c Gate #76: and (AND2_27): out = 75, in = 27 13 
-75 27 0
-75 13 0
75 -27 -13 0
c Gate #77: and (AND4_2): out = 76, in = 27 25 12 22 
-684 27 0
-684 25 0
684 -27 -25 0
-685 684 0
-685 12 0
685 -684 -12 0
-76 685 0
-76 22 0
76 -685 -22 0
c Gate #78: and (AND4_3): out = 77, in = 27 26 12 23 
-686 27 0
-686 26 0
686 -27 -26 0
-687 686 0
-687 12 0
687 -686 -12 0
-77 687 0
-77 23 0
77 -687 -23 0
c Gate #79: and (AND3_13): out = 78, in = 27 26 23 
-688 27 0
-688 26 0
688 -27 -26 0
-78 688 0
-78 23 0
78 -688 -23 0
c Gate #80: and (AND4_4): out = 79, in = 27 25 12 23 
-689 27 0
-689 25 0
689 -27 -25 0
-690 689 0
-690 12 0
690 -689 -12 0
-79 690 0
-79 23 0
79 -690 -23 0
c Gate #81: and (AND3_14): out = 80, in = 27 26 20 
-691 27 0
-691 26 0
691 -27 -26 0
-80 691 0
-80 20 0
80 -691 -20 0
c Gate #82: and (AND3_15): out = 81, in = 27 26 23 
-692 27 0
-692 26 0
692 -27 -26 0
-81 692 0
-81 23 0
81 -692 -23 0
c Gate #83: and (AND3_16): out = 82, in = 27 25 5 
-693 27 0
-693 25 0
693 -27 -25 0
-82 693 0
-82 5 0
82 -693 -5 0
c Gate #84: and (AND2_28): out = 83, in = 27 25 
-83 27 0
-83 25 0
83 -27 -25 0
c Gate #85: and (AND4_5): out = 84, in = 27 26 12 23 
-694 27 0
-694 26 0
694 -27 -26 0
-695 694 0
-695 12 0
695 -694 -12 0
-84 695 0
-84 23 0
84 -695 -23 0
c Gate #86: and (AND2_30): out = 85, in = 27 26 
-85 27 0
-85 26 0
85 -27 -26 0
c Gate #87: and (AND3_18): out = 86, in = 27 26 21 
-696 27 0
-696 26 0
696 -27 -26 0
-86 696 0
-86 21 0
86 -696 -21 0
c Gate #88: and (AND2_32): out = 87, in = 27 14 
-87 27 0
-87 14 0
87 -27 -14 0
c Gate #89: and (AND2_44): out = 88, in = 31 13 
-88 31 0
-88 13 0
88 -31 -13 0
c Gate #90: and (AND4_20): out = 89, in = 27 12 14 35 
-697 27 0
-697 12 0
697 -27 -12 0
-698 697 0
-698 14 0
698 -697 -14 0
-89 698 0
-89 35 0
89 -698 -35 0
c Gate #91: or (OR2_0): out = 90, in = 4 3 
90 -4 0
90 -3 0
-90 4 3 0
c Gate #92: or (OR2_1): out = 91, in = 14 6 
91 -14 0
91 -6 0
-91 14 6 0
c Gate #93: or (OR2_2): out = 92, in = 11 12 
92 -11 0
92 -12 0
-92 11 12 0
c Gate #94: or (OR2_3): out = 93, in = 10 11 
93 -10 0
93 -11 0
-93 10 11 0
c Gate #95: or (OR2_4): out = 94, in = 9 8 
94 -9 0
94 -8 0
-94 9 8 0
c Gate #96: or (OR2_5): out = 95, in = 9 12 
95 -9 0
95 -12 0
-95 9 12 0
c Gate #97: or (OR2_6): out = 96, in = 9 17 
96 -9 0
96 -17 0
-96 9 17 0
c Gate #98: or (OR2_7): out = 97, in = 20 19 
97 -20 0
97 -19 0
-97 20 19 0
c Gate #99: or (OR2_8): out = 98, in = 4 20 
98 -4 0
98 -20 0
-98 4 20 0
c Gate #100: or (OR2_9): out = 99, in = 21 18 
99 -21 0
99 -18 0
-99 21 18 0
c Gate #101: or (OR2_10): out = 100, in = 11 21 
100 -11 0
100 -21 0
-100 11 21 0
c Gate #102: or (OR2_11): out = 101, in = 21 7 
101 -21 0
101 -7 0
-101 21 7 0
c Gate #103: or (OR2_12): out = 102, in = 11 22 
102 -11 0
102 -22 0
-102 11 22 0
c Gate #104: or (OR2_13): out = 103, in = 11 23 
103 -11 0
103 -23 0
-103 11 23 0
c Gate #105: or (OR2_14): out = 104, in = 10 23 
104 -10 0
104 -23 0
-104 10 23 0
c Gate #106: or (OR2_15): out = 105, in = 24 23 
105 -24 0
105 -23 0
-105 24 23 0
c Gate #107: or (OR2_16): out = 106, in = 6 24 
106 -6 0
106 -24 0
-106 6 24 0
c Gate #108: or (OR2_17): out = 107, in = 25 8 
107 -25 0
107 -8 0
-107 25 8 0
c Gate #109: or (OR2_18): out = 108, in = 12 25 
108 -12 0
108 -25 0
-108 12 25 0
c Gate #110: or (OR2_19): out = 109, in = 9 25 
109 -9 0
109 -25 0
-109 9 25 0
c Gate #111: or (OR2_20): out = 110, in = 25 17 
110 -25 0
110 -17 0
-110 25 17 0
c Gate #112: or (OR2_21): out = 111, in = 26 8 
111 -26 0
111 -8 0
-111 26 8 0
c Gate #113: or (OR2_22): out = 112, in = 26 25 
112 -26 0
112 -25 0
-112 26 25 0
c Gate #114: or (OR2_23): out = 113, in = 9 26 
113 -9 0
113 -26 0
-113 9 26 0
c Gate #115: or (OR2_24): out = 114, in = 27 26 
114 -27 0
114 -26 0
-114 27 26 0
c Gate #116: or (OR2_25): out = 115, in = 27 25 
115 -27 0
115 -25 0
-115 27 25 0
c Gate #117: or (OR2_26): out = 116, in = 27 12 
116 -27 0
116 -12 0
-116 27 12 0
c Gate #118: or (OR2_27): out = 117, in = 44 12 
117 -44 0
117 -12 0
-117 44 12 0
c Gate #119: or (OR2_28): out = 118, in = 15 101 
118 -15 0
118 -101 0
-118 15 101 0
c Gate #120: or (OR2_29): out = 119, in = 10 45 
119 -10 0
119 -45 0
-119 10 45 0
c Gate #121: or (OR2_30): out = 120, in = 47 53 
120 -47 0
120 -53 0
-120 47 53 0
c Gate #122: or (OR2_31): out = 121, in = 9 54 
121 -9 0
121 -54 0
-121 9 54 0
c Gate #123: or (OR2_32): out = 122, in = 58 36 
122 -58 0
122 -36 0
-122 58 36 0
c Gate #124: or (OR2_33): out = 123, in = 10 109 
123 -10 0
123 -109 0
-123 10 109 0
c Gate #125: or (OR2_34): out = 124, in = 29 11 
124 -29 0
124 -11 0
-124 29 11 0
c Gate #126: or (OR2_36): out = 125, in = 64 40 
125 -64 0
125 -40 0
-125 64 40 0
c Gate #127: or (OR2_37): out = 126, in = 55 113 
126 -55 0
126 -113 0
-126 55 113 0
c Gate #128: or (OR2_38): out = 127, in = 63 113 
127 -63 0
127 -113 0
-127 63 113 0
c Gate #129: or (OR2_39): out = 128, in = 65 12 
128 -65 0
128 -12 0
-128 65 12 0
c Gate #130: or (OR2_41): out = 129, in = 74 39 
129 -74 0
129 -39 0
-129 74 39 0
c Gate #131: or (OR2_42): out = 130, in = 75 48 
130 -75 0
130 -48 0
-130 75 48 0
c Gate #132: or (OR2_57): out = 131, in = 12 125 
131 -12 0
131 -125 0
-131 12 125 0
c Gate #133: not (NOT_35): out = 132, in = 108 
132 108 0
-132 -108 0
c Gate #134: not (NOT_36): out = 133, in = 109 
133 109 0
-133 -109 0
c Gate #135: not (NOT_37): out = 134, in = 110 
134 110 0
-134 -110 0
c Gate #136: not (NOT_38): out = 135, in = 111 
135 111 0
-135 -111 0
c Gate #137: not (NOT_39): out = 136, in = 112 
136 112 0
-136 -112 0
c Gate #138: not (NOT_40): out = 137, in = 113 
137 113 0
-137 -113 0
c Gate #139: not (NOT_41): out = 138, in = 114 
138 114 0
-138 -114 0
c Gate #140: not (NOT_42): out = 139, in = 115 
139 115 0
-139 -115 0
c Gate #141: not (NOT_43): out = 140, in = 116 
140 116 0
-140 -116 0
c Gate #142: not (NOT_19): out = 141, in = 93 
141 93 0
-141 -93 0
c Gate #143: not (NOT_13): out = 142, in = 90 
142 90 0
-142 -90 0
c Gate #144: not (NOT_46): out = 143, in = 123 
143 123 0
-143 -123 0
c Gate #145: and (AND3_11): out = 144, in = 92 10 13 
-699 92 0
-699 10 0
699 -92 -10 0
-144 699 0
-144 13 0
144 -699 -13 0
c Gate #146: and (AND2_24): out = 145, in = 93 13 
-145 93 0
-145 13 0
145 -93 -13 0
c Gate #147: and (AND2_25): out = 146, in = 9 93 
-146 9 0
-146 93 0
146 -9 -93 0
c Gate #148: and (AND2_29): out = 147, in = 27 92 
-147 27 0
-147 92 0
147 -27 -92 0
c Gate #149: and (AND3_17): out = 148, in = 92 27 91 
-700 92 0
-700 27 0
700 -92 -27 0
-148 700 0
-148 91 0
148 -700 -91 0
c Gate #150: and (AND2_31): out = 149, in = 93 27 
-149 93 0
-149 27 0
149 -93 -27 0
c Gate #151: and (AND2_33): out = 150, in = 10 94 
-150 10 0
-150 94 0
150 -10 -94 0
c Gate #152: and (AND2_34): out = 151, in = 26 96 
-151 26 0
-151 96 0
151 -26 -96 0
c Gate #153: and (AND2_35): out = 152, in = 98 25 
-152 98 0
-152 25 0
152 -98 -25 0
c Gate #154: and (AND2_36): out = 153, in = 26 99 
-153 26 0
-153 99 0
153 -26 -99 0
c Gate #155: and (AND3_19): out = 154, in = 27 26 100 
-701 27 0
-701 26 0
701 -27 -26 0
-154 701 0
-154 100 0
154 -701 -100 0
c Gate #156: and (AND4_6): out = 155, in = 27 12 20 102 
-702 27 0
-702 12 0
702 -27 -12 0
-703 702 0
-703 20 0
703 -702 -20 0
-155 703 0
-155 102 0
155 -703 -102 0
c Gate #157: and (AND2_37): out = 156, in = 25 105 
-156 25 0
-156 105 0
156 -25 -105 0
c Gate #158: and (AND2_38): out = 157, in = 106 10 
-157 106 0
-157 10 0
157 -106 -10 0
c Gate #159: and (AND2_39): out = 158, in = 10 108 
-158 10 0
-158 108 0
158 -10 -108 0
c Gate #160: and (AND2_40): out = 159, in = 109 13 
-159 109 0
-159 13 0
159 -109 -13 0
c Gate #161: and (AND2_41): out = 160, in = 109 10 
-160 109 0
-160 10 0
160 -109 -10 0
c Gate #162: and (AND2_42): out = 161, in = 26 110 
-161 26 0
-161 110 0
161 -26 -110 0
c Gate #163: and (AND2_43): out = 162, in = 110 10 
-162 110 0
-162 10 0
162 -110 -10 0
c Gate #164: and (AND3_21): out = 163, in = 112 9 12 
-704 112 0
-704 9 0
704 -112 -9 0
-163 704 0
-163 12 0
163 -704 -12 0
c Gate #165: and (AND2_45): out = 164, in = 113 12 
-164 113 0
-164 12 0
164 -113 -12 0
c Gate #166: and (AND3_22): out = 165, in = 141 9 2 
-705 141 0
-705 9 0
705 -141 -9 0
-165 705 0
-165 2 0
165 -705 -2 0
c Gate #167: and (AND4_8): out = 166, in = 52 141 27 12 
-706 52 0
-706 141 0
706 -52 -141 0
-707 706 0
-707 27 0
707 -706 -27 0
-166 707 0
-166 12 0
166 -707 -12 0
c Gate #168: and (AND3_23): out = 167, in = 141 24 23 
-708 141 0
-708 24 0
708 -141 -24 0
-167 708 0
-167 23 0
167 -708 -23 0
c Gate #169: and (AND2_46): out = 168, in = 141 12 
-168 141 0
-168 12 0
168 -141 -12 0
c Gate #170: and (AND3_24): out = 169, in = 141 27 5 
-709 141 0
-709 27 0
709 -141 -27 0
-169 709 0
-169 5 0
169 -709 -5 0
c Gate #171: and (AND4_9): out = 170, in = 141 27 12 21 
-710 141 0
-710 27 0
710 -141 -27 0
-711 710 0
-711 12 0
711 -710 -12 0
-170 711 0
-170 21 0
170 -711 -21 0
c Gate #172: and (AND3_25): out = 171, in = 141 9 12 
-712 141 0
-712 9 0
712 -141 -9 0
-171 712 0
-171 12 0
171 -712 -12 0
c Gate #173: and (AND3_26): out = 172, in = 141 23 22 
-713 141 0
-713 23 0
713 -141 -23 0
-172 713 0
-172 22 0
172 -713 -22 0
c Gate #174: and (AND2_47): out = 173, in = 24 114 
-173 24 0
-173 114 0
173 -24 -114 0
c Gate #175: and (AND2_49): out = 174, in = 24 115 
-174 24 0
-174 115 0
174 -24 -115 0
c Gate #176: and (AND2_50): out = 175, in = 25 116 
-175 25 0
-175 116 0
175 -25 -116 0
c Gate #177: and (AND3_29): out = 176, in = 10 13 117 
-714 10 0
-714 13 0
714 -10 -13 0
-176 714 0
-176 117 0
176 -714 -117 0
c Gate #178: and (AND3_35): out = 177, in = 118 9 5 
-715 118 0
-715 9 0
715 -118 -9 0
-177 715 0
-177 5 0
177 -715 -5 0
c Gate #179: and (AND2_57): out = 178, in = 25 119 
-178 25 0
-178 119 0
178 -25 -119 0
c Gate #180: and (AND3_42): out = 179, in = 120 11 22 
-716 120 0
-716 11 0
716 -120 -11 0
-179 716 0
-179 22 0
179 -716 -22 0
c Gate #181: and (AND2_66): out = 180, in = 121 25 
-180 121 0
-180 25 0
180 -121 -25 0
c Gate #182: and (AND2_68): out = 181, in = 132 9 
-181 132 0
-181 9 0
181 -132 -9 0
c Gate #183: and (AND2_69): out = 182, in = 133 111 
-182 133 0
-182 111 0
182 -133 -111 0
c Gate #184: and (AND2_70): out = 183, in = 12 123 
-183 12 0
-183 123 0
183 -12 -123 0
c Gate #185: and (AND2_71): out = 184, in = 134 27 
-184 134 0
-184 27 0
184 -134 -27 0
c Gate #186: and (AND2_72): out = 185, in = 134 26 
-185 134 0
-185 26 0
185 -134 -26 0
c Gate #187: and (AND3_46): out = 186, in = 134 27 26 
-717 134 0
-717 27 0
717 -134 -27 0
-186 717 0
-186 26 0
186 -717 -26 0
c Gate #188: and (AND4_12): out = 187, in = 10 13 6 124 
-718 10 0
-718 13 0
718 -10 -13 0
-719 718 0
-719 6 0
719 -718 -6 0
-187 719 0
-187 124 0
187 -719 -124 0
c Gate #189: and (AND2_73): out = 188, in = 136 24 
-188 136 0
-188 24 0
188 -136 -24 0
c Gate #190: and (AND2_74): out = 189, in = 136 15 
-189 136 0
-189 15 0
189 -136 -15 0
c Gate #191: and (AND2_75): out = 190, in = 136 12 
-190 136 0
-190 12 0
190 -136 -12 0
c Gate #192: and (AND2_76): out = 191, in = 136 24 
-191 136 0
-191 24 0
191 -136 -24 0
c Gate #193: and (AND4_13): out = 192, in = 136 23 22 20 
-720 136 0
-720 23 0
720 -136 -23 0
-721 720 0
-721 22 0
721 -720 -22 0
-192 721 0
-192 20 0
192 -721 -20 0
c Gate #194: and (AND3_48): out = 193, in = 136 24 13 
-722 136 0
-722 24 0
722 -136 -24 0
-193 722 0
-193 13 0
193 -722 -13 0
c Gate #195: and (AND4_14): out = 194, in = 136 13 101 8 
-723 136 0
-723 13 0
723 -136 -13 0
-724 723 0
-724 101 0
724 -723 -101 0
-194 724 0
-194 8 0
194 -724 -8 0
c Gate #196: and (AND2_77): out = 195, in = 136 24 
-195 136 0
-195 24 0
195 -136 -24 0
c Gate #197: and (AND2_78): out = 196, in = 136 23 
-196 136 0
-196 23 0
196 -136 -23 0
c Gate #198: and (AND2_79): out = 197, in = 23 125 
-197 23 0
-197 125 0
197 -23 -125 0
c Gate #199: and (AND3_49): out = 198, in = 137 11 8 
-725 137 0
-725 11 0
725 -137 -11 0
-198 725 0
-198 8 0
198 -725 -8 0
c Gate #200: and (AND3_50): out = 199, in = 137 12 23 
-726 137 0
-726 12 0
726 -137 -12 0
-199 726 0
-199 23 0
199 -726 -23 0
c Gate #201: and (AND2_80): out = 200, in = 137 11 
-200 137 0
-200 11 0
200 -137 -11 0
c Gate #202: and (AND2_81): out = 201, in = 137 23 
-201 137 0
-201 23 0
201 -137 -23 0
c Gate #203: and (AND2_82): out = 202, in = 137 25 
-202 137 0
-202 25 0
202 -137 -25 0
c Gate #204: and (AND2_83): out = 203, in = 137 11 
-203 137 0
-203 11 0
203 -137 -11 0
c Gate #205: and (AND3_51): out = 204, in = 137 12 103 
-727 137 0
-727 12 0
727 -137 -12 0
-204 727 0
-204 103 0
204 -727 -103 0
c Gate #206: and (AND3_52): out = 205, in = 137 11 12 
-728 137 0
-728 11 0
728 -137 -11 0
-205 728 0
-205 12 0
205 -728 -12 0
c Gate #207: and (AND3_53): out = 206, in = 137 25 23 
-729 137 0
-729 25 0
729 -137 -25 0
-206 729 0
-206 23 0
206 -729 -23 0
c Gate #208: and (AND3_54): out = 207, in = 137 12 7 
-730 137 0
-730 12 0
730 -137 -12 0
-207 730 0
-207 7 0
207 -730 -7 0
c Gate #209: and (AND3_55): out = 208, in = 137 25 23 
-731 137 0
-731 25 0
731 -137 -25 0
-208 731 0
-208 23 0
208 -731 -23 0
c Gate #210: and (AND3_56): out = 209, in = 137 11 12 
-732 137 0
-732 11 0
732 -137 -11 0
-209 732 0
-209 12 0
209 -732 -12 0
c Gate #211: and (AND2_84): out = 210, in = 108 137 
-210 108 0
-210 137 0
210 -108 -137 0
c Gate #212: and (AND3_57): out = 211, in = 137 25 12 
-733 137 0
-733 25 0
733 -137 -25 0
-211 733 0
-211 12 0
211 -733 -12 0
c Gate #213: and (AND3_58): out = 212, in = 137 25 23 
-734 137 0
-734 25 0
734 -137 -25 0
-212 734 0
-212 23 0
212 -734 -23 0
c Gate #214: and (AND2_85): out = 213, in = 137 122 
-213 137 0
-213 122 0
213 -137 -122 0
c Gate #215: and (AND2_87): out = 214, in = 25 126 
-214 25 0
-214 126 0
214 -25 -126 0
c Gate #216: and (AND2_88): out = 215, in = 127 12 
-215 127 0
-215 12 0
215 -127 -12 0
c Gate #217: and (AND2_89): out = 216, in = 25 128 
-216 25 0
-216 128 0
216 -25 -128 0
c Gate #218: and (AND4_16): out = 217, in = 138 24 14 6 
-735 138 0
-735 24 0
735 -138 -24 0
-736 735 0
-736 14 0
736 -735 -14 0
-217 736 0
-217 6 0
217 -736 -6 0
c Gate #219: and (AND4_17): out = 218, in = 132 138 13 14 
-737 132 0
-737 138 0
737 -132 -138 0
-738 737 0
-738 13 0
738 -737 -13 0
-218 738 0
-218 14 0
218 -738 -14 0
c Gate #220: and (AND2_92): out = 219, in = 138 25 
-219 138 0
-219 25 0
219 -138 -25 0
c Gate #221: and (AND3_60): out = 220, in = 138 13 17 
-739 138 0
-739 13 0
739 -138 -13 0
-220 739 0
-220 17 0
220 -739 -17 0
c Gate #222: and (AND2_93): out = 221, in = 138 2 
-221 138 0
-221 2 0
221 -138 -2 0
c Gate #223: and (AND2_94): out = 222, in = 138 25 
-222 138 0
-222 25 0
222 -138 -25 0
c Gate #224: and (AND2_95): out = 223, in = 138 13 
-223 138 0
-223 13 0
223 -138 -13 0
c Gate #225: and (AND3_61): out = 224, in = 57 134 138 
-740 57 0
-740 134 0
740 -57 -134 0
-224 740 0
-224 138 0
224 -740 -138 0
c Gate #226: and (AND2_96): out = 225, in = 138 25 
-225 138 0
-225 25 0
225 -138 -25 0
c Gate #227: and (AND3_62): out = 226, in = 138 11 12 
-741 138 0
-741 11 0
741 -138 -11 0
-226 741 0
-226 12 0
226 -741 -12 0
c Gate #228: and (AND3_63): out = 227, in = 138 25 16 
-742 138 0
-742 25 0
742 -138 -25 0
-227 742 0
-227 16 0
227 -742 -16 0
c Gate #229: and (AND3_64): out = 228, in = 138 5 118 
-743 138 0
-743 5 0
743 -138 -5 0
-228 743 0
-228 118 0
228 -743 -118 0
c Gate #230: and (AND2_97): out = 229, in = 138 12 
-229 138 0
-229 12 0
229 -138 -12 0
c Gate #231: and (AND2_98): out = 230, in = 129 16 
-230 129 0
-230 16 0
230 -129 -16 0
c Gate #232: and (AND2_99): out = 231, in = 139 18 
-231 139 0
-231 18 0
231 -139 -18 0
c Gate #233: and (AND2_100): out = 232, in = 139 26 
-232 139 0
-232 26 0
232 -139 -26 0
c Gate #234: and (AND2_101): out = 233, in = 139 26 
-233 139 0
-233 26 0
233 -139 -26 0
c Gate #235: and (AND3_65): out = 234, in = 139 26 12 
-744 139 0
-744 26 0
744 -139 -26 0
-234 744 0
-234 12 0
234 -744 -12 0
c Gate #236: and (AND2_102): out = 235, in = 139 26 
-235 139 0
-235 26 0
235 -139 -26 0
c Gate #237: and (AND2_103): out = 236, in = 130 18 
-236 130 0
-236 18 0
236 -130 -18 0
c Gate #238: and (AND3_66): out = 237, in = 140 141 2 
-745 140 0
-745 141 0
745 -140 -141 0
-237 745 0
-237 2 0
237 -745 -2 0
c Gate #239: and (AND2_104): out = 238, in = 140 26 
-238 140 0
-238 26 0
238 -140 -26 0
c Gate #240: and (AND2_105): out = 239, in = 140 14 
-239 140 0
-239 14 0
239 -140 -14 0
c Gate #241: and (AND3_67): out = 240, in = 140 11 14 
-746 140 0
-746 11 0
746 -140 -11 0
-240 746 0
-240 14 0
240 -746 -14 0
c Gate #242: and (AND2_106): out = 241, in = 140 25 
-241 140 0
-241 25 0
241 -140 -25 0
c Gate #243: and (AND2_107): out = 242, in = 140 112 
-242 140 0
-242 112 0
242 -140 -112 0
c Gate #244: and (AND2_108): out = 243, in = 140 11 
-243 140 0
-243 11 0
243 -140 -11 0
c Gate #245: and (AND2_109): out = 244, in = 140 11 
-244 140 0
-244 11 0
244 -140 -11 0
c Gate #246: and (AND3_68): out = 245, in = 140 13 14 
-747 140 0
-747 13 0
747 -140 -13 0
-245 747 0
-245 14 0
245 -747 -14 0
c Gate #247: and (AND2_117): out = 246, in = 143 12 
-246 143 0
-246 12 0
246 -143 -12 0
c Gate #248: and (AND2_118): out = 247, in = 143 24 
-247 143 0
-247 24 0
247 -143 -24 0
c Gate #249: and (AND2_124): out = 248, in = 23 131 
-248 23 0
-248 131 0
248 -23 -131 0
c Gate #250: not (NOT_16): out = 249, in = 92 
249 92 0
-249 -92 0
c Gate #251: not (NOT_22): out = 250, in = 95 
250 95 0
-250 -95 0
c Gate #252: not (NOT_23): out = 251, in = 96 
251 96 0
-251 -96 0
c Gate #253: not (NOT_24): out = 252, in = 97 
252 97 0
-252 -97 0
c Gate #254: not (NOT_25): out = 253, in = 97 
253 97 0
-253 -97 0
c Gate #255: not (NOT_26): out = 254, in = 253 
254 253 0
-254 -253 0
c Gate #256: not (NOT_27): out = 255, in = 99 
255 99 0
-255 -99 0
c Gate #257: or (OR2_35): out = 256, in = 37 249 
256 -37 0
256 -249 0
-256 37 249 0
c Gate #258: not (NOT_28): out = 257, in = 101 
257 101 0
-257 -101 0
c Gate #259: not (NOT_29): out = 258, in = 102 
258 102 0
-258 -102 0
c Gate #260: not (NOT_30): out = 259, in = 103 
259 103 0
-259 -103 0
c Gate #261: not (NOT_31): out = 260, in = 104 
260 104 0
-260 -104 0
c Gate #262: or (OR2_40): out = 261, in = 24 141 
261 -24 0
261 -141 0
-261 24 141 0
c Gate #263: not (NOT_32): out = 262, in = 105 
262 105 0
-262 -105 0
c Gate #264: not (NOT_33): out = 263, in = 106 
263 106 0
-263 -106 0
c Gate #265: or (OR2_43): out = 264, in = 33 151 
264 -33 0
264 -151 0
-264 33 151 0
c Gate #266: or (OR2_44): out = 265, in = 6 252 
265 -6 0
265 -252 0
-265 6 252 0
c Gate #267: or (OR2_45): out = 266, in = 152 9 
266 -152 0
266 -9 0
-266 152 9 0
c Gate #268: or (OR2_46): out = 267, in = 153 42 
267 -153 0
267 -42 0
-267 153 42 0
c Gate #269: or (OR2_47): out = 268, in = 51 259 
268 -51 0
268 -259 0
-268 51 259 0
c Gate #270: or (OR2_48): out = 269, in = 25 260 
269 -25 0
269 -260 0
-269 25 260 0
c Gate #271: or (OR2_49): out = 270, in = 156 38 
270 -156 0
270 -38 0
-270 156 38 0
c Gate #272: or (OR2_50): out = 271, in = 49 263 
271 -49 0
271 -263 0
-271 49 263 0
c Gate #273: or (OR2_52): out = 272, in = 158 13 
272 -158 0
272 -13 0
-272 158 13 0
c Gate #274: or (OR2_53): out = 273, in = 154 160 
273 -154 0
273 -160 0
-273 154 160 0
c Gate #275: or (OR2_54): out = 274, in = 157 161 
274 -157 0
274 -161 0
-274 157 161 0
c Gate #276: or (OR2_55): out = 275, in = 162 72 
275 -162 0
275 -72 0
-275 162 72 0
c Gate #277: or (OR2_56): out = 276, in = 67 135 
276 -67 0
276 -135 0
-276 67 135 0
c Gate #278: not (NOT_34): out = 277, in = 107 
277 107 0
-277 -107 0
c Gate #279: or (OR2_58): out = 278, in = 163 169 
278 -163 0
278 -169 0
-278 163 169 0
c Gate #280: or (OR2_59): out = 279, in = 78 138 
279 -78 0
279 -138 0
-279 78 138 0
c Gate #281: or (OR2_60): out = 280, in = 80 138 
280 -80 0
280 -138 0
-280 80 138 0
c Gate #282: or (OR2_61): out = 281, in = 254 138 
281 -254 0
281 -138 0
-281 254 138 0
c Gate #283: or (OR2_62): out = 282, in = 85 173 
282 -85 0
282 -173 0
-282 85 173 0
c Gate #284: or (OR2_63): out = 283, in = 83 174 
283 -83 0
283 -174 0
-283 83 174 0
c Gate #285: or (OR2_64): out = 284, in = 26 140 
284 -26 0
284 -140 0
-284 26 140 0
c Gate #286: or (OR2_65): out = 285, in = 82 140 
285 -82 0
285 -140 0
-285 82 140 0
c Gate #287: or (OR2_66): out = 286, in = 70 140 
286 -70 0
286 -140 0
-286 70 140 0
c Gate #288: or (OR2_67): out = 287, in = 84 176 
287 -84 0
287 -176 0
-287 84 176 0
c Gate #289: or (OR2_72): out = 288, in = 71 178 
288 -71 0
288 -178 0
-288 71 178 0
c Gate #290: or (OR2_82): out = 289, in = 175 181 
289 -175 0
289 -181 0
-289 175 181 0
c Gate #291: or (OR3_0): out = 290, in = 150 12 143 
748 -150 0
748 -12 0
-748 150 12 0
290 -748 0
290 -143 0
-290 748 143 0
c Gate #292: or (OR2_84): out = 291, in = 159 184 
291 -159 0
291 -184 0
-291 159 184 0
c Gate #293: or (OR2_85): out = 292, in = 27 188 
292 -27 0
292 -188 0
-292 27 188 0
c Gate #294: or (OR2_86): out = 293, in = 141 189 
293 -141 0
293 -189 0
-293 141 189 0
c Gate #295: or (OR2_87): out = 294, in = 62 191 
294 -62 0
294 -191 0
-294 62 191 0
c Gate #296: or (OR2_89): out = 295, in = 166 193 
295 -166 0
295 -193 0
-295 166 193 0
c Gate #297: or (OR2_90): out = 296, in = 167 194 
296 -167 0
296 -194 0
-296 167 194 0
c Gate #298: or (OR2_91): out = 297, in = 197 185 
297 -197 0
297 -185 0
-297 197 185 0
c Gate #299: or (OR2_92): out = 298, in = 165 198 
298 -165 0
298 -198 0
-298 165 198 0
c Gate #300: or (OR2_95): out = 299, in = 216 195 
299 -216 0
299 -195 0
-299 216 195 0
c Gate #301: or (OR2_97): out = 300, in = 76 218 
300 -76 0
300 -218 0
-300 76 218 0
c Gate #302: or (OR2_98): out = 301, in = 69 219 
301 -69 0
301 -219 0
-301 69 219 0
c Gate #303: or (OR2_99): out = 302, in = 77 220 
302 -77 0
302 -220 0
-302 77 220 0
c Gate #304: or (OR2_101): out = 303, in = 81 221 
303 -81 0
303 -221 0
-303 81 221 0
c Gate #305: or (OR2_102): out = 304, in = 222 182 
304 -222 0
304 -182 0
-304 222 182 0
c Gate #306: or (OR2_103): out = 305, in = 225 143 
305 -225 0
305 -143 0
-305 225 143 0
c Gate #307: or (OR2_104): out = 306, in = 86 228 
306 -86 0
306 -228 0
-306 86 228 0
c Gate #308: or (OR2_105): out = 307, in = 230 223 
307 -230 0
307 -223 0
-307 230 223 0
c Gate #309: or (OR2_106): out = 308, in = 12 231 
308 -12 0
308 -231 0
-308 12 231 0
c Gate #310: or (OR2_108): out = 309, in = 237 190 
309 -237 0
309 -190 0
-309 237 190 0
c Gate #311: or (OR2_109): out = 310, in = 79 238 
310 -79 0
310 -238 0
-310 79 238 0
c Gate #312: or (OR2_110): out = 311, in = 200 239 
311 -200 0
311 -239 0
-311 200 239 0
c Gate #313: or (OR2_111): out = 312, in = 155 240 
312 -155 0
312 -240 0
-312 155 240 0
c Gate #314: or (OR2_112): out = 313, in = 147 241 
313 -147 0
313 -241 0
-313 147 241 0
c Gate #315: or (OR2_113): out = 314, in = 168 242 
314 -168 0
314 -242 0
-314 168 242 0
c Gate #316: or (OR2_115): out = 315, in = 148 244 
315 -148 0
315 -244 0
-315 148 244 0
c Gate #317: and (AND2_110): out = 316, in = 24 264 
-316 24 0
-316 264 0
316 -24 -264 0
c Gate #318: and (AND2_111): out = 317, in = 137 265 
-317 137 0
-317 265 0
317 -137 -265 0
c Gate #319: and (AND2_112): out = 318, in = 26 266 
-318 26 0
-318 266 0
318 -26 -266 0
c Gate #320: and (AND2_113): out = 319, in = 267 13 
-319 267 0
-319 13 0
319 -267 -13 0
c Gate #321: and (AND2_114): out = 320, in = 251 268 
-320 251 0
-320 268 0
320 -251 -268 0
c Gate #322: and (AND2_115): out = 321, in = 9 269 
-321 9 0
-321 269 0
321 -9 -269 0
c Gate #323: and (AND3_69): out = 322, in = 270 27 14 
-749 270 0
-749 27 0
749 -270 -27 0
-322 749 0
-322 14 0
322 -749 -14 0
c Gate #324: and (AND2_116): out = 323, in = 98 271 
-323 98 0
-323 271 0
323 -98 -271 0
c Gate #325: and (AND3_70): out = 324, in = 272 27 14 
-750 272 0
-750 27 0
750 -272 -27 0
-324 750 0
-324 14 0
324 -750 -14 0
c Gate #326: and (AND3_71): out = 325, in = 262 143 14 
-751 262 0
-751 143 0
751 -262 -143 0
-325 751 0
-325 14 0
325 -751 -14 0
c Gate #327: not (NOT_47): out = 326, in = 145 
326 145 0
-326 -145 0
c Gate #328: and (AND3_72): out = 327, in = 262 255 143 
-752 262 0
-752 255 0
752 -262 -255 0
-327 752 0
-327 143 0
327 -752 -143 0
c Gate #329: and (AND2_119): out = 328, in = 12 273 
-328 12 0
-328 273 0
328 -12 -273 0
c Gate #330: and (AND2_120): out = 329, in = 274 13 
-329 274 0
-329 13 0
329 -274 -13 0
c Gate #331: and (AND2_121): out = 330, in = 275 24 
-330 275 0
-330 24 0
330 -275 -24 0
c Gate #332: and (AND2_122): out = 331, in = 276 22 
-331 276 0
-331 22 0
331 -276 -22 0
c Gate #333: and (AND2_125): out = 332, in = 278 13 
-332 278 0
-332 13 0
332 -278 -13 0
c Gate #334: and (AND2_126): out = 333, in = 279 18 
-333 279 0
-333 18 0
333 -279 -18 0
c Gate #335: and (AND2_127): out = 334, in = 25 280 
-334 25 0
-334 280 0
334 -25 -280 0
c Gate #336: and (AND2_128): out = 335, in = 25 281 
-335 25 0
-335 281 0
335 -25 -281 0
c Gate #337: and (AND3_73): out = 336, in = 11 13 282 
-753 11 0
-753 13 0
753 -11 -13 0
-336 753 0
-336 282 0
336 -753 -282 0
c Gate #338: and (AND3_74): out = 337, in = 26 14 283 
-754 26 0
-754 14 0
754 -26 -14 0
-337 754 0
-337 283 0
337 -754 -283 0
c Gate #339: and (AND2_129): out = 338, in = 25 284 
-338 25 0
-338 284 0
338 -25 -284 0
c Gate #340: and (AND2_130): out = 339, in = 260 285 
-339 260 0
-339 285 0
339 -260 -285 0
c Gate #341: and (AND2_131): out = 340, in = 259 286 
-340 259 0
-340 286 0
340 -259 -286 0
c Gate #342: and (AND2_132): out = 341, in = 25 287 
-341 25 0
-341 287 0
341 -25 -287 0
c Gate #343: and (AND2_135): out = 342, in = 9 288 
-342 9 0
-342 288 0
342 -9 -288 0
c Gate #344: and (AND2_140): out = 343, in = 260 289 
-343 260 0
-343 289 0
343 -260 -289 0
c Gate #345: and (AND2_141): out = 344, in = 290 23 
-344 290 0
-344 23 0
344 -290 -23 0
c Gate #346: and (AND2_142): out = 345, in = 26 291 
-345 26 0
-345 291 0
345 -26 -291 0
c Gate #347: and (AND2_143): out = 346, in = 13 292 
-346 13 0
-346 292 0
346 -13 -292 0
c Gate #348: and (AND3_81): out = 347, in = 252 293 27 
-755 252 0
-755 293 0
755 -252 -293 0
-347 755 0
-347 27 0
347 -755 -27 0
c Gate #349: and (AND3_82): out = 348, in = 293 24 23 
-756 293 0
-756 24 0
756 -293 -24 0
-348 756 0
-348 23 0
348 -756 -23 0
c Gate #350: and (AND3_83): out = 349, in = 294 27 23 
-757 294 0
-757 27 0
757 -294 -27 0
-349 757 0
-349 23 0
349 -757 -23 0
c Gate #351: and (AND2_144): out = 350, in = 295 17 
-350 295 0
-350 17 0
350 -295 -17 0
c Gate #352: and (AND3_85): out = 351, in = 9 296 5 
-758 9 0
-758 296 0
758 -9 -296 0
-351 758 0
-351 5 0
351 -758 -5 0
c Gate #353: and (AND3_86): out = 352, in = 24 297 22 
-759 24 0
-759 297 0
759 -24 -297 0
-352 759 0
-352 22 0
352 -759 -22 0
c Gate #354: and (AND2_145): out = 353, in = 24 298 
-353 24 0
-353 298 0
353 -24 -298 0
c Gate #355: and (AND3_87): out = 354, in = 299 9 23 
-760 299 0
-760 9 0
760 -299 -9 0
-354 760 0
-354 23 0
354 -760 -23 0
c Gate #356: and (AND2_148): out = 355, in = 300 6 
-355 300 0
-355 6 0
355 -300 -6 0
c Gate #357: and (AND2_149): out = 356, in = 23 301 
-356 23 0
-356 301 0
356 -23 -301 0
c Gate #358: and (AND2_150): out = 357, in = 301 12 
-357 301 0
-357 12 0
357 -301 -12 0
c Gate #359: and (AND2_151): out = 358, in = 302 16 
-358 302 0
-358 16 0
358 -302 -16 0
c Gate #360: and (AND2_153): out = 359, in = 303 16 
-359 303 0
-359 16 0
359 -303 -16 0
c Gate #361: and (AND2_154): out = 360, in = 24 304 
-360 24 0
-360 304 0
360 -24 -304 0
c Gate #362: and (AND2_155): out = 361, in = 23 305 
-361 23 0
-361 305 0
361 -23 -305 0
c Gate #363: and (AND2_156): out = 362, in = 12 306 
-362 12 0
-362 306 0
362 -12 -306 0
c Gate #364: and (AND2_157): out = 363, in = 24 307 
-363 24 0
-363 307 0
363 -24 -307 0
c Gate #365: and (AND2_158): out = 364, in = 23 308 
-364 23 0
-364 308 0
364 -23 -308 0
c Gate #366: and (AND2_160): out = 365, in = 309 23 
-365 309 0
-365 23 0
365 -309 -23 0
c Gate #367: and (AND2_161): out = 366, in = 310 21 
-366 310 0
-366 21 0
366 -310 -21 0
c Gate #368: and (AND2_162): out = 367, in = 13 311 
-367 13 0
-367 311 0
367 -13 -311 0
c Gate #369: and (AND3_89): out = 368, in = 312 13 17 
-761 312 0
-761 13 0
761 -312 -13 0
-368 761 0
-368 17 0
368 -761 -17 0
c Gate #370: and (AND2_163): out = 369, in = 260 313 
-369 260 0
-369 313 0
369 -260 -313 0
c Gate #371: and (AND3_90): out = 370, in = 13 314 14 
-762 13 0
-762 314 0
762 -13 -314 0
-370 762 0
-370 14 0
370 -762 -14 0
c Gate #372: and (AND2_165): out = 371, in = 10 315 
-371 10 0
-371 315 0
371 -10 -315 0
c Gate #373: and (AND3_47): out = 372, in = 10 23 256 
-763 10 0
-763 23 0
763 -10 -23 0
-372 763 0
-372 256 0
372 -763 -256 0
c Gate #374: and (AND4_7): out = 373, in = 249 9 23 21 
-764 249 0
-764 9 0
764 -249 -9 0
-765 764 0
-765 23 0
765 -764 -23 0
-373 765 0
-373 21 0
373 -765 -21 0
c Gate #375: and (AND3_20): out = 374, in = 249 27 13 
-766 249 0
-766 27 0
766 -249 -27 0
-374 766 0
-374 13 0
374 -766 -13 0
c Gate #376: not (NOT_49): out = 375, in = 177 
375 177 0
-375 -177 0
c Gate #377: not (NOT_50): out = 376, in = 375 
376 375 0
-376 -375 0
c Gate #378: and (AND2_48): out = 377, in = 114 249 
-377 114 0
-377 249 0
377 -114 -249 0
c Gate #379: and (AND3_27): out = 378, in = 250 11 23 
-767 250 0
-767 11 0
767 -250 -11 0
-378 767 0
-378 23 0
378 -767 -23 0
c Gate #380: and (AND2_51): out = 379, in = 250 26 
-379 250 0
-379 26 0
379 -250 -26 0
c Gate #381: or (OR2_51): out = 380, in = 26 277 
380 -26 0
380 -277 0
-380 26 277 0
c Gate #382: and (AND4_15): out = 381, in = 277 252 137 24 
-768 277 0
-768 252 0
768 -277 -252 0
-769 768 0
-769 137 0
769 -768 -137 0
-381 769 0
-381 24 0
381 -769 -24 0
c Gate #383: and (AND3_28): out = 382, in = 250 11 13 
-770 250 0
-770 11 0
770 -250 -11 0
-382 770 0
-382 13 0
382 -770 -13 0
c Gate #384: and (AND2_52): out = 383, in = 92 251 
-383 92 0
-383 251 0
383 -92 -251 0
c Gate #385: and (AND3_30): out = 384, in = 252 10 13 
-771 252 0
-771 10 0
771 -252 -10 0
-384 771 0
-384 13 0
384 -771 -13 0
c Gate #386: and (AND4_10): out = 385, in = 252 26 24 23 
-772 252 0
-772 26 0
772 -252 -26 0
-773 772 0
-773 24 0
773 -772 -24 0
-385 773 0
-385 23 0
385 -773 -23 0
c Gate #387: and (AND2_53): out = 386, in = 252 25 
-386 252 0
-386 25 0
386 -252 -25 0
c Gate #388: and (AND2_86): out = 387, in = 137 249 
-387 137 0
-387 249 0
387 -137 -249 0
c Gate #389: and (AND3_31): out = 388, in = 252 27 13 
-774 252 0
-774 27 0
774 -252 -27 0
-388 774 0
-388 13 0
388 -774 -13 0
c Gate #390: and (AND2_54): out = 389, in = 252 12 
-389 252 0
-389 12 0
389 -252 -12 0
c Gate #391: and (AND2_55): out = 390, in = 252 250 
-390 252 0
-390 250 0
390 -252 -250 0
c Gate #392: and (AND2_90): out = 391, in = 13 261 
-391 13 0
-391 261 0
391 -13 -261 0
c Gate #393: and (AND2_91): out = 392, in = 261 13 
-392 261 0
-392 13 0
392 -261 -13 0
c Gate #394: and (AND3_59): out = 393, in = 172 252 250 
-775 172 0
-775 252 0
775 -172 -252 0
-393 775 0
-393 250 0
393 -775 -250 0
c Gate #395: and (AND4_11): out = 394, in = 252 141 24 23 
-776 252 0
-776 141 0
776 -252 -141 0
-777 776 0
-777 24 0
777 -776 -24 0
-394 777 0
-394 23 0
394 -777 -23 0
c Gate #396: and (AND3_32): out = 395, in = 252 250 26 
-778 252 0
-778 250 0
778 -252 -250 0
-395 778 0
-395 26 0
395 -778 -26 0
c Gate #397: or (OR2_68): out = 396, in = 68 384 
396 -68 0
396 -384 0
-396 68 384 0
c Gate #398: or (OR2_69): out = 397, in = 41 386 
397 -41 0
397 -386 0
-397 41 386 0
c Gate #399: or (OR2_70): out = 398, in = 59 388 
398 -59 0
398 -388 0
-398 59 388 0
c Gate #400: or (OR2_71): out = 399, in = 389 132 
399 -389 0
399 -132 0
-399 389 132 0
c Gate #401: and (AND3_33): out = 400, in = 252 249 27 
-779 252 0
-779 249 0
779 -252 -249 0
-400 779 0
-400 27 0
400 -779 -27 0
c Gate #402: and (AND2_56): out = 401, in = 252 104 
-401 252 0
-401 104 0
401 -252 -104 0
c Gate #403: and (AND4_18): out = 402, in = 257 138 13 5 
-780 257 0
-780 138 0
780 -257 -138 0
-781 780 0
-781 13 0
781 -780 -13 0
-402 781 0
-402 5 0
402 -781 -5 0
c Gate #404: and (AND3_34): out = 403, in = 66 255 27 
-782 66 0
-782 255 0
782 -66 -255 0
-403 782 0
-403 27 0
403 -782 -27 0
c Gate #405: and (AND4_19): out = 404, in = 46 101 262 138 
-783 46 0
-783 101 0
783 -46 -101 0
-784 783 0
-784 262 0
784 -783 -262 0
-404 784 0
-404 138 0
404 -784 -138 0
c Gate #406: and (AND2_58): out = 405, in = 258 27 
-405 258 0
-405 27 0
405 -258 -27 0
c Gate #407: and (AND3_36): out = 406, in = 259 10 12 
-785 259 0
-785 10 0
785 -259 -10 0
-406 785 0
-406 12 0
406 -785 -12 0
c Gate #408: and (AND3_37): out = 407, in = 259 14 17 
-786 259 0
-786 14 0
786 -259 -14 0
-407 786 0
-407 17 0
407 -786 -17 0
c Gate #409: and (AND3_38): out = 408, in = 260 27 17 
-787 260 0
-787 27 0
787 -260 -27 0
-408 787 0
-408 17 0
408 -787 -17 0
c Gate #410: and (AND2_59): out = 409, in = 260 9 
-409 260 0
-409 9 0
409 -260 -9 0
c Gate #411: or (OR2_96): out = 410, in = 217 403 
410 -217 0
410 -403 0
-410 217 403 0
c Gate #412: and (AND2_60): out = 411, in = 260 27 
-411 260 0
-411 27 0
411 -260 -27 0
c Gate #413: and (AND2_61): out = 412, in = 260 95 
-412 260 0
-412 95 0
412 -260 -95 0
c Gate #414: and (AND2_62): out = 413, in = 262 6 
-413 262 0
-413 6 0
413 -262 -6 0
c Gate #415: or (OR2_100): out = 414, in = 402 390 
414 -402 0
414 -390 0
-414 402 390 0
c Gate #416: and (AND2_63): out = 415, in = 262 27 
-415 262 0
-415 27 0
415 -262 -27 0
c Gate #417: and (AND2_64): out = 416, in = 262 10 
-416 262 0
-416 10 0
416 -262 -10 0
c Gate #418: and (AND2_65): out = 417, in = 263 13 
-417 263 0
-417 13 0
417 -263 -13 0
c Gate #419: and (AND3_39): out = 418, in = 263 10 13 
-788 263 0
-788 10 0
788 -263 -10 0
-418 788 0
-418 13 0
418 -788 -13 0
c Gate #420: and (AND3_40): out = 419, in = 263 10 13 
-789 263 0
-789 10 0
789 -263 -10 0
-419 789 0
-419 13 0
419 -789 -13 0
c Gate #421: and (AND3_41): out = 420, in = 263 10 13 
-790 263 0
-790 10 0
790 -263 -10 0
-420 790 0
-420 13 0
420 -790 -13 0
c Gate #422: or (OR2_107): out = 421, in = 236 411 
421 -236 0
421 -411 0
-421 236 411 0
c Gate #423: and (AND3_43): out = 422, in = 277 24 23 
-791 277 0
-791 24 0
791 -277 -24 0
-422 791 0
-422 23 0
422 -791 -23 0
c Gate #424: and (AND3_44): out = 423, in = 277 24 23 
-792 277 0
-792 24 0
792 -277 -24 0
-423 792 0
-423 23 0
423 -792 -23 0
c Gate #425: and (AND2_67): out = 424, in = 132 260 
-424 132 0
-424 260 0
424 -132 -260 0
c Gate #426: or (OR2_114): out = 425, in = 383 243 
425 -383 0
425 -243 0
-425 383 243 0
c Gate #427: and (AND3_45): out = 426, in = 262 133 2 
-793 262 0
-793 133 0
793 -262 -133 0
-426 793 0
-426 2 0
426 -793 -2 0
c Gate #428: or (OR2_116): out = 427, in = 24 317 
427 -24 0
427 -317 0
-427 24 317 0
c Gate #429: or (OR2_118): out = 428, in = 377 246 
428 -377 0
428 -246 0
-428 377 246 0
c Gate #430: or (OR2_119): out = 429, in = 328 381 
429 -328 0
429 -381 0
-429 328 381 0
c Gate #431: or (OR4_0): out = 430, in = 215 329 318 139 
794 -215 0
794 -329 0
-794 215 329 0
795 -794 0
795 -318 0
-795 794 318 0
430 -795 0
430 -139 0
-430 795 139 0
c Gate #432: or (OR2_120): out = 431, in = 149 330 
431 -149 0
431 -330 0
-431 149 330 0
c Gate #433: or (OR2_121): out = 432, in = 331 43 
432 -331 0
432 -43 0
-432 331 43 0
c Gate #434: or (OR4_1): out = 433, in = 319 9 248 401 
796 -319 0
796 -9 0
-796 319 9 0
797 -796 0
797 -248 0
-797 796 248 0
433 -797 0
433 -401 0
-433 797 401 0
c Gate #435: or (OR2_123): out = 434, in = 334 233 
434 -334 0
434 -233 0
-434 334 233 0
c Gate #436: or (OR2_124): out = 435, in = 336 206 
435 -336 0
435 -206 0
-435 336 206 0
c Gate #437: or (OR2_125): out = 436, in = 338 203 
436 -338 0
436 -203 0
-436 338 203 0
c Gate #438: or (OR2_126): out = 437, in = 341 247 
437 -341 0
437 -247 0
-437 341 247 0
c Gate #439: or (OR3_2): out = 438, in = 164 344 345 
798 -164 0
798 -344 0
-798 164 344 0
438 -798 0
438 -345 0
-438 798 345 0
c Gate #440: or (OR2_134): out = 439, in = 346 202 
439 -346 0
439 -202 0
-439 346 202 0
c Gate #441: or (OR3_3): out = 440, in = 342 183 347 
799 -342 0
799 -183 0
-799 342 183 0
440 -799 0
440 -347 0
-440 799 347 0
c Gate #442: or (OR2_135): out = 441, in = 348 419 
441 -348 0
441 -419 0
-441 348 419 0
c Gate #443: or (OR2_136): out = 442, in = 353 226 
442 -353 0
442 -226 0
-442 353 226 0
c Gate #444: or (OR2_138): out = 443, in = 356 143 
443 -356 0
443 -143 0
-443 356 143 0
c Gate #445: or (OR2_139): out = 444, in = 358 395 
444 -358 0
444 -395 0
-444 358 395 0
c Gate #446: or (OR3_5): out = 445, in = 321 333 359 
800 -321 0
800 -333 0
-800 321 333 0
445 -800 0
445 -359 0
-445 800 359 0
c Gate #447: or (OR2_141): out = 446, in = 360 170 
446 -360 0
446 -170 0
-446 360 170 0
c Gate #448: or (OR2_142): out = 447, in = 361 186 
447 -361 0
447 -186 0
-447 361 186 0
c Gate #449: or (OR3_6): out = 448, in = 335 316 362 
801 -335 0
801 -316 0
-801 335 316 0
448 -801 0
448 -362 0
-448 801 362 0
c Gate #450: or (OR2_143): out = 449, in = 363 207 
449 -363 0
449 -207 0
-449 363 207 0
c Gate #451: or (OR2_144): out = 450, in = 364 227 
450 -364 0
450 -227 0
-450 364 227 0
c Gate #452: or (OR2_146): out = 451, in = 322 368 
451 -322 0
451 -368 0
-451 322 368 0
c Gate #453: or (OR2_147): out = 452, in = 204 369 
452 -204 0
452 -369 0
-452 204 369 0
c Gate #454: or (OR2_149): out = 453, in = 337 371 
453 -337 0
453 -371 0
-453 337 371 0
c Gate #455: or (OR3_8): out = 454, in = 438 323 180 
802 -438 0
802 -323 0
-802 438 323 0
454 -802 0
454 -180 0
-454 802 180 0
c Gate #456: and (AND2_134): out = 455, in = 376 12 
-455 376 0
-455 12 0
455 -376 -12 0
c Gate #457: not (NOT_51): out = 456, in = 380 
456 380 0
-456 -380 0
c Gate #458: and (AND3_88): out = 457, in = 11 13 410 
-803 11 0
-803 13 0
803 -11 -13 0
-457 803 0
-457 410 0
457 -803 -410 0
c Gate #459: not (NOT_52): out = 458, in = 404 
458 404 0
-458 -404 0
c Gate #460: and (AND2_152): out = 459, in = 414 15 
-459 414 0
-459 15 0
459 -414 -15 0
c Gate #461: not (NOT_48): out = 460, in = 326 
460 326 0
-460 -326 0
c Gate #462: and (AND2_159): out = 461, in = 249 421 
-461 249 0
-461 421 0
461 -249 -421 0
c Gate #463: and (AND2_123): out = 462, in = 460 14 
-462 460 0
-462 14 0
462 -460 -14 0
c Gate #464: and (AND4_21): out = 463, in = 27 12 22 396 
-804 27 0
-804 12 0
804 -27 -12 0
-805 804 0
-805 22 0
805 -804 -22 0
-463 805 0
-463 396 0
463 -805 -396 0
c Gate #465: and (AND2_133): out = 464, in = 27 397 
-464 27 0
-464 397 0
464 -27 -397 0
c Gate #466: and (AND3_75): out = 465, in = 398 10 22 
-806 398 0
-806 10 0
806 -398 -10 0
-465 806 0
-465 22 0
465 -806 -22 0
c Gate #467: and (AND2_164): out = 466, in = 10 425 
-466 10 0
-466 425 0
466 -10 -425 0
c Gate #468: and (AND3_76): out = 467, in = 399 27 17 
-807 399 0
-807 27 0
807 -399 -27 0
-467 807 0
-467 17 0
467 -807 -17 0
c Gate #469: and (AND2_166): out = 468, in = 11 427 
-468 11 0
-468 427 0
468 -11 -427 0
c Gate #470: or (OR2_73): out = 469, in = 146 405 
469 -146 0
469 -405 0
-469 146 405 0
c Gate #471: or (OR2_74): out = 470, in = 406 378 
470 -406 0
470 -378 0
-470 406 378 0
c Gate #472: or (OR2_75): out = 471, in = 50 408 
471 -50 0
471 -408 0
-471 50 408 0
c Gate #473: or (OR2_76): out = 472, in = 385 413 
472 -385 0
472 -413 0
-472 385 413 0
c Gate #474: or (OR2_77): out = 473, in = 61 415 
473 -61 0
473 -415 0
-473 61 415 0
c Gate #475: or (OR2_78): out = 474, in = 56 416 
474 -56 0
474 -416 0
-474 56 416 0
c Gate #476: or (OR2_79): out = 475, in = 417 422 
475 -417 0
475 -422 0
-475 417 422 0
c Gate #477: or (OR2_80): out = 476, in = 418 423 
476 -418 0
476 -423 0
-476 418 423 0
c Gate #478: or (OR2_81): out = 477, in = 60 424 
477 -60 0
477 -424 0
-477 60 424 0
c Gate #479: and (AND2_168): out = 478, in = 13 428 
-478 13 0
-478 428 0
478 -13 -428 0
c Gate #480: or (OR2_83): out = 479, in = 373 426 
479 -373 0
479 -426 0
-479 373 426 0
c Gate #481: and (AND2_169): out = 480, in = 429 23 
-480 429 0
-480 23 0
480 -429 -23 0
c Gate #482: and (AND2_170): out = 481, in = 430 22 
-481 430 0
-481 22 0
481 -430 -22 0
c Gate #483: not (NOT_53): out = 482, in = 458 
482 458 0
-482 -458 0
c Gate #484: and (AND2_171): out = 483, in = 431 13 
-483 431 0
-483 13 0
483 -431 -13 0
c Gate #485: or (OR2_88): out = 484, in = 407 192 
484 -407 0
484 -192 0
-484 407 192 0
c Gate #486: and (AND2_172): out = 485, in = 11 432 
-485 11 0
-485 432 0
485 -11 -432 0
c Gate #487: and (AND2_174): out = 486, in = 433 22 
-486 433 0
-486 22 0
486 -433 -22 0
c Gate #488: and (AND3_91): out = 487, in = 24 23 434 
-808 24 0
-808 23 0
808 -24 -23 0
-487 808 0
-487 434 0
487 -808 -434 0
c Gate #489: or (OR2_93): out = 488, in = 199 409 
488 -199 0
488 -409 0
-488 199 409 0
c Gate #490: or (OR2_94): out = 489, in = 201 412 
489 -201 0
489 -412 0
-489 201 412 0
c Gate #491: and (AND2_175): out = 490, in = 435 14 
-490 435 0
-490 14 0
490 -435 -14 0
c Gate #492: and (AND2_176): out = 491, in = 436 13 
-491 436 0
-491 13 0
491 -436 -13 0
c Gate #493: and (AND2_177): out = 492, in = 437 6 
-492 437 0
-492 6 0
492 -437 -6 0
c Gate #494: and (AND2_184): out = 493, in = 439 14 
-493 439 0
-493 14 0
493 -439 -14 0
c Gate #495: and (AND2_185): out = 494, in = 23 440 
-494 23 0
-494 440 0
494 -23 -440 0
c Gate #496: and (AND3_93): out = 495, in = 20 4 441 
-809 20 0
-809 4 0
809 -20 -4 0
-495 809 0
-495 441 0
495 -809 -441 0
c Gate #497: not (NOT_56): out = 496, in = 457 
496 457 0
-496 -457 0
c Gate #498: and (AND3_94): out = 497, in = 23 22 442 
-810 23 0
-810 22 0
810 -23 -22 0
-497 810 0
-497 442 0
497 -810 -442 0
c Gate #499: and (AND2_188): out = 498, in = 24 443 
-498 24 0
-498 443 0
498 -24 -443 0
c Gate #500: and (AND2_189): out = 499, in = 25 444 
-499 25 0
-499 444 0
499 -25 -444 0
c Gate #501: or (OR2_117): out = 500, in = 12 456 
500 -12 0
500 -456 0
-500 12 456 0
c Gate #502: and (AND2_191): out = 501, in = 12 445 
-501 12 0
-501 445 0
501 -12 -445 0
c Gate #503: and (AND2_192): out = 502, in = 446 23 
-502 446 0
-502 23 0
502 -446 -23 0
c Gate #504: and (AND2_193): out = 503, in = 24 447 
-503 24 0
-503 447 0
503 -24 -447 0
c Gate #505: and (AND2_194): out = 504, in = 448 13 
-504 448 0
-504 13 0
504 -448 -13 0
c Gate #506: and (AND2_195): out = 505, in = 11 449 
-505 11 0
-505 449 0
505 -11 -449 0
c Gate #507: or (OR2_122): out = 506, in = 462 196 
506 -462 0
506 -196 0
-506 462 196 0
c Gate #508: and (AND2_196): out = 507, in = 450 6 
-507 450 0
-507 6 0
507 -450 -6 0
c Gate #509: and (AND2_198): out = 508, in = 10 451 
-508 10 0
-508 451 0
508 -10 -451 0
c Gate #510: and (AND2_199): out = 509, in = 14 452 
-509 14 0
-509 452 0
509 -14 -452 0
c Gate #511: or (OR2_127): out = 510, in = 463 245 
510 -463 0
510 -245 0
-510 463 245 0
c Gate #512: or (OR2_128): out = 511, in = 464 232 
511 -464 0
511 -232 0
-511 464 232 0
c Gate #513: or (OR3_1): out = 512, in = 455 467 214 
811 -455 0
811 -467 0
-811 455 467 0
512 -811 0
512 -214 0
-512 811 214 0
c Gate #514: and (AND2_201): out = 513, in = 453 13 
-513 453 0
-513 13 0
513 -453 -13 0
c Gate #515: and (AND2_204): out = 514, in = 454 22 
-514 454 0
-514 22 0
514 -454 -22 0
c Gate #516: and (AND3_95): out = 515, in = 495 27 22 
-812 495 0
-812 27 0
812 -495 -27 0
-515 812 0
-515 22 0
515 -812 -22 0
c Gate #517: or (OR2_140): out = 516, in = 459 379 
516 -459 0
516 -379 0
-516 459 379 0
c Gate #518: or (OR2_145): out = 517, in = 465 367 
517 -465 0
517 -367 0
-517 465 367 0
c Gate #519: or (OR2_148): out = 518, in = 87 466 
518 -87 0
518 -466 0
-518 87 466 0
c Gate #520: or (OR2_150): out = 519, in = 468 211 
519 -468 0
519 -211 0
-519 468 211 0
c Gate #521: or (OR2_151): out = 520, in = 478 208 
520 -478 0
520 -208 0
-520 478 208 0
c Gate #522: or (OR2_152): out = 521, in = 210 483 
521 -210 0
521 -483 0
-521 210 483 0
c Gate #523: or (OR2_153): out = 522, in = 144 485 
522 -144 0
522 -485 0
-522 144 485 0
c Gate #524: or (OR3_9): out = 523, in = 486 391 212 
813 -486 0
813 -391 0
-813 486 391 0
523 -813 0
523 -212 0
-523 813 212 0
c Gate #525: or (OR2_155): out = 524, in = 487 327 
524 -487 0
524 -327 0
-524 487 327 0
c Gate #526: or (OR2_156): out = 525, in = 491 213 
525 -491 0
525 -213 0
-525 491 213 0
c Gate #527: or (OR3_11): out = 526, in = 332 499 492 
814 -332 0
814 -499 0
-814 332 499 0
526 -814 0
526 -492 0
-526 814 492 0
c Gate #528: or (OR2_160): out = 527, in = 480 501 
527 -480 0
527 -501 0
-527 480 501 0
c Gate #529: or (OR4_4): out = 528, in = 507 494 374 229 
815 -507 0
815 -494 0
-815 507 494 0
816 -815 0
816 -374 0
-816 815 374 0
528 -816 0
528 -229 0
-528 816 229 0
c Gate #530: or (OR3_13): out = 529, in = 514 490 340 
817 -514 0
817 -490 0
-817 514 490 0
529 -817 0
529 -340 0
-529 817 340 0
c Gate #531: and (AND3_84): out = 530, in = 250 484 15 
-818 250 0
-818 484 0
818 -250 -484 0
-530 818 0
-530 15 0
530 -818 -15 0
c Gate #532: and (AND2_167): out = 531, in = 23 500 
-531 23 0
-531 500 0
531 -23 -500 0
c Gate #533: and (AND2_173): out = 532, in = 12 506 
-532 12 0
-532 506 0
532 -12 -506 0
c Gate #534: and (AND2_178): out = 533, in = 510 17 
-533 510 0
-533 17 0
533 -510 -17 0
c Gate #535: and (AND2_179): out = 534, in = 24 511 
-534 24 0
-534 511 0
534 -24 -511 0
c Gate #536: and (AND2_180): out = 535, in = 512 13 
-535 512 0
-535 13 0
535 -512 -13 0
c Gate #537: not (NOT_55): out = 536, in = 500 
536 500 0
-536 -500 0
c Gate #538: not (NOT_60): out = 537, in = 496 
537 496 0
-537 -496 0
c Gate #539: and (AND2_190): out = 538, in = 11 516 
-538 11 0
-538 516 0
538 -11 -516 0
c Gate #540: and (AND2_136): out = 539, in = 24 469 
-539 24 0
-539 469 0
539 -24 -469 0
c Gate #541: not (NOT_64): out = 540, in = 523 
540 523 0
-540 -523 0
c Gate #542: not (NOT_65): out = 541, in = 497 
541 497 0
-541 -497 0
c Gate #543: and (AND2_197): out = 542, in = 517 17 
-542 517 0
-542 17 0
542 -517 -17 0
c Gate #544: not (NOT_68): out = 543, in = 515 
543 515 0
-543 -515 0
c Gate #545: and (AND2_146): out = 544, in = 25 488 
-544 25 0
-544 488 0
544 -25 -488 0
c Gate #546: and (AND2_200): out = 545, in = 518 13 
-545 518 0
-545 13 0
545 -518 -13 0
c Gate #547: not (NOT_70): out = 546, in = 540 
546 540 0
-546 -540 0
c Gate #548: and (AND2_147): out = 547, in = 25 489 
-547 25 0
-547 489 0
547 -25 -489 0
c Gate #549: or (OR2_129): out = 548, in = 539 171 
548 -539 0
548 -171 0
-548 539 171 0
c Gate #550: not (NOT_71): out = 549, in = 541 
549 541 0
-549 -541 0
c Gate #551: and (AND2_202): out = 550, in = 519 13 
-550 519 0
-550 13 0
550 -519 -13 0
c Gate #552: and (AND2_203): out = 551, in = 14 520 
-551 14 0
-551 520 0
551 -14 -520 0
c Gate #553: and (AND2_137): out = 552, in = 97 470 
-552 97 0
-552 470 0
552 -97 -470 0
c Gate #554: and (AND2_205): out = 553, in = 521 14 
-553 521 0
-553 14 0
553 -521 -14 0
c Gate #555: or (OR2_137): out = 554, in = 547 205 
554 -547 0
554 -205 0
-554 547 205 0
c Gate #556: and (AND2_206): out = 555, in = 27 522 
-555 27 0
-555 522 0
555 -27 -522 0
c Gate #557: and (AND2_208): out = 556, in = 524 22 
-556 524 0
-556 22 0
556 -524 -22 0
c Gate #558: and (AND2_209): out = 557, in = 525 14 
-557 525 0
-557 14 0
557 -525 -14 0
c Gate #559: and (AND2_213): out = 558, in = 22 527 
-558 22 0
-558 527 0
558 -22 -527 0
c Gate #560: and (AND3_77): out = 559, in = 25 22 471 
-819 25 0
-819 22 0
819 -25 -22 0
-559 819 0
-559 471 0
559 -819 -471 0
c Gate #561: and (AND4_22): out = 560, in = 27 25 22 472 
-820 27 0
-820 25 0
820 -27 -25 0
-821 820 0
-821 22 0
821 -820 -22 0
-560 821 0
-560 472 0
560 -821 -472 0
c Gate #562: or (OR3_7): out = 561, in = 531 252 142 
822 -531 0
822 -252 0
-822 531 252 0
561 -822 0
561 -142 0
-561 822 142 0
c Gate #563: and (AND2_138): out = 562, in = 473 18 
-562 473 0
-562 18 0
562 -473 -18 0
c Gate #564: and (AND2_216): out = 563, in = 22 528 
-563 22 0
-563 528 0
563 -22 -528 0
c Gate #565: and (AND2_139): out = 564, in = 252 474 
-564 252 0
-564 474 0
564 -252 -474 0
c Gate #566: or (OR2_154): out = 565, in = 179 532 
565 -179 0
565 -532 0
-565 179 532 0
c Gate #567: and (AND3_78): out = 566, in = 10 90 475 
-823 10 0
-823 90 0
823 -10 -90 0
-566 823 0
-566 475 0
566 -823 -475 0
c Gate #568: and (AND3_79): out = 567, in = 27 476 98 
-824 27 0
-824 476 0
824 -27 -476 0
-567 824 0
-567 98 0
567 -824 -98 0
c Gate #569: or (OR2_157): out = 568, in = 534 209 
568 -534 0
568 -209 0
-568 534 209 0
c Gate #570: or (OR3_10): out = 569, in = 235 535 366 
825 -235 0
825 -535 0
-825 235 535 0
569 -825 0
569 -366 0
-569 825 366 0
c Gate #571: or (OR4_2): out = 570, in = 561 88 9 73 
826 -561 0
826 -88 0
-826 561 88 0
827 -826 0
827 -9 0
-827 826 9 0
570 -827 0
570 -73 0
-570 827 73 0
c Gate #572: and (AND3_80): out = 571, in = 477 27 14 
-828 477 0
-828 27 0
828 -477 -27 0
-571 828 0
-571 14 0
571 -828 -14 0
c Gate #573: or (OR2_161): out = 572, in = 567 503 
572 -567 0
572 -503 0
-572 567 503 0
c Gate #574: and (AND4_23): out = 573, in = 26 22 5 479 
-829 26 0
-829 22 0
829 -26 -22 0
-830 829 0
-830 5 0
830 -829 -5 0
-573 830 0
-573 479 0
573 -830 -479 0
c Gate #575: or (OR4_5): out = 574, in = 365 550 351 538 
831 -365 0
831 -550 0
-831 365 550 0
832 -831 0
832 -351 0
-832 831 351 0
574 -832 0
574 -538 0
-574 832 538 0
c Gate #576: or (OR3_12): out = 575, in = 569 349 357 
833 -569 0
833 -349 0
-833 569 349 0
575 -833 0
575 -357 0
-575 833 357 0
c Gate #577: not (NOT_74): out = 576, in = 529 
576 529 0
-576 -529 0
c Gate #578: or (OR2_163): out = 577, in = 493 555 
577 -493 0
577 -555 0
-577 493 555 0
c Gate #579: or (OR4_6): out = 578, in = 526 234 552 502 
834 -526 0
834 -234 0
-834 526 234 0
835 -834 0
835 -552 0
-835 834 552 0
578 -835 0
578 -502 0
-578 835 502 0
c Gate #580: or (OR3_14): out = 579, in = 556 508 530 
836 -556 0
836 -508 0
-836 556 508 0
579 -836 0
579 -530 0
-579 836 530 0
c Gate #581: or (OR3_16): out = 580, in = 370 558 533 
837 -370 0
837 -558 0
-837 370 558 0
580 -837 0
580 -533 0
-580 837 533 0
c Gate #582: or (OR4_7): out = 581, in = 557 542 563 339 
838 -557 0
838 -542 0
-838 557 542 0
839 -838 0
839 -563 0
-839 838 563 0
581 -839 0
581 -339 0
-581 839 339 0
c Gate #583: and (AND2_217): out = 582, in = 22 574 
-582 22 0
-582 574 0
582 -22 -574 0
c Gate #584: not (NOT_75): out = 583, in = 543 
583 543 0
-583 -543 0
c Gate #585: not (NOT_77): out = 584, in = 579 
584 579 0
-584 -579 0
c Gate #586: not (NOT_80): out = 585, in = 576 
585 576 0
-585 -576 0
c Gate #587: not (NOT_81): out = 586, in = 584 
586 584 0
-586 -584 0
c Gate #588: not (NOT_82): out = 587, in = 580 
587 580 0
-587 -580 0
c Gate #589: or (OR2_130): out = 588, in = 559 325 
588 -559 0
588 -325 0
-588 559 325 0
c Gate #590: or (OR2_131): out = 589, in = 562 400 
589 -562 0
589 -400 0
-589 562 400 0
c Gate #591: or (OR2_132): out = 590, in = 566 394 
590 -566 0
590 -394 0
-590 566 394 0
c Gate #592: or (OR2_133): out = 591, in = 573 224 
591 -573 0
591 -224 0
-591 573 224 0
c Gate #593: not (NOT_85): out = 592, in = 581 
592 581 0
-592 -581 0
c Gate #594: or (OR3_4): out = 593, in = 372 352 564 
840 -372 0
840 -352 0
-840 372 352 0
593 -840 0
593 -564 0
-593 840 564 0
c Gate #595: not (NOT_54): out = 594, in = 560 
594 560 0
-594 -560 0
c Gate #596: and (AND2_218): out = 595, in = 22 575 
-595 22 0
-595 575 0
595 -22 -575 0
c Gate #597: and (AND2_207): out = 596, in = 27 565 
-596 27 0
-596 565 0
596 -27 -565 0
c Gate #598: not (NOT_91): out = 597, in = 587 
597 587 0
-597 -587 0
c Gate #599: and (AND2_210): out = 598, in = 568 22 
-598 568 0
-598 22 0
598 -568 -22 0
c Gate #600: and (AND2_212): out = 599, in = 570 22 
-599 570 0
-599 22 0
599 -570 -22 0
c Gate #601: and (AND2_219): out = 600, in = 6 577 
-600 6 0
-600 577 0
600 -6 -577 0
c Gate #602: and (AND2_214): out = 601, in = 22 572 
-601 22 0
-601 572 0
601 -22 -572 0
c Gate #603: not (NOT_59): out = 602, in = 591 
602 591 0
-602 -591 0
c Gate #604: not (NOT_94): out = 603, in = 592 
603 592 0
-603 -592 0
c Gate #605: and (AND2_220): out = 604, in = 578 22 
-604 578 0
-604 22 0
604 -578 -22 0
c Gate #606: and (AND2_226): out = 605, in = 1 603 
-605 1 0
-605 603 0
605 -1 -603 0
c Gate #607: and (AND2_181): out = 606, in = 13 548 
-606 13 0
-606 548 0
606 -13 -548 0
c Gate #608: and (AND2_182): out = 607, in = 26 589 
-607 26 0
-607 589 0
607 -26 -589 0
c Gate #609: and (AND3_92): out = 608, in = 27 22 590 
-841 27 0
-841 22 0
841 -27 -22 0
-608 841 0
-608 590 0
608 -841 -590 0
c Gate #610: or (OR4_3): out = 609, in = 354 607 504 320 
842 -354 0
842 -607 0
-842 354 607 0
843 -842 0
843 -504 0
-843 842 504 0
609 -843 0
609 -320 0
-609 843 320 0
c Gate #611: and (AND2_183): out = 610, in = 536 23 
-610 536 0
-610 23 0
610 -536 -23 0
c Gate #612: and (AND2_186): out = 611, in = 27 593 
-611 27 0
-611 593 0
611 -27 -593 0
c Gate #613: or (OR2_164): out = 612, in = 598 387 
612 -598 0
612 -387 0
-612 598 387 0
c Gate #614: or (OR3_15): out = 613, in = 324 392 599 
844 -324 0
844 -392 0
-844 324 392 0
613 -844 0
613 -599 0
-613 844 599 0
c Gate #615: or (OR2_166): out = 614, in = 601 509 
614 -601 0
614 -509 0
-614 601 509 0
c Gate #616: and (AND2_187): out = 615, in = 554 14 
-615 554 0
-615 14 0
615 -554 -14 0
c Gate #617: or (OR4_8): out = 616, in = 615 582 350 382 
845 -615 0
845 -582 0
-845 615 582 0
846 -845 0
846 -350 0
-846 845 350 0
616 -846 0
616 -382 0
-616 846 382 0
c Gate #618: or (OR4_9): out = 617, in = 571 355 544 595 
847 -571 0
847 -355 0
-847 571 355 0
848 -847 0
848 -544 0
-848 847 544 0
617 -848 0
617 -595 0
-617 848 595 0
c Gate #619: or (OR2_167): out = 618, in = 600 393 
618 -600 0
618 -393 0
-618 600 393 0
c Gate #620: or (OR3_18): out = 619, in = 604 553 461 
849 -604 0
849 -553 0
-849 604 553 0
619 -849 0
619 -461 0
-619 849 461 0
c Gate #621: not (NOT_58): out = 620, in = 594 
620 594 0
-620 -594 0
c Gate #622: not (NOT_57): out = 621, in = 588 
621 588 0
-621 -588 0
c Gate #623: not (NOT_83): out = 622, in = 614 
622 614 0
-622 -614 0
c Gate #624: not (NOT_63): out = 623, in = 602 
623 602 0
-623 -602 0
c Gate #625: and (AND2_215): out = 624, in = 609 22 
-624 609 0
-624 22 0
624 -609 -22 0
c Gate #626: and (AND2_224): out = 625, in = 1 597 
-625 1 0
-625 597 0
625 -1 -597 0
c Gate #627: and (AND2_221): out = 626, in = 23 612 
-626 23 0
-626 612 0
626 -23 -612 0
c Gate #628: or (OR2_158): out = 627, in = 481 606 
627 -481 0
627 -606 0
-627 481 606 0
c Gate #629: or (OR2_159): out = 628, in = 420 610 
628 -420 0
628 -610 0
-628 420 610 0
c Gate #630: not (NOT_66): out = 629, in = 627 
629 627 0
-629 -627 0
c Gate #631: not (NOT_86): out = 630, in = 616 
630 616 0
-630 -616 0
c Gate #632: not (NOT_87): out = 631, in = 617 
631 617 0
-631 -617 0
c Gate #633: or (OR2_162): out = 632, in = 611 513 
632 -611 0
632 -513 0
-632 611 513 0
c Gate #634: not (NOT_89): out = 633, in = 618 
633 618 0
-633 -618 0
c Gate #635: not (NOT_62): out = 634, in = 608 
634 608 0
-634 -608 0
c Gate #636: not (NOT_61): out = 635, in = 621 
635 621 0
-635 -621 0
c Gate #637: or (OR3_17): out = 636, in = 624 89 343 
850 -624 0
850 -89 0
-850 624 89 0
636 -850 0
636 -343 0
-636 850 343 0
c Gate #638: not (NOT_72): out = 637, in = 632 
637 632 0
-637 -632 0
c Gate #639: not (NOT_79): out = 638, in = 613 
638 613 0
-638 -613 0
c Gate #640: not (NOT_90): out = 639, in = 619 
639 619 0
-639 -619 0
c Gate #641: not (NOT_69): out = 640, in = 596 
640 596 0
-640 -596 0
c Gate #642: or (OR2_168): out = 641, in = 545 626 
641 -545 0
641 -626 0
-641 545 626 0
c Gate #643: not (NOT_95): out = 642, in = 641 
642 641 0
-642 -641 0
c Gate #644: not (NOT_96): out = 643, in = 630 
643 630 0
-643 -630 0
c Gate #645: not (NOT_97): out = 644, in = 631 
644 631 0
-644 -631 0
c Gate #646: not (NOT_67): out = 645, in = 634 
645 634 0
-645 -634 0
c Gate #647: not (NOT_92): out = 646, in = 622 
646 622 0
-646 -622 0
c Gate #648: not (NOT_100): out = 647, in = 642 
647 642 0
-647 -642 0
c Gate #649: and (AND2_228): out = 648, in = 1 644 
-648 1 0
-648 644 0
648 -1 -644 0
c Gate #650: not (NOT_88): out = 649, in = 638 
649 638 0
-649 -638 0
c Gate #651: not (NOT_98): out = 650, in = 633 
650 633 0
-650 -633 0
c Gate #652: and (AND2_211): out = 651, in = 252 628 
-651 252 0
-651 628 0
651 -252 -628 0
c Gate #653: not (NOT_99): out = 652, in = 639 
652 639 0
-652 -639 0
c Gate #654: not (NOT_78): out = 653, in = 637 
653 637 0
-653 -637 0
c Gate #655: not (NOT_76): out = 654, in = 640 
654 640 0
-654 -640 0
c Gate #656: and (AND2_227): out = 655, in = 1 643 
-655 1 0
-655 643 0
655 -1 -643 0
c Gate #657: and (AND2_229): out = 656, in = 1 652 
-656 1 0
-656 652 0
656 -1 -652 0
c Gate #658: not (NOT_73): out = 657, in = 629 
657 629 0
-657 -629 0
c Gate #659: not (NOT_84): out = 658, in = 636 
658 636 0
-658 -636 0
c Gate #660: or (OR2_165): out = 659, in = 187 651 
659 -187 0
659 -651 0
-659 187 651 0
c Gate #661: not (NOT_93): out = 660, in = 658 
660 658 0
-660 -658 0
c Gate #662: and (AND2_222): out = 661, in = 27 659 
-661 27 0
-661 659 0
661 -27 -659 0
c Gate #663: or (OR2_169): out = 662, in = 661 498 
662 -661 0
662 -498 0
-662 661 498 0
c Gate #664: and (AND2_223): out = 663, in = 662 22 
-663 662 0
-663 22 0
663 -662 -22 0
c Gate #665: and (AND2_225): out = 664, in = 1 660 
-664 1 0
-664 660 0
664 -1 -660 0
c Gate #666: or (OR3_19): out = 665, in = 505 663 551 
851 -505 0
851 -663 0
-851 505 663 0
665 -851 0
665 -551 0
-665 851 551 0
c Gate #667: not (NOT_101): out = 666, in = 665 
666 665 0
-666 -665 0
c Gate #668: not (NOT_102): out = 667, in = 666 
667 666 0
-667 -666 0
c
c Random XOR constraints start here
c
-852 656 648 0
-852 -656 -648 0
852 -656 648 0
852 656 -648 0
-853 852 625 0
-853 -852 -625 0
853 -852 625 0
853 852 -625 0
-854 853 649 0
-854 -853 -649 0
854 -853 649 0
854 853 -649 0
-855 854 654 0
-855 -854 -654 0
855 -854 654 0
855 854 -654 0
-856 855 546 0
-856 -855 -546 0
856 -855 546 0
856 855 -546 0
-857 856 620 0
-857 -856 -620 0
857 -856 620 0
857 856 -620 0
857 0
c Rand xor clause 1 with 7 lits
-858 656 648 0
-858 -656 -648 0
858 -656 648 0
858 656 -648 0
-859 858 625 0
-859 -858 -625 0
859 -858 625 0
859 858 -625 0
-860 859 649 0
-860 -859 -649 0
860 -859 649 0
860 859 -649 0
-861 860 654 0
-861 -860 -654 0
861 -860 654 0
861 860 -654 0
-862 861 546 0
-862 -861 -546 0
862 -861 546 0
862 861 -546 0
-863 862 620 0
-863 -862 -620 0
863 -862 620 0
863 862 -620 0
863 0
c Rand xor clause 2 with 7 lits
-864 656 648 0
-864 -656 -648 0
864 -656 648 0
864 656 -648 0
-865 864 625 0
-865 -864 -625 0
865 -864 625 0
865 864 -625 0
-866 865 649 0
-866 -865 -649 0
866 -865 649 0
866 865 -649 0
-867 866 654 0
-867 -866 -654 0
867 -866 654 0
867 866 -654 0
-868 867 546 0
-868 -867 -546 0
868 -867 546 0
868 867 -546 0
-869 868 620 0
-869 -868 -620 0
869 -868 620 0
869 868 -620 0
869 0
c Rand xor clause 3 with 7 lits
-870 656 648 0
-870 -656 -648 0
870 -656 648 0
870 656 -648 0
-871 870 625 0
-871 -870 -625 0
871 -870 625 0
871 870 -625 0
-872 871 649 0
-872 -871 -649 0
872 -871 649 0
872 871 -649 0
-873 872 654 0
-873 -872 -654 0
873 -872 654 0
873 872 -654 0
-874 873 546 0
-874 -873 -546 0
874 -873 546 0
874 873 -546 0
-875 874 620 0
-875 -874 -620 0
875 -874 620 0
875 874 -620 0
875 0
c Rand xor clause 4 with 7 lits
-876 656 648 0
-876 -656 -648 0
876 -656 648 0
876 656 -648 0
-877 876 625 0
-877 -876 -625 0
877 -876 625 0
877 876 -625 0
-878 877 649 0
-878 -877 -649 0
878 -877 649 0
878 877 -649 0
-879 878 654 0
-879 -878 -654 0
879 -878 654 0
879 878 -654 0
-880 879 546 0
-880 -879 -546 0
880 -879 546 0
880 879 -546 0
-881 880 620 0
-881 -880 -620 0
881 -880 620 0
881 880 -620 0
881 0
c Rand xor clause 5 with 7 lits
-882 656 648 0
-882 -656 -648 0
882 -656 648 0
882 656 -648 0
-883 882 625 0
-883 -882 -625 0
883 -882 625 0
883 882 -625 0
-884 883 649 0
-884 -883 -649 0
884 -883 649 0
884 883 -649 0
-885 884 654 0
-885 -884 -654 0
885 -884 654 0
885 884 -654 0
-886 885 546 0
-886 -885 -546 0
886 -885 546 0
886 885 -546 0
-887 886 620 0
-887 -886 -620 0
887 -886 620 0
887 886 -620 0
887 0
c Rand xor clause 6 with 7 lits
-888 656 648 0
-888 -656 -648 0
888 -656 648 0
888 656 -648 0
-889 888 625 0
-889 -888 -625 0
889 -888 625 0
889 888 -625 0
-890 889 649 0
-890 -889 -649 0
890 -889 649 0
890 889 -649 0
-891 890 654 0
-891 -890 -654 0
891 -890 654 0
891 890 -654 0
-892 891 546 0
-892 -891 -546 0
892 -891 546 0
892 891 -546 0
-893 892 620 0
-893 -892 -620 0
893 -892 620 0
893 892 -620 0
893 0
c Rand xor clause 7 with 7 lits
-894 656 648 0
-894 -656 -648 0
894 -656 648 0
894 656 -648 0
-895 894 625 0
-895 -894 -625 0
895 -894 625 0
895 894 -625 0
-896 895 649 0
-896 -895 -649 0
896 -895 649 0
896 895 -649 0
-897 896 654 0
-897 -896 -654 0
897 -896 654 0
897 896 -654 0
-898 897 546 0
-898 -897 -546 0
898 -897 546 0
898 897 -546 0
-899 898 620 0
-899 -898 -620 0
899 -898 620 0
899 898 -620 0
899 0
c Rand xor clause 8 with 7 lits
-900 656 648 0
-900 -656 -648 0
900 -656 648 0
900 656 -648 0
-901 900 625 0
-901 -900 -625 0
901 -900 625 0
901 900 -625 0
-902 901 649 0
-902 -901 -649 0
902 -901 649 0
902 901 -649 0
-903 902 654 0
-903 -902 -654 0
903 -902 654 0
903 902 -654 0
-904 903 546 0
-904 -903 -546 0
904 -903 546 0
904 903 -546 0
-905 904 620 0
-905 -904 -620 0
905 -904 620 0
905 904 -620 0
905 0
c Rand xor clause 9 with 7 lits
-906 656 648 0
-906 -656 -648 0
906 -656 648 0
906 656 -648 0
-907 906 625 0
-907 -906 -625 0
907 -906 625 0
907 906 -625 0
-908 907 649 0
-908 -907 -649 0
908 -907 649 0
908 907 -649 0
-909 908 654 0
-909 -908 -654 0
909 -908 654 0
909 908 -654 0
-910 909 546 0
-910 -909 -546 0
910 -909 546 0
910 909 -546 0
-911 910 620 0
-911 -910 -620 0
911 -910 620 0
911 910 -620 0
911 0
c Rand xor clause 10 with 7 lits
-912 656 648 0
-912 -656 -648 0
912 -656 648 0
912 656 -648 0
-913 912 625 0
-913 -912 -625 0
913 -912 625 0
913 912 -625 0
-914 913 649 0
-914 -913 -649 0
914 -913 649 0
914 913 -649 0
-915 914 654 0
-915 -914 -654 0
915 -914 654 0
915 914 -654 0
-916 915 546 0
-916 -915 -546 0
916 -915 546 0
916 915 -546 0
-917 916 620 0
-917 -916 -620 0
917 -916 620 0
917 916 -620 0
917 0
c Rand xor clause 11 with 7 lits
-918 656 648 0
-918 -656 -648 0
918 -656 648 0
918 656 -648 0
-919 918 625 0
-919 -918 -625 0
919 -918 625 0
919 918 -625 0
-920 919 649 0
-920 -919 -649 0
920 -919 649 0
920 919 -649 0
-921 920 654 0
-921 -920 -654 0
921 -920 654 0
921 920 -654 0
-922 921 546 0
-922 -921 -546 0
922 -921 546 0
922 921 -546 0
-923 922 620 0
-923 -922 -620 0
923 -922 620 0
923 922 -620 0
923 0
c Rand xor clause 12 with 7 lits
-924 656 648 0
-924 -656 -648 0
924 -656 648 0
924 656 -648 0
-925 924 625 0
-925 -924 -625 0
925 -924 625 0
925 924 -625 0
-926 925 649 0
-926 -925 -649 0
926 -925 649 0
926 925 -649 0
-927 926 654 0
-927 -926 -654 0
927 -926 654 0
927 926 -654 0
-928 927 546 0
-928 -927 -546 0
928 -927 546 0
928 927 -546 0
-929 928 620 0
-929 -928 -620 0
929 -928 620 0
929 928 -620 0
929 0
c Rand xor clause 13 with 7 lits
-930 656 648 0
-930 -656 -648 0
930 -656 648 0
930 656 -648 0
-931 930 625 0
-931 -930 -625 0
931 -930 625 0
931 930 -625 0
-932 931 649 0
-932 -931 -649 0
932 -931 649 0
932 931 -649 0
-933 932 654 0
-933 -932 -654 0
933 -932 654 0
933 932 -654 0
-934 933 546 0
-934 -933 -546 0
934 -933 546 0
934 933 -546 0
-935 934 620 0
-935 -934 -620 0
935 -934 620 0
935 934 -620 0
935 0
c Rand xor clause 14 with 7 lits
-936 656 648 0
-936 -656 -648 0
936 -656 648 0
936 656 -648 0
-937 936 625 0
-937 -936 -625 0
937 -936 625 0
937 936 -625 0
-938 937 649 0
-938 -937 -649 0
938 -937 649 0
938 937 -649 0
-939 938 654 0
-939 -938 -654 0
939 -938 654 0
939 938 -654 0
-940 939 546 0
-940 -939 -546 0
940 -939 546 0
940 939 -546 0
-941 940 620 0
-941 -940 -620 0
941 -940 620 0
941 940 -620 0
941 0
c Rand xor clause 15 with 7 lits
