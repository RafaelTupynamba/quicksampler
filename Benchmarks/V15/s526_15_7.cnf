p cnf 452 1303
c
c CNF representation of circuit s526 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 217 Total inputs 24
c
c
p cnf 452 1303
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 0
c
c Gate #26: not (NOT_1): out = 25, in = 6 
25 6 0
-25 -6 0
c Gate #27: not (NOT_2): out = 26, in = 7 
26 7 0
-26 -7 0
c Gate #28: not (NOT_3): out = 27, in = 4 
27 4 0
-27 -4 0
c Gate #29: not (NOT_4): out = 28, in = 9 
28 9 0
-28 -9 0
c Gate #30: not (NOT_5): out = 29, in = 8 
29 8 0
-29 -8 0
c Gate #31: not (NOT_6): out = 30, in = 10 
30 10 0
-30 -10 0
c Gate #32: not (NOT_7): out = 31, in = 12 
31 12 0
-31 -12 0
c Gate #33: not (NOT_8): out = 32, in = 5 
32 5 0
-32 -5 0
c Gate #34: not (NOT_9): out = 33, in = 13 
33 13 0
-33 -13 0
c Gate #35: not (NOT_10): out = 34, in = 11 
34 11 0
-34 -11 0
c Gate #36: not (NOT_11): out = 35, in = 24 
35 24 0
-35 -24 0
c Gate #37: not (NOT_12): out = 36, in = 14 
36 14 0
-36 -14 0
c Gate #38: not (NOT_14): out = 37, in = 15 
37 15 0
-37 -15 0
c Gate #39: not (NOT_15): out = 38, in = 14 
38 14 0
-38 -14 0
c Gate #40: not (NOT_16): out = 39, in = 6 
39 6 0
-39 -6 0
c Gate #41: not (NOT_17): out = 40, in = 15 
40 15 0
-40 -15 0
c Gate #42: not (NOT_18): out = 41, in = 23 
41 23 0
-41 -23 0
c Gate #43: not (NOT_19): out = 42, in = 16 
42 16 0
-42 -16 0
c Gate #44: not (NOT_20): out = 43, in = 17 
43 17 0
-43 -17 0
c Gate #45: not (NOT_21): out = 44, in = 43 
44 43 0
-44 -43 0
c Gate #46: not (NOT_22): out = 45, in = 18 
45 18 0
-45 -18 0
c Gate #47: not (NOT_23): out = 46, in = 45 
46 45 0
-46 -45 0
c Gate #48: not (NOT_24): out = 47, in = 12 
47 12 0
-47 -12 0
c Gate #49: not (NOT_25): out = 48, in = 14 
48 14 0
-48 -14 0
c Gate #50: not (NOT_26): out = 49, in = 17 
49 17 0
-49 -17 0
c Gate #51: not (NOT_27): out = 50, in = 15 
50 15 0
-50 -15 0
c Gate #52: not (NOT_28): out = 51, in = 18 
51 18 0
-51 -18 0
c Gate #53: not (NOT_29): out = 52, in = 7 
52 7 0
-52 -7 0
c Gate #54: not (NOT_30): out = 53, in = 19 
53 19 0
-53 -19 0
c Gate #55: not (NOT_31): out = 54, in = 6 
54 6 0
-54 -6 0
c Gate #56: not (NOT_33): out = 55, in = 22 
55 22 0
-55 -22 0
c Gate #57: not (NOT_34): out = 56, in = 19 
56 19 0
-56 -19 0
c Gate #58: not (NOT_35): out = 57, in = 56 
57 56 0
-57 -56 0
c Gate #59: not (NOT_36): out = 58, in = 20 
58 20 0
-58 -20 0
c Gate #60: not (NOT_37): out = 59, in = 58 
59 58 0
-59 -58 0
c Gate #61: not (NOT_39): out = 60, in = 23 
60 23 0
-60 -23 0
c Gate #62: not (NOT_40): out = 61, in = 3 
61 3 0
-61 -3 0
c Gate #63: not (NOT_41): out = 62, in = 61 
62 61 0
-62 -61 0
c Gate #64: not (NOT_43): out = 63, in = 24 
63 24 0
-63 -24 0
c Gate #65: not (NOT_44): out = 64, in = 1 
64 1 0
-64 -1 0
c Gate #66: not (NOT_45): out = 65, in = 64 
65 64 0
-65 -64 0
c Gate #67: not (NOT_46): out = 66, in = 2 
66 2 0
-66 -2 0
c Gate #68: not (NOT_47): out = 67, in = 66 
67 66 0
-67 -66 0
c Gate #69: not (NOT_48): out = 68, in = 21 
68 21 0
-68 -21 0
c Gate #70: not (NOT_49): out = 69, in = 68 
69 68 0
-69 -68 0
c Gate #71: not (NOT_50): out = 70, in = 22 
70 22 0
-70 -22 0
c Gate #72: not (NOT_51): out = 71, in = 70 
71 70 0
-71 -70 0
c Gate #73: and (AND4_0): out = 72, in = 9 29 32 4 
-218 9 0
-218 29 0
218 -9 -29 0
-219 218 0
-219 32 0
219 -218 -32 0
-72 219 0
-72 4 0
72 -219 -4 0
c Gate #74: and (AND2_3): out = 73, in = 15 25 
-73 15 0
-73 25 0
73 -15 -25 0
c Gate #75: and (AND2_4): out = 74, in = 37 6 
-74 37 0
-74 6 0
74 -37 -6 0
c Gate #76: and (AND2_7): out = 75, in = 33 34 
-75 33 0
-75 34 0
75 -33 -34 0
c Gate #77: and (AND2_8): out = 76, in = 12 34 
-76 12 0
-76 34 0
76 -12 -34 0
c Gate #78: and (AND2_10): out = 77, in = 31 11 
-77 31 0
-77 11 0
77 -31 -11 0
c Gate #79: and (AND2_11): out = 78, in = 12 34 
-78 12 0
-78 34 0
78 -12 -34 0
c Gate #80: and (AND2_12): out = 79, in = 33 11 
-79 33 0
-79 11 0
79 -33 -11 0
c Gate #81: and (AND3_1): out = 80, in = 9 29 4 
-220 9 0
-220 29 0
220 -9 -29 0
-80 220 0
-80 4 0
80 -220 -4 0
c Gate #82: and (AND2_14): out = 81, in = 5 4 
-81 5 0
-81 4 0
81 -5 -4 0
c Gate #83: and (AND2_15): out = 82, in = 32 27 
-82 32 0
-82 27 0
82 -32 -27 0
c Gate #84: and (AND3_2): out = 83, in = 8 5 4 
-221 8 0
-221 5 0
221 -8 -5 0
-83 221 0
-83 4 0
83 -221 -4 0
c Gate #85: and (AND2_16): out = 84, in = 29 27 
-84 29 0
-84 27 0
84 -29 -27 0
c Gate #86: and (AND2_17): out = 85, in = 29 32 
-85 29 0
-85 32 0
85 -29 -32 0
c Gate #87: and (AND3_9): out = 86, in = 20 7 15 
-222 20 0
-222 7 0
222 -20 -7 0
-86 222 0
-86 15 0
86 -222 -15 0
c Gate #88: and (AND3_10): out = 87, in = 7 50 48 
-223 7 0
-223 50 0
223 -7 -50 0
-87 223 0
-87 48 0
87 -223 -48 0
c Gate #89: and (AND2_22): out = 88, in = 49 7 
-88 49 0
-88 7 0
88 -49 -7 0
c Gate #90: and (AND2_23): out = 89, in = 52 54 
-89 52 0
-89 54 0
89 -52 -54 0
c Gate #91: and (AND2_24): out = 90, in = 54 50 
-90 54 0
-90 50 0
90 -54 -50 0
c Gate #92: and (AND2_25): out = 91, in = 6 51 
-91 6 0
-91 51 0
91 -6 -51 0
c Gate #93: and (AND2_26): out = 92, in = 6 52 
-92 6 0
-92 52 0
92 -6 -52 0
c Gate #94: and (AND3_11): out = 93, in = 15 7 53 
-224 15 0
-224 7 0
224 -15 -7 0
-93 224 0
-93 53 0
93 -224 -53 0
c Gate #95: and (AND2_29): out = 94, in = 7 55 
-94 7 0
-94 55 0
94 -7 -55 0
c Gate #96: and (AND2_31): out = 95, in = 23 62 
-95 23 0
-95 62 0
95 -23 -62 0
c Gate #97: and (AND2_33): out = 96, in = 24 67 
-96 24 0
-96 67 0
96 -24 -67 0
c Gate #98: or (OR2_1): out = 97, in = 6 26 
97 -6 0
97 -26 0
-97 6 26 0
c Gate #99: or (OR4_0): out = 98, in = 28 29 32 27 
225 -28 0
225 -29 0
-225 28 29 0
226 -225 0
226 -32 0
-226 225 32 0
98 -226 0
98 -27 0
-98 226 27 0
c Gate #100: or (OR3_0): out = 99, in = 8 5 27 
227 -8 0
227 -5 0
-227 8 5 0
99 -227 0
99 -27 0
-99 227 27 0
c Gate #101: or (OR4_1): out = 100, in = 33 12 30 35 
228 -33 0
228 -12 0
-228 33 12 0
229 -228 0
229 -30 0
-229 228 30 0
100 -229 0
100 -35 0
-100 229 35 0
c Gate #102: or (OR3_1): out = 101, in = 34 30 35 
230 -34 0
230 -30 0
-230 34 30 0
101 -230 0
101 -35 0
-101 230 35 0
c Gate #103: or (OR2_2): out = 102, in = 11 10 
102 -11 0
102 -10 0
-102 11 10 0
c Gate #104: or (OR4_2): out = 103, in = 28 8 5 27 
231 -28 0
231 -8 0
-231 28 8 0
232 -231 0
232 -5 0
-232 231 5 0
103 -232 0
103 -27 0
-103 232 27 0
c Gate #105: or (OR4_6): out = 104, in = 52 6 15 14 
233 -52 0
233 -6 0
-233 52 6 0
234 -233 0
234 -15 0
-234 233 15 0
104 -234 0
104 -14 0
-104 234 14 0
c Gate #106: or (OR2_3): out = 105, in = 19 54 
105 -19 0
105 -54 0
-105 19 54 0
c Gate #107: or (OR2_4): out = 106, in = 7 54 
106 -7 0
106 -54 0
-106 7 54 0
c Gate #108: or (OR3_5): out = 107, in = 6 15 48 
235 -6 0
235 -15 0
-235 6 15 0
107 -235 0
107 -48 0
-107 235 48 0
c Gate #109: or (OR2_5): out = 108, in = 21 50 
108 -21 0
108 -50 0
-108 21 50 0
c Gate #110: or (OR2_6): out = 109, in = 21 54 
109 -21 0
109 -54 0
-109 21 54 0
c Gate #111: or (OR2_8): out = 110, in = 7 54 
110 -7 0
110 -54 0
-110 7 54 0
c Gate #112: or (OR2_9): out = 111, in = 7 14 
111 -7 0
111 -14 0
-111 7 14 0
c Gate #113: or (OR2_10): out = 112, in = 6 15 
112 -6 0
112 -15 0
-112 6 15 0
c Gate #114: or (OR4_8): out = 113, in = 52 6 15 14 
236 -52 0
236 -6 0
-236 52 6 0
237 -236 0
237 -15 0
-237 236 15 0
113 -237 0
113 -14 0
-113 237 14 0
c Gate #115: or (OR3_6): out = 114, in = 7 50 48 
238 -7 0
238 -50 0
-238 7 50 0
114 -238 0
114 -48 0
-114 238 48 0
c Gate #116: or (OR3_7): out = 115, in = 18 52 50 
239 -18 0
239 -52 0
-239 18 52 0
115 -239 0
115 -50 0
-115 239 50 0
c Gate #117: nand (NAND3_0): out = 116, in = 10 34 31 
-241 10 0
-241 34 0
241 -10 -34 0
-240 241 0
-240 31 0
240 -241 -31 0
116 240 0
-116 -240 0
c Gate #118: nand (NAND4_1): out = 117, in = 13 14 15 25 
-243 13 0
-243 14 0
243 -13 -14 0
-244 243 0
-244 15 0
244 -243 -15 0
-242 244 0
-242 25 0
242 -244 -25 0
117 242 0
-117 -242 0
c Gate #119: nand (NAND4_2): out = 118, in = 14 15 6 26 
-246 14 0
-246 15 0
246 -14 -15 0
-247 246 0
-247 6 0
247 -246 -6 0
-245 247 0
-245 26 0
245 -247 -26 0
118 245 0
-118 -245 0
c Gate #120: nand (NAND3_1): out = 119, in = 4 5 8 
-249 4 0
-249 5 0
249 -4 -5 0
-248 249 0
-248 8 0
248 -249 -8 0
119 248 0
-119 -248 0
c Gate #121: nand (NAND2_2): out = 120, in = 35 103 
120 35 0
120 103 0
-120 -35 -103 0
c Gate #122: nand (NAND4_4): out = 121, in = 4 32 29 9 
-251 4 0
-251 32 0
251 -4 -32 0
-252 251 0
-252 29 0
252 -251 -29 0
-250 252 0
-250 9 0
250 -252 -9 0
121 250 0
-121 -250 0
c Gate #123: nand (NAND4_5): out = 122, in = 10 34 31 13 
-254 10 0
-254 34 0
254 -10 -34 0
-255 254 0
-255 31 0
255 -254 -31 0
-253 255 0
-253 13 0
253 -255 -13 0
122 253 0
-122 -253 0
c Gate #124: nand (NAND2_4): out = 123, in = 10 34 
123 10 0
123 34 0
-123 -10 -34 0
c Gate #125: nand (NAND4_6): out = 124, in = 31 13 14 37 
-257 31 0
-257 13 0
257 -31 -13 0
-258 257 0
-258 14 0
258 -257 -14 0
-256 258 0
-256 37 0
256 -258 -37 0
124 256 0
-124 -256 0
c Gate #126: nand (NAND4_10): out = 125, in = 7 109 108 107 
-260 7 0
-260 109 0
260 -7 -109 0
-261 260 0
-261 108 0
261 -260 -108 0
-259 261 0
-259 107 0
259 -261 -107 0
125 259 0
-125 -259 0
c Gate #127: nor (NOR4_0): out = 126, in = 27 5 8 28 
263 -27 0
263 -5 0
-263 27 5 0
264 -263 0
264 -8 0
-264 263 8 0
262 -264 0
262 -28 0
-262 264 28 0
126 262 0
-126 -262 0
c Gate #128: nor (NOR2_0): out = 127, in = 33 36 
-127 -33 0
-127 -36 0
127 33 36 0
c Gate #129: nor (NOR2_1): out = 128, in = 65 4 
-128 -65 0
-128 -4 0
128 65 4 0
c Gate #130: nor (NOR4_1): out = 129, in = 65 82 81 80 
266 -65 0
266 -82 0
-266 65 82 0
267 -266 0
267 -81 0
-267 266 81 0
265 -267 0
265 -80 0
-265 267 80 0
129 265 0
-129 -265 0
c Gate #131: nor (NOR2_2): out = 130, in = 24 72 
-130 -24 0
-130 -72 0
130 24 72 0
c Gate #132: nor (NOR4_4): out = 131, in = 65 85 84 83 
269 -65 0
269 -85 0
-269 65 85 0
270 -269 0
270 -84 0
-270 269 84 0
268 -270 0
268 -83 0
-268 270 83 0
131 268 0
-131 -268 0
c Gate #133: nor (NOR2_4): out = 132, in = 28 30 
-132 -28 0
-132 -30 0
132 28 30 0
c Gate #134: nor (NOR2_6): out = 133, in = 76 75 
-133 -76 0
-133 -75 0
133 76 75 0
c Gate #135: nor (NOR3_3): out = 134, in = 8 28 30 
272 -8 0
272 -28 0
-272 8 28 0
271 -272 0
271 -30 0
-271 272 30 0
134 271 0
-134 -271 0
c Gate #136: nor (NOR3_4): out = 135, in = 79 78 77 
274 -79 0
274 -78 0
-274 79 78 0
273 -274 0
273 -77 0
-273 274 77 0
135 273 0
-135 -273 0
c Gate #137: nor (NOR3_5): out = 136, in = 12 33 36 
276 -12 0
276 -33 0
-276 12 33 0
275 -276 0
275 -36 0
-275 276 36 0
136 275 0
-136 -275 0
c Gate #138: nor (NOR2_9): out = 137, in = 39 7 
-137 -39 0
-137 -7 0
137 39 7 0
c Gate #139: nor (NOR2_12): out = 138, in = 87 86 
-138 -87 0
-138 -86 0
138 87 86 0
c Gate #140: and (AND3_3): out = 139, in = 121 35 30 
-277 121 0
-277 35 0
277 -121 -35 0
-139 277 0
-139 30 0
139 -277 -30 0
c Gate #141: and (AND4_3): out = 140, in = 133 134 4 32 
-278 133 0
-278 134 0
278 -133 -134 0
-279 278 0
-279 4 0
279 -278 -4 0
-140 279 0
-140 32 0
140 -279 -32 0
c Gate #142: or (OR4_3): out = 141, in = 130 117 116 65 
280 -130 0
280 -117 0
-280 130 117 0
281 -280 0
281 -116 0
-281 280 116 0
141 -281 0
141 -65 0
-141 281 65 0
c Gate #143: or (OR4_4): out = 142, in = 130 118 122 65 
282 -130 0
282 -118 0
-282 130 118 0
283 -282 0
283 -122 0
-283 282 122 0
142 -283 0
142 -65 0
-142 283 65 0
c Gate #144: and (AND3_4): out = 143, in = 121 35 34 
-284 121 0
-284 35 0
284 -121 -35 0
-143 284 0
-143 34 0
143 -284 -34 0
c Gate #145: and (AND4_4): out = 144, in = 120 10 11 12 
-285 120 0
-285 10 0
285 -120 -10 0
-286 285 0
-286 11 0
286 -285 -11 0
-144 286 0
-144 12 0
144 -286 -12 0
c Gate #146: and (AND3_5): out = 145, in = 121 35 31 
-287 121 0
-287 35 0
287 -121 -35 0
-145 287 0
-145 31 0
145 -287 -31 0
c Gate #147: and (AND4_5): out = 146, in = 135 134 4 32 
-288 135 0
-288 134 0
288 -135 -134 0
-289 288 0
-289 4 0
289 -288 -4 0
-146 289 0
-146 32 0
146 -289 -32 0
c Gate #148: and (AND3_6): out = 147, in = 121 35 33 
-290 121 0
-290 35 0
290 -121 -35 0
-147 290 0
-147 33 0
147 -290 -33 0
c Gate #149: and (AND3_7): out = 148, in = 135 24 10 
-291 135 0
-291 24 0
291 -135 -24 0
-148 291 0
-148 10 0
148 -291 -10 0
c Gate #150: and (AND4_6): out = 149, in = 120 136 10 34 
-292 120 0
-292 136 0
292 -120 -136 0
-293 292 0
-293 10 0
293 -292 -10 0
-149 293 0
-149 34 0
149 -293 -34 0
c Gate #151: and (AND3_8): out = 150, in = 121 35 36 
-294 121 0
-294 35 0
294 -121 -35 0
-150 294 0
-150 36 0
150 -294 -36 0
c Gate #152: and (AND2_19): out = 151, in = 122 36 
-151 122 0
-151 36 0
151 -122 -36 0
c Gate #153: and (AND4_7): out = 152, in = 137 41 14 40 
-295 137 0
-295 41 0
295 -137 -41 0
-296 295 0
-296 14 0
296 -295 -14 0
-152 296 0
-152 40 0
152 -296 -40 0
c Gate #154: and (AND4_8): out = 153, in = 137 41 14 40 
-297 137 0
-297 41 0
297 -137 -41 0
-298 297 0
-298 14 0
298 -297 -14 0
-153 298 0
-153 40 0
153 -298 -40 0
c Gate #155: nand (NAND4_0): out = 154, in = 127 10 34 31 
-300 127 0
-300 10 0
300 -127 -10 0
-301 300 0
-301 34 0
301 -300 -34 0
-299 301 0
-299 31 0
299 -301 -31 0
154 299 0
-154 -299 0
c Gate #156: and (AND2_0): out = 155, in = 121 35 
-155 121 0
-155 35 0
155 -121 -35 0
c Gate #157: not (NOT_42): out = 156, in = 67 
156 67 0
-156 -67 0
c Gate #158: and (AND2_1): out = 157, in = 121 35 
-157 121 0
-157 35 0
157 -121 -35 0
c Gate #159: nand (NAND4_7): out = 158, in = 137 23 38 40 
-303 137 0
-303 23 0
303 -137 -23 0
-304 303 0
-304 38 0
304 -303 -38 0
-302 304 0
-302 40 0
302 -304 -40 0
158 302 0
-158 -302 0
c Gate #160: and (AND2_2): out = 159, in = 121 35 
-159 121 0
-159 35 0
159 -121 -35 0
c Gate #161: nor (NOR4_2): out = 160, in = 122 36 37 157 
306 -122 0
306 -36 0
-306 122 36 0
307 -306 0
307 -37 0
-307 306 37 0
305 -307 0
305 -157 0
-305 307 157 0
160 305 0
-160 -305 0
c Gate #162: not (NOT_38): out = 161, in = 62 
161 62 0
-161 -62 0
c Gate #163: nor (NOR4_3): out = 162, in = 154 74 73 159 
309 -154 0
309 -74 0
-309 154 74 0
310 -309 0
310 -73 0
-310 309 73 0
308 -310 0
308 -159 0
-308 310 159 0
162 308 0
-162 -308 0
c Gate #164: and (AND2_32): out = 163, in = 63 156 
-163 63 0
-163 156 0
163 -63 -156 0
c Gate #165: or (OR2_0): out = 164, in = 126 24 
164 -126 0
164 -24 0
-164 126 24 0
c Gate #166: not (NOT_0): out = 165, in = 65 
165 65 0
-165 -65 0
c Gate #167: nor (NOR3_6): out = 166, in = 122 36 155 
312 -122 0
312 -36 0
-312 122 36 0
311 -312 0
311 -155 0
-311 312 155 0
166 311 0
-166 -311 0
c Gate #168: and (AND2_18): out = 167, in = 119 28 
-167 119 0
-167 28 0
167 -119 -28 0
c Gate #169: and (AND4_2): out = 168, in = 132 4 32 29 
-313 132 0
-313 4 0
313 -132 -4 0
-314 313 0
-314 32 0
314 -313 -32 0
-168 314 0
-168 29 0
168 -314 -29 0
c Gate #170: nor (NOR3_10): out = 169, in = 65 96 163 
316 -65 0
316 -96 0
-316 65 96 0
315 -316 0
315 -163 0
-315 316 163 0
169 315 0
-169 -315 0
c Gate #171: or (OR3_4): out = 170, in = 166 65 37 
317 -166 0
317 -65 0
-317 166 65 0
170 -317 0
170 -37 0
-170 317 37 0
c Gate #172: or (OR3_2): out = 171, in = 160 65 25 
318 -160 0
318 -65 0
-318 160 65 0
171 -318 0
171 -25 0
-171 318 25 0
c Gate #173: and (AND4_1): out = 172, in = 12 11 10 165 
-319 12 0
-319 11 0
319 -12 -11 0
-320 319 0
-320 10 0
320 -319 -10 0
-172 320 0
-172 165 0
172 -320 -165 0
c Gate #174: and (AND2_13): out = 173, in = 13 165 
-173 13 0
-173 165 0
173 -13 -165 0
c Gate #175: nand (NAND2_5): out = 174, in = 97 164 
174 97 0
174 164 0
-174 -97 -164 0
c Gate #176: or (OR3_3): out = 175, in = 162 65 26 
321 -162 0
321 -65 0
-321 162 65 0
175 -321 0
175 -26 0
-175 321 26 0
c Gate #177: and (AND2_20): out = 176, in = 158 42 
-176 158 0
-176 42 0
176 -158 -42 0
c Gate #178: and (AND2_30): out = 177, in = 60 161 
-177 60 0
-177 161 0
177 -60 -161 0
c Gate #179: nand (NAND2_0): out = 178, in = 171 141 
178 171 0
178 141 0
-178 -171 -141 0
c Gate #180: and (AND2_21): out = 179, in = 158 42 
-179 158 0
-179 42 0
179 -158 -42 0
c Gate #181: not (NOT_13): out = 180, in = 165 
180 165 0
-180 -165 0
c Gate #182: and (AND2_5): out = 181, in = 30 165 
-181 30 0
-181 165 0
181 -30 -165 0
c Gate #183: and (AND2_6): out = 182, in = 165 35 
-182 165 0
-182 35 0
182 -165 -35 0
c Gate #184: nor (NOR2_8): out = 183, in = 173 172 
-183 -173 0
-183 -172 0
183 173 172 0
c Gate #185: nor (NOR4_6): out = 184, in = 180 151 150 149 
323 -180 0
323 -151 0
-323 180 151 0
324 -323 0
324 -150 0
-324 323 150 0
322 -324 0
322 -149 0
-322 324 149 0
184 322 0
-184 -322 0
c Gate #186: nand (NAND2_1): out = 185, in = 175 142 
185 175 0
185 142 0
-185 -175 -142 0
c Gate #187: and (AND3_0): out = 186, in = 11 10 165 
-325 11 0
-325 10 0
325 -11 -10 0
-186 325 0
-186 165 0
186 -325 -165 0
c Gate #188: nor (NOR3_7): out = 187, in = 65 176 152 
327 -65 0
327 -176 0
-327 65 176 0
326 -327 0
326 -152 0
-326 327 152 0
187 326 0
-187 -326 0
c Gate #189: and (AND2_9): out = 188, in = 12 165 
-188 12 0
-188 165 0
188 -12 -165 0
c Gate #190: nand (NAND3_2): out = 189, in = 165 99 98 
-329 165 0
-329 99 0
329 -165 -99 0
-328 329 0
-328 98 0
328 -329 -98 0
189 328 0
-189 -328 0
c Gate #191: nor (NOR2_14): out = 190, in = 179 153 
-190 -179 0
-190 -153 0
190 179 153 0
c Gate #192: nor (NOR3_9): out = 191, in = 65 95 177 
331 -65 0
331 -95 0
-331 65 95 0
330 -331 0
330 -177 0
-330 331 177 0
191 330 0
-191 -330 0
c Gate #193: nand (NAND4_3): out = 192, in = 165 102 101 100 
-333 165 0
-333 102 0
333 -165 -102 0
-334 333 0
-334 101 0
334 -333 -101 0
-332 334 0
-332 100 0
332 -334 -100 0
192 332 0
-192 -332 0
c Gate #194: not (NOT_32): out = 193, in = 190 
193 190 0
-193 -190 0
c Gate #195: nor (NOR2_5): out = 194, in = 182 181 
-194 -182 0
-194 -181 0
194 182 181 0
c Gate #196: nor (NOR3_1): out = 195, in = 192 143 140 
336 -192 0
336 -143 0
-336 192 143 0
335 -336 0
335 -140 0
-335 336 140 0
195 335 0
-195 -335 0
c Gate #197: nor (NOR2_7): out = 196, in = 188 186 
-196 -188 0
-196 -186 0
196 188 186 0
c Gate #198: nor (NOR4_5): out = 197, in = 183 148 147 146 
338 -183 0
338 -148 0
-338 183 148 0
339 -338 0
339 -147 0
-339 338 147 0
337 -339 0
337 -146 0
-337 339 146 0
197 337 0
-197 -337 0
c Gate #199: and (AND3_12): out = 198, in = 138 193 54 
-340 138 0
-340 193 0
340 -138 -193 0
-198 340 0
-198 54 0
198 -340 -54 0
c Gate #200: nand (NAND4_11): out = 199, in = 193 112 111 110 
-342 193 0
-342 112 0
342 -193 -112 0
-343 342 0
-343 111 0
343 -342 -111 0
-341 343 0
-341 110 0
341 -343 -110 0
199 341 0
-199 -341 0
c Gate #201: and (AND2_27): out = 200, in = 125 193 
-200 125 0
-200 193 0
200 -125 -193 0
c Gate #202: and (AND2_28): out = 201, in = 190 12 
-201 190 0
-201 12 0
201 -190 -12 0
c Gate #203: or (OR4_5): out = 202, in = 174 124 123 65 
344 -174 0
344 -124 0
-344 174 124 0
345 -344 0
345 -123 0
-345 344 123 0
202 -345 0
202 -65 0
-202 345 65 0
c Gate #204: nand (NAND2_3): out = 203, in = 170 202 
203 170 0
203 202 0
-203 -170 -202 0
c Gate #205: or (OR4_7): out = 204, in = 20 52 54 190 
346 -20 0
346 -52 0
-346 20 52 0
347 -346 0
347 -54 0
-347 346 54 0
204 -347 0
204 -190 0
-204 347 190 0
c Gate #206: or (OR2_7): out = 205, in = 47 193 
205 -47 0
205 -193 0
-205 47 193 0
c Gate #207: nor (NOR4_7): out = 206, in = 190 90 89 88 
349 -190 0
349 -90 0
-349 190 90 0
350 -349 0
350 -89 0
-350 349 89 0
348 -350 0
348 -88 0
-348 350 88 0
206 348 0
-206 -348 0
c Gate #208: nand (NAND4_8): out = 207, in = 193 115 114 113 
-352 193 0
-352 115 0
352 -193 -115 0
-353 352 0
-353 114 0
353 -352 -114 0
-351 353 0
-351 113 0
351 -353 -113 0
207 351 0
-207 -351 0
c Gate #209: nor (NOR2_13): out = 208, in = 201 200 
-208 -201 0
-208 -200 0
208 201 200 0
c Gate #210: nand (NAND4_9): out = 209, in = 193 106 105 104 
-355 193 0
-355 106 0
355 -193 -106 0
-356 355 0
-356 105 0
356 -355 -105 0
-354 356 0
-354 104 0
354 -356 -104 0
209 354 0
-209 -354 0
c Gate #211: nor (NOR2_15): out = 210, in = 199 94 
-210 -199 0
-210 -94 0
210 199 94 0
c Gate #212: nor (NOR2_3): out = 211, in = 189 167 
-211 -189 0
-211 -167 0
211 189 167 0
c Gate #213: nor (NOR3_0): out = 212, in = 194 139 168 
358 -194 0
358 -139 0
-358 194 139 0
357 -358 0
357 -168 0
-357 358 168 0
212 357 0
-212 -357 0
c Gate #214: nand (NAND2_6): out = 213, in = 205 204 
213 205 0
213 204 0
-213 -205 -204 0
c Gate #215: nor (NOR3_8): out = 214, in = 207 92 91 
360 -207 0
360 -92 0
-360 207 92 0
359 -360 0
359 -91 0
-359 360 91 0
214 359 0
-214 -359 0
c Gate #216: nor (NOR2_10): out = 215, in = 209 93 
-215 -209 0
-215 -93 0
215 209 93 0
c Gate #217: nor (NOR2_11): out = 216, in = 213 198 
-216 -213 0
-216 -198 0
216 213 198 0
c Gate #218: nor (NOR3_2): out = 217, in = 196 145 144 
362 -196 0
362 -145 0
-362 196 145 0
361 -362 0
361 -144 0
-361 362 144 0
217 361 0
-217 -361 0
c
c Random XOR constraints start here
c
-363 169 191 0
-363 -169 -191 0
363 -169 191 0
363 169 -191 0
-364 363 215 0
-364 -363 -215 0
364 -363 215 0
364 363 -215 0
-365 364 197 0
-365 -364 -197 0
365 -364 197 0
365 364 -197 0
-366 365 211 0
-366 -365 -211 0
366 -365 211 0
366 365 -211 0
-367 366 203 0
-367 -366 -203 0
367 -366 203 0
367 366 -203 0
-368 367 59 0
-368 -367 -59 0
368 -367 59 0
368 367 -59 0
368 0
c Rand xor clause 1 with 7 lits
-369 169 191 0
-369 -169 -191 0
369 -169 191 0
369 169 -191 0
-370 369 215 0
-370 -369 -215 0
370 -369 215 0
370 369 -215 0
-371 370 197 0
-371 -370 -197 0
371 -370 197 0
371 370 -197 0
-372 371 211 0
-372 -371 -211 0
372 -371 211 0
372 371 -211 0
-373 372 203 0
-373 -372 -203 0
373 -372 203 0
373 372 -203 0
-374 373 59 0
-374 -373 -59 0
374 -373 59 0
374 373 -59 0
374 0
c Rand xor clause 2 with 7 lits
-375 169 191 0
-375 -169 -191 0
375 -169 191 0
375 169 -191 0
-376 375 215 0
-376 -375 -215 0
376 -375 215 0
376 375 -215 0
-377 376 197 0
-377 -376 -197 0
377 -376 197 0
377 376 -197 0
-378 377 211 0
-378 -377 -211 0
378 -377 211 0
378 377 -211 0
-379 378 203 0
-379 -378 -203 0
379 -378 203 0
379 378 -203 0
-380 379 59 0
-380 -379 -59 0
380 -379 59 0
380 379 -59 0
380 0
c Rand xor clause 3 with 7 lits
-381 169 191 0
-381 -169 -191 0
381 -169 191 0
381 169 -191 0
-382 381 215 0
-382 -381 -215 0
382 -381 215 0
382 381 -215 0
-383 382 197 0
-383 -382 -197 0
383 -382 197 0
383 382 -197 0
-384 383 211 0
-384 -383 -211 0
384 -383 211 0
384 383 -211 0
-385 384 203 0
-385 -384 -203 0
385 -384 203 0
385 384 -203 0
-386 385 59 0
-386 -385 -59 0
386 -385 59 0
386 385 -59 0
386 0
c Rand xor clause 4 with 7 lits
-387 169 191 0
-387 -169 -191 0
387 -169 191 0
387 169 -191 0
-388 387 215 0
-388 -387 -215 0
388 -387 215 0
388 387 -215 0
-389 388 197 0
-389 -388 -197 0
389 -388 197 0
389 388 -197 0
-390 389 211 0
-390 -389 -211 0
390 -389 211 0
390 389 -211 0
-391 390 203 0
-391 -390 -203 0
391 -390 203 0
391 390 -203 0
-392 391 59 0
-392 -391 -59 0
392 -391 59 0
392 391 -59 0
392 0
c Rand xor clause 5 with 7 lits
-393 169 191 0
-393 -169 -191 0
393 -169 191 0
393 169 -191 0
-394 393 215 0
-394 -393 -215 0
394 -393 215 0
394 393 -215 0
-395 394 197 0
-395 -394 -197 0
395 -394 197 0
395 394 -197 0
-396 395 211 0
-396 -395 -211 0
396 -395 211 0
396 395 -211 0
-397 396 203 0
-397 -396 -203 0
397 -396 203 0
397 396 -203 0
-398 397 59 0
-398 -397 -59 0
398 -397 59 0
398 397 -59 0
398 0
c Rand xor clause 6 with 7 lits
-399 169 191 0
-399 -169 -191 0
399 -169 191 0
399 169 -191 0
-400 399 215 0
-400 -399 -215 0
400 -399 215 0
400 399 -215 0
-401 400 197 0
-401 -400 -197 0
401 -400 197 0
401 400 -197 0
-402 401 211 0
-402 -401 -211 0
402 -401 211 0
402 401 -211 0
-403 402 203 0
-403 -402 -203 0
403 -402 203 0
403 402 -203 0
-404 403 59 0
-404 -403 -59 0
404 -403 59 0
404 403 -59 0
404 0
c Rand xor clause 7 with 7 lits
-405 169 191 0
-405 -169 -191 0
405 -169 191 0
405 169 -191 0
-406 405 215 0
-406 -405 -215 0
406 -405 215 0
406 405 -215 0
-407 406 197 0
-407 -406 -197 0
407 -406 197 0
407 406 -197 0
-408 407 211 0
-408 -407 -211 0
408 -407 211 0
408 407 -211 0
-409 408 203 0
-409 -408 -203 0
409 -408 203 0
409 408 -203 0
-410 409 59 0
-410 -409 -59 0
410 -409 59 0
410 409 -59 0
410 0
c Rand xor clause 8 with 7 lits
-411 169 191 0
-411 -169 -191 0
411 -169 191 0
411 169 -191 0
-412 411 215 0
-412 -411 -215 0
412 -411 215 0
412 411 -215 0
-413 412 197 0
-413 -412 -197 0
413 -412 197 0
413 412 -197 0
-414 413 211 0
-414 -413 -211 0
414 -413 211 0
414 413 -211 0
-415 414 203 0
-415 -414 -203 0
415 -414 203 0
415 414 -203 0
-416 415 59 0
-416 -415 -59 0
416 -415 59 0
416 415 -59 0
416 0
c Rand xor clause 9 with 7 lits
-417 169 191 0
-417 -169 -191 0
417 -169 191 0
417 169 -191 0
-418 417 215 0
-418 -417 -215 0
418 -417 215 0
418 417 -215 0
-419 418 197 0
-419 -418 -197 0
419 -418 197 0
419 418 -197 0
-420 419 211 0
-420 -419 -211 0
420 -419 211 0
420 419 -211 0
-421 420 203 0
-421 -420 -203 0
421 -420 203 0
421 420 -203 0
-422 421 59 0
-422 -421 -59 0
422 -421 59 0
422 421 -59 0
422 0
c Rand xor clause 10 with 7 lits
-423 169 191 0
-423 -169 -191 0
423 -169 191 0
423 169 -191 0
-424 423 215 0
-424 -423 -215 0
424 -423 215 0
424 423 -215 0
-425 424 197 0
-425 -424 -197 0
425 -424 197 0
425 424 -197 0
-426 425 211 0
-426 -425 -211 0
426 -425 211 0
426 425 -211 0
-427 426 203 0
-427 -426 -203 0
427 -426 203 0
427 426 -203 0
-428 427 59 0
-428 -427 -59 0
428 -427 59 0
428 427 -59 0
428 0
c Rand xor clause 11 with 7 lits
-429 169 191 0
-429 -169 -191 0
429 -169 191 0
429 169 -191 0
-430 429 215 0
-430 -429 -215 0
430 -429 215 0
430 429 -215 0
-431 430 197 0
-431 -430 -197 0
431 -430 197 0
431 430 -197 0
-432 431 211 0
-432 -431 -211 0
432 -431 211 0
432 431 -211 0
-433 432 203 0
-433 -432 -203 0
433 -432 203 0
433 432 -203 0
-434 433 59 0
-434 -433 -59 0
434 -433 59 0
434 433 -59 0
434 0
c Rand xor clause 12 with 7 lits
-435 169 191 0
-435 -169 -191 0
435 -169 191 0
435 169 -191 0
-436 435 215 0
-436 -435 -215 0
436 -435 215 0
436 435 -215 0
-437 436 197 0
-437 -436 -197 0
437 -436 197 0
437 436 -197 0
-438 437 211 0
-438 -437 -211 0
438 -437 211 0
438 437 -211 0
-439 438 203 0
-439 -438 -203 0
439 -438 203 0
439 438 -203 0
-440 439 59 0
-440 -439 -59 0
440 -439 59 0
440 439 -59 0
440 0
c Rand xor clause 13 with 7 lits
-441 169 191 0
-441 -169 -191 0
441 -169 191 0
441 169 -191 0
-442 441 215 0
-442 -441 -215 0
442 -441 215 0
442 441 -215 0
-443 442 197 0
-443 -442 -197 0
443 -442 197 0
443 442 -197 0
-444 443 211 0
-444 -443 -211 0
444 -443 211 0
444 443 -211 0
-445 444 203 0
-445 -444 -203 0
445 -444 203 0
445 444 -203 0
-446 445 59 0
-446 -445 -59 0
446 -445 59 0
446 445 -59 0
446 0
c Rand xor clause 14 with 7 lits
-447 169 191 0
-447 -169 -191 0
447 -169 191 0
447 169 -191 0
-448 447 215 0
-448 -447 -215 0
448 -447 215 0
448 447 -215 0
-449 448 197 0
-449 -448 -197 0
449 -448 197 0
449 448 -197 0
-450 449 211 0
-450 -449 -211 0
450 -449 211 0
450 449 -211 0
-451 450 203 0
-451 -450 -203 0
451 -450 203 0
451 450 -203 0
-452 451 59 0
-452 -451 -59 0
452 -451 59 0
452 451 -59 0
452 0
c Rand xor clause 15 with 7 lits
