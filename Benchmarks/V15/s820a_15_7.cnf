p cnf 685 1987
c
c CNF representation of circuit s820 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 312 Total inputs 23
c
c
p cnf 685 1987
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 0
c
c Gate #25: not (NOT_0): out = 24, in = 1 
24 1 0
-24 -1 0
c Gate #26: not (NOT_1): out = 25, in = 2 
25 2 0
-25 -2 0
c Gate #27: not (NOT_2): out = 26, in = 3 
26 3 0
-26 -3 0
c Gate #28: not (NOT_3): out = 27, in = 5 
27 5 0
-27 -5 0
c Gate #29: not (NOT_4): out = 28, in = 6 
28 6 0
-28 -6 0
c Gate #30: not (NOT_5): out = 29, in = 7 
29 7 0
-29 -7 0
c Gate #31: not (NOT_6): out = 30, in = 8 
30 8 0
-30 -8 0
c Gate #32: not (NOT_7): out = 31, in = 9 
31 9 0
-31 -9 0
c Gate #33: not (NOT_8): out = 32, in = 10 
32 10 0
-32 -10 0
c Gate #34: not (NOT_9): out = 33, in = 11 
33 11 0
-33 -11 0
c Gate #35: not (NOT_10): out = 34, in = 12 
34 12 0
-34 -12 0
c Gate #36: not (NOT_11): out = 35, in = 13 
35 13 0
-35 -13 0
c Gate #37: not (NOT_12): out = 36, in = 14 
36 14 0
-36 -14 0
c Gate #38: not (NOT_13): out = 37, in = 16 
37 16 0
-37 -16 0
c Gate #39: not (NOT_14): out = 38, in = 21 
38 21 0
-38 -21 0
c Gate #40: not (NOT_15): out = 39, in = 17 
39 17 0
-39 -17 0
c Gate #41: not (NOT_16): out = 40, in = 22 
40 22 0
-40 -22 0
c Gate #42: not (NOT_17): out = 41, in = 23 
41 23 0
-41 -23 0
c Gate #43: not (NOT_18): out = 42, in = 18 
42 18 0
-42 -18 0
c Gate #44: not (NOT_19): out = 43, in = 18 
43 18 0
-43 -18 0
c Gate #45: not (NOT_20): out = 44, in = 18 
44 18 0
-44 -18 0
c Gate #46: not (NOT_21): out = 45, in = 18 
45 18 0
-45 -18 0
c Gate #47: not (NOT_22): out = 46, in = 18 
46 18 0
-46 -18 0
c Gate #48: not (NOT_23): out = 47, in = 19 
47 19 0
-47 -19 0
c Gate #49: not (NOT_24): out = 48, in = 20 
48 20 0
-48 -20 0
c Gate #50: not (NOT_25): out = 49, in = 19 
49 19 0
-49 -19 0
c Gate #51: not (NOT_26): out = 50, in = 49 
50 49 0
-50 -49 0
c Gate #52: not (NOT_27): out = 51, in = 16 
51 16 0
-51 -16 0
c Gate #53: not (NOT_28): out = 52, in = 51 
52 51 0
-52 -51 0
c Gate #54: not (NOT_29): out = 53, in = 40 
53 40 0
-53 -40 0
c Gate #55: not (NOT_30): out = 54, in = 53 
54 53 0
-54 -53 0
c Gate #56: not (NOT_31): out = 55, in = 19 
55 19 0
-55 -19 0
c Gate #57: not (NOT_32): out = 56, in = 55 
56 55 0
-56 -55 0
c Gate #58: and (AND2_0): out = 57, in = 5 21 
-57 5 0
-57 21 0
57 -5 -21 0
c Gate #59: and (AND2_1): out = 58, in = 23 4 
-58 23 0
-58 4 0
58 -23 -4 0
c Gate #60: and (AND2_2): out = 59, in = 23 2 
-59 23 0
-59 2 0
59 -23 -2 0
c Gate #61: and (AND2_3): out = 60, in = 23 22 
-60 23 0
-60 22 0
60 -23 -22 0
c Gate #62: and (AND2_4): out = 61, in = 23 4 
-61 23 0
-61 4 0
61 -23 -4 0
c Gate #63: and (AND2_5): out = 62, in = 23 2 
-62 23 0
-62 2 0
62 -23 -2 0
c Gate #64: and (AND2_6): out = 63, in = 23 22 
-63 23 0
-63 22 0
63 -23 -22 0
c Gate #65: and (AND2_7): out = 64, in = 23 22 
-64 23 0
-64 22 0
64 -23 -22 0
c Gate #66: and (AND2_8): out = 65, in = 23 22 
-65 23 0
-65 22 0
65 -23 -22 0
c Gate #67: and (AND3_0): out = 66, in = 23 21 20 
-313 23 0
-313 21 0
313 -23 -21 0
-66 313 0
-66 20 0
66 -313 -20 0
c Gate #68: and (AND3_1): out = 67, in = 23 21 20 
-314 23 0
-314 21 0
314 -23 -21 0
-67 314 0
-67 20 0
67 -314 -20 0
c Gate #69: and (AND3_2): out = 68, in = 20 19 24 
-315 20 0
-315 19 0
315 -20 -19 0
-68 315 0
-68 24 0
68 -315 -24 0
c Gate #70: and (AND3_3): out = 69, in = 23 19 24 
-316 23 0
-316 19 0
316 -23 -19 0
-69 316 0
-69 24 0
69 -316 -24 0
c Gate #71: and (AND3_4): out = 70, in = 23 19 24 
-317 23 0
-317 19 0
317 -23 -19 0
-70 317 0
-70 24 0
70 -317 -24 0
c Gate #72: and (AND2_9): out = 71, in = 34 33 
-71 34 0
-71 33 0
71 -34 -33 0
c Gate #73: and (AND2_10): out = 72, in = 35 34 
-72 35 0
-72 34 0
72 -35 -34 0
c Gate #74: and (AND2_11): out = 73, in = 38 20 
-73 38 0
-73 20 0
73 -38 -20 0
c Gate #75: and (AND2_12): out = 74, in = 37 38 
-74 37 0
-74 38 0
74 -37 -38 0
c Gate #76: and (AND2_13): out = 75, in = 39 21 
-75 39 0
-75 21 0
75 -39 -21 0
c Gate #77: and (AND2_14): out = 76, in = 23 39 
-76 23 0
-76 39 0
76 -23 -39 0
c Gate #78: and (AND2_15): out = 77, in = 19 40 
-77 19 0
-77 40 0
77 -19 -40 0
c Gate #79: and (AND2_16): out = 78, in = 40 23 
-78 40 0
-78 23 0
78 -40 -23 0
c Gate #80: and (AND3_5): out = 79, in = 40 19 27 
-318 40 0
-318 19 0
318 -40 -19 0
-79 318 0
-79 27 0
79 -318 -27 0
c Gate #81: and (AND2_17): out = 80, in = 40 23 
-80 40 0
-80 23 0
80 -40 -23 0
c Gate #82: and (AND3_6): out = 81, in = 40 19 27 
-319 40 0
-319 19 0
319 -40 -19 0
-81 319 0
-81 27 0
81 -319 -27 0
c Gate #83: and (AND2_18): out = 82, in = 17 37 
-82 17 0
-82 37 0
82 -17 -37 0
c Gate #84: and (AND4_0): out = 83, in = 23 40 21 16 
-320 23 0
-320 40 0
320 -23 -40 0
-321 320 0
-321 21 0
321 -320 -21 0
-83 321 0
-83 16 0
83 -321 -16 0
c Gate #85: and (AND2_19): out = 84, in = 40 38 
-84 40 0
-84 38 0
84 -40 -38 0
c Gate #86: and (AND4_2): out = 85, in = 41 40 20 19 
-322 41 0
-322 40 0
322 -41 -40 0
-323 322 0
-323 20 0
323 -322 -20 0
-85 323 0
-85 19 0
85 -323 -19 0
c Gate #87: and (AND3_7): out = 86, in = 41 40 6 
-324 41 0
-324 40 0
324 -41 -40 0
-86 324 0
-86 6 0
86 -324 -6 0
c Gate #88: and (AND3_8): out = 87, in = 41 40 6 
-325 41 0
-325 40 0
325 -41 -40 0
-87 325 0
-87 6 0
87 -325 -6 0
c Gate #89: and (AND2_20): out = 88, in = 41 12 
-88 41 0
-88 12 0
88 -41 -12 0
c Gate #90: and (AND2_21): out = 89, in = 41 11 
-89 41 0
-89 11 0
89 -41 -11 0
c Gate #91: and (AND3_9): out = 90, in = 41 40 17 
-326 41 0
-326 40 0
326 -41 -40 0
-90 326 0
-90 17 0
90 -326 -17 0
c Gate #92: and (AND2_22): out = 91, in = 41 38 
-91 41 0
-91 38 0
91 -41 -38 0
c Gate #93: and (AND3_10): out = 92, in = 41 22 21 
-327 41 0
-327 22 0
327 -41 -22 0
-92 327 0
-92 21 0
92 -327 -21 0
c Gate #94: and (AND2_23): out = 93, in = 37 41 
-93 37 0
-93 41 0
93 -37 -41 0
c Gate #95: and (AND3_11): out = 94, in = 41 19 1 
-328 41 0
-328 19 0
328 -41 -19 0
-94 328 0
-94 1 0
94 -328 -1 0
c Gate #96: and (AND2_24): out = 95, in = 41 38 
-95 41 0
-95 38 0
95 -41 -38 0
c Gate #97: and (AND3_12): out = 96, in = 40 20 2 
-329 40 0
-329 20 0
329 -40 -20 0
-96 329 0
-96 2 0
96 -329 -2 0
c Gate #98: and (AND3_13): out = 97, in = 47 39 25 
-330 47 0
-330 39 0
330 -47 -39 0
-97 330 0
-97 25 0
97 -330 -25 0
c Gate #99: and (AND2_25): out = 98, in = 23 47 
-98 23 0
-98 47 0
98 -23 -47 0
c Gate #100: and (AND3_14): out = 99, in = 41 38 48 
-331 41 0
-331 38 0
331 -41 -38 0
-99 331 0
-99 48 0
99 -331 -48 0
c Gate #101: and (AND3_15): out = 100, in = 21 48 47 
-332 21 0
-332 48 0
332 -21 -48 0
-100 332 0
-100 47 0
100 -332 -47 0
c Gate #102: and (AND2_26): out = 101, in = 48 19 
-101 48 0
-101 19 0
101 -48 -19 0
c Gate #103: and (AND2_27): out = 102, in = 48 16 
-102 48 0
-102 16 0
102 -48 -16 0
c Gate #104: and (AND2_28): out = 103, in = 40 48 
-103 40 0
-103 48 0
103 -40 -48 0
c Gate #105: and (AND2_29): out = 104, in = 38 48 
-104 38 0
-104 48 0
104 -38 -48 0
c Gate #106: or (OR2_0): out = 105, in = 12 11 
105 -12 0
105 -11 0
-105 12 11 0
c Gate #107: or (OR2_1): out = 106, in = 13 12 
106 -13 0
106 -12 0
-106 13 12 0
c Gate #108: or (OR2_2): out = 107, in = 13 11 
107 -13 0
107 -11 0
-107 13 11 0
c Gate #109: or (OR3_0): out = 108, in = 2 21 22 
333 -2 0
333 -21 0
-333 2 21 0
108 -333 0
108 -22 0
-108 333 22 0
c Gate #110: or (OR2_3): out = 109, in = 22 17 
109 -22 0
109 -17 0
-109 22 17 0
c Gate #111: or (OR2_4): out = 110, in = 22 6 
110 -22 0
110 -6 0
-110 22 6 0
c Gate #112: or (OR2_5): out = 111, in = 23 16 
111 -23 0
111 -16 0
-111 23 16 0
c Gate #113: or (OR2_6): out = 112, in = 23 17 
112 -23 0
112 -17 0
-112 23 17 0
c Gate #114: or (OR3_1): out = 113, in = 23 22 21 
334 -23 0
334 -22 0
-334 23 22 0
113 -334 0
113 -21 0
-113 334 21 0
c Gate #115: or (OR2_7): out = 114, in = 6 23 
114 -6 0
114 -23 0
-114 6 23 0
c Gate #116: or (OR2_8): out = 115, in = 23 20 
115 -23 0
115 -20 0
-115 23 20 0
c Gate #117: or (OR3_2): out = 116, in = 22 20 19 
335 -22 0
335 -20 0
-335 22 20 0
116 -335 0
116 -19 0
-116 335 19 0
c Gate #118: or (OR3_3): out = 117, in = 21 20 17 
336 -21 0
336 -20 0
-336 21 20 0
117 -336 0
117 -17 0
-117 336 17 0
c Gate #119: or (OR2_9): out = 118, in = 20 5 
118 -20 0
118 -5 0
-118 20 5 0
c Gate #120: or (OR4_0): out = 119, in = 32 31 30 29 
337 -32 0
337 -31 0
-337 32 31 0
338 -337 0
338 -30 0
-338 337 30 0
119 -338 0
119 -29 0
-119 338 29 0
c Gate #121: or (OR4_1): out = 120, in = 23 13 12 33 
339 -23 0
339 -13 0
-339 23 13 0
340 -339 0
340 -12 0
-340 339 12 0
120 -340 0
120 -33 0
-120 340 33 0
c Gate #122: or (OR4_2): out = 121, in = 23 13 34 11 
341 -23 0
341 -13 0
-341 23 13 0
342 -341 0
342 -34 0
-342 341 34 0
121 -342 0
121 -11 0
-121 342 11 0
c Gate #123: or (OR4_3): out = 122, in = 20 19 37 15 
343 -20 0
343 -19 0
-343 20 19 0
344 -343 0
344 -37 0
-344 343 37 0
122 -344 0
122 -15 0
-122 344 15 0
c Gate #124: or (OR4_4): out = 123, in = 23 21 37 15 
345 -23 0
345 -21 0
-345 23 21 0
346 -345 0
346 -37 0
-346 345 37 0
123 -346 0
123 -15 0
-123 346 15 0
c Gate #125: or (OR2_10): out = 124, in = 38 27 
124 -38 0
124 -27 0
-124 38 27 0
c Gate #126: or (OR2_11): out = 125, in = 39 5 
125 -39 0
125 -5 0
-125 39 5 0
c Gate #127: or (OR2_12): out = 126, in = 40 20 
126 -40 0
126 -20 0
-126 40 20 0
c Gate #128: or (OR2_13): out = 127, in = 40 23 
127 -40 0
127 -23 0
-127 40 23 0
c Gate #129: or (OR2_14): out = 128, in = 16 41 
128 -16 0
128 -41 0
-128 16 41 0
c Gate #130: or (OR3_4): out = 129, in = 41 37 36 
347 -41 0
347 -37 0
-347 41 37 0
129 -347 0
129 -36 0
-129 347 36 0
c Gate #131: or (OR3_5): out = 130, in = 41 40 27 
348 -41 0
348 -40 0
-348 41 40 0
130 -348 0
130 -27 0
-130 348 27 0
c Gate #132: or (OR2_15): out = 131, in = 41 22 
131 -41 0
131 -22 0
-131 41 22 0
c Gate #133: or (OR2_16): out = 132, in = 41 39 
132 -41 0
132 -39 0
-132 41 39 0
c Gate #134: or (OR2_17): out = 133, in = 23 47 
133 -23 0
133 -47 0
-133 23 47 0
c Gate #135: or (OR2_18): out = 134, in = 23 47 
134 -23 0
134 -47 0
-134 23 47 0
c Gate #136: or (OR2_19): out = 135, in = 21 47 
135 -21 0
135 -47 0
-135 21 47 0
c Gate #137: or (OR3_6): out = 136, in = 41 48 37 
349 -41 0
349 -48 0
-349 41 48 0
136 -349 0
136 -37 0
-136 349 37 0
c Gate #138: or (OR3_7): out = 137, in = 41 38 48 
350 -41 0
350 -38 0
-350 41 38 0
137 -350 0
137 -48 0
-137 350 48 0
c Gate #139: or (OR2_20): out = 138, in = 48 24 
138 -48 0
138 -24 0
-138 48 24 0
c Gate #140: nand (NAND2_0): out = 139, in = 9 10 
139 9 0
139 10 0
-139 -9 -10 0
c Gate #141: nand (NAND3_0): out = 140, in = 21 22 23 
-352 21 0
-352 22 0
352 -21 -22 0
-351 352 0
-351 23 0
351 -352 -23 0
140 351 0
-140 -351 0
c Gate #142: nand (NAND2_1): out = 141, in = 22 23 
141 22 0
141 23 0
-141 -22 -23 0
c Gate #143: nand (NAND4_0): out = 142, in = 27 105 107 106 
-354 27 0
-354 105 0
354 -27 -105 0
-355 354 0
-355 107 0
355 -354 -107 0
-353 355 0
-353 106 0
353 -355 -106 0
142 353 0
-142 -353 0
c Gate #144: nand (NAND3_1): out = 143, in = 38 22 23 
-357 38 0
-357 22 0
357 -38 -22 0
-356 357 0
-356 23 0
356 -357 -23 0
143 356 0
-143 -356 0
c Gate #145: nand (NAND4_1): out = 144, in = 27 20 38 22 
-359 27 0
-359 20 0
359 -27 -20 0
-360 359 0
-360 38 0
360 -359 -38 0
-358 360 0
-358 22 0
358 -360 -22 0
144 358 0
-144 -358 0
c Gate #146: nand (NAND2_2): out = 145, in = 40 23 
145 40 0
145 23 0
-145 -40 -23 0
c Gate #147: nand (NAND4_2): out = 146, in = 16 20 38 40 
-362 16 0
-362 20 0
362 -16 -20 0
-363 362 0
-363 38 0
363 -362 -38 0
-361 363 0
-361 40 0
361 -363 -40 0
146 361 0
-146 -361 0
c Gate #148: nand (NAND4_3): out = 147, in = 16 20 38 40 
-365 16 0
-365 20 0
365 -16 -20 0
-366 365 0
-366 38 0
366 -365 -38 0
-364 366 0
-364 40 0
364 -366 -40 0
147 364 0
-147 -364 0
c Gate #149: nand (NAND2_3): out = 148, in = 109 112 
148 109 0
148 112 0
-148 -109 -112 0
c Gate #150: nand (NAND4_4): out = 149, in = 10 16 21 41 
-368 10 0
-368 16 0
368 -10 -16 0
-369 368 0
-369 21 0
369 -368 -21 0
-367 369 0
-367 41 0
367 -369 -41 0
149 367 0
-149 -367 0
c Gate #151: nand (NAND2_4): out = 150, in = 27 22 
150 27 0
150 22 0
-150 -27 -22 0
c Gate #152: nand (NAND2_5): out = 151, in = 40 41 
151 40 0
151 41 0
-151 -40 -41 0
c Gate #153: nand (NAND4_5): out = 152, in = 28 47 20 21 
-371 28 0
-371 47 0
371 -28 -47 0
-372 371 0
-372 20 0
372 -371 -20 0
-370 372 0
-370 21 0
370 -372 -21 0
152 370 0
-152 -370 0
c Gate #154: nand (NAND4_6): out = 153, in = 6 47 20 21 
-374 6 0
-374 47 0
374 -6 -47 0
-375 374 0
-375 20 0
375 -374 -20 0
-373 375 0
-373 21 0
373 -375 -21 0
153 373 0
-153 -373 0
c Gate #155: nand (NAND4_7): out = 154, in = 16 47 22 23 
-377 16 0
-377 47 0
377 -16 -47 0
-378 377 0
-378 22 0
378 -377 -22 0
-376 378 0
-376 23 0
376 -378 -23 0
154 376 0
-154 -376 0
c Gate #156: nand (NAND4_8): out = 155, in = 47 20 21 40 
-380 47 0
-380 20 0
380 -47 -20 0
-381 380 0
-381 21 0
381 -380 -21 0
-379 381 0
-379 40 0
379 -381 -40 0
155 379 0
-155 -379 0
c Gate #157: nand (NAND4_9): out = 156, in = 47 20 21 22 
-383 47 0
-383 20 0
383 -47 -20 0
-384 383 0
-384 21 0
384 -383 -21 0
-382 384 0
-382 22 0
382 -384 -22 0
156 382 0
-156 -382 0
c Gate #158: nand (NAND4_10): out = 157, in = 47 20 21 40 
-386 47 0
-386 20 0
386 -47 -20 0
-387 386 0
-387 21 0
387 -386 -21 0
-385 387 0
-385 40 0
385 -387 -40 0
157 385 0
-157 -385 0
c Gate #159: nand (NAND4_11): out = 158, in = 17 47 20 21 
-389 17 0
-389 47 0
389 -17 -47 0
-390 389 0
-390 20 0
390 -389 -20 0
-388 390 0
-388 21 0
388 -390 -21 0
158 388 0
-158 -388 0
c Gate #160: nand (NAND4_12): out = 159, in = 47 20 21 40 
-392 47 0
-392 20 0
392 -47 -20 0
-393 392 0
-393 21 0
393 -392 -21 0
-391 393 0
-391 40 0
391 -393 -40 0
159 391 0
-159 -391 0
c Gate #161: nand (NAND4_14): out = 160, in = 16 47 48 38 
-395 16 0
-395 47 0
395 -16 -47 0
-396 395 0
-396 48 0
396 -395 -48 0
-394 396 0
-394 38 0
394 -396 -38 0
160 394 0
-160 -394 0
c Gate #162: nand (NAND4_15): out = 161, in = 47 48 38 22 
-398 47 0
-398 48 0
398 -47 -48 0
-399 398 0
-399 38 0
399 -398 -38 0
-397 399 0
-397 22 0
397 -399 -22 0
161 397 0
-161 -397 0
c Gate #163: nand (NAND4_16): out = 162, in = 17 48 21 22 
-401 17 0
-401 48 0
401 -17 -48 0
-402 401 0
-402 21 0
402 -401 -21 0
-400 402 0
-400 22 0
400 -402 -22 0
162 400 0
-162 -400 0
c Gate #164: nand (NAND3_2): out = 163, in = 39 47 48 
-404 39 0
-404 47 0
404 -39 -47 0
-403 404 0
-403 48 0
403 -404 -48 0
163 403 0
-163 -403 0
c Gate #165: nand (NAND4_17): out = 164, in = 15 16 47 48 
-406 15 0
-406 16 0
406 -15 -16 0
-407 406 0
-407 47 0
407 -406 -47 0
-405 407 0
-405 48 0
405 -407 -48 0
164 405 0
-164 -405 0
c Gate #166: nand (NAND2_6): out = 165, in = 38 119 
165 38 0
165 119 0
-165 -38 -119 0
c Gate #167: nand (NAND2_7): out = 166, in = 116 122 
166 116 0
166 122 0
-166 -116 -122 0
c Gate #168: nand (NAND2_8): out = 167, in = 52 50 
167 52 0
167 50 0
-167 -52 -50 0
c Gate #169: nand (NAND4_18): out = 168, in = 124 130 113 123 
-409 124 0
-409 130 0
409 -124 -130 0
-410 409 0
-410 113 0
410 -409 -113 0
-408 410 0
-408 123 0
408 -410 -123 0
168 408 0
-168 -408 0
c Gate #170: nand (NAND4_19): out = 169, in = 21 132 110 131 
-412 21 0
-412 132 0
412 -21 -132 0
-413 412 0
-413 110 0
413 -412 -110 0
-411 413 0
-411 131 0
411 -413 -131 0
169 411 0
-169 -411 0
c Gate #171: nand (NAND4_20): out = 170, in = 21 111 133 129 
-415 21 0
-415 111 0
415 -21 -111 0
-416 415 0
-416 133 0
416 -415 -133 0
-414 416 0
-414 129 0
414 -416 -129 0
170 414 0
-170 -414 0
c Gate #172: nand (NAND3_3): out = 171, in = 134 121 120 
-418 134 0
-418 121 0
418 -134 -121 0
-417 418 0
-417 120 0
417 -418 -120 0
171 417 0
-171 -417 0
c Gate #173: nand (NAND2_9): out = 172, in = 125 135 
172 125 0
172 135 0
-172 -125 -135 0
c Gate #174: nand (NAND4_22): out = 173, in = 38 126 115 136 
-420 38 0
-420 126 0
420 -38 -126 0
-421 420 0
-421 115 0
421 -420 -115 0
-419 421 0
-419 136 0
419 -421 -136 0
173 419 0
-173 -419 0
c Gate #175: nand (NAND2_10): out = 174, in = 117 137 
174 117 0
174 137 0
-174 -117 -137 0
c Gate #176: nand (NAND3_4): out = 175, in = 138 56 118 
-423 138 0
-423 56 0
423 -138 -56 0
-422 423 0
-422 118 0
422 -423 -118 0
175 422 0
-175 -422 0
c Gate #177: nor (NOR2_0): out = 176, in = 4 22 
-176 -4 0
-176 -22 0
176 4 22 0
c Gate #178: nor (NOR2_1): out = 177, in = 22 23 
-177 -22 0
-177 -23 0
177 22 23 0
c Gate #179: nor (NOR2_2): out = 178, in = 19 20 
-178 -19 0
-178 -20 0
178 19 20 0
c Gate #180: nor (NOR4_0): out = 179, in = 2 26 4 17 
425 -2 0
425 -26 0
-425 2 26 0
426 -425 0
426 -4 0
-426 425 4 0
424 -426 0
424 -17 0
-424 426 17 0
179 424 0
-179 -424 0
c Gate #181: nor (NOR3_0): out = 180, in = 36 37 39 
428 -36 0
428 -37 0
-428 36 37 0
427 -428 0
427 -39 0
-427 428 39 0
180 427 0
-180 -427 0
c Gate #182: nor (NOR3_1): out = 181, in = 37 39 19 
430 -37 0
430 -39 0
-430 37 39 0
429 -430 0
429 -19 0
-429 430 19 0
181 429 0
-181 -429 0
c Gate #183: nor (NOR4_1): out = 182, in = 20 38 40 23 
432 -20 0
432 -38 0
-432 20 38 0
433 -432 0
433 -40 0
-433 432 40 0
431 -433 0
431 -23 0
-431 433 23 0
182 431 0
-182 -431 0
c Gate #184: nor (NOR3_2): out = 183, in = 21 40 23 
435 -21 0
435 -40 0
-435 21 40 0
434 -435 0
434 -23 0
-434 435 23 0
183 434 0
-183 -434 0
c Gate #185: nor (NOR3_3): out = 184, in = 38 40 41 
437 -38 0
437 -40 0
-437 38 40 0
436 -437 0
436 -41 0
-436 437 41 0
184 436 0
-184 -436 0
c Gate #186: nor (NOR2_3): out = 185, in = 40 41 
-185 -40 0
-185 -41 0
185 40 41 0
c Gate #187: nor (NOR2_4): out = 186, in = 47 21 
-186 -47 0
-186 -21 0
186 47 21 0
c Gate #188: nor (NOR3_4): out = 187, in = 32 37 47 
439 -32 0
439 -37 0
-439 32 37 0
438 -439 0
438 -47 0
-438 439 47 0
187 438 0
-187 -438 0
c Gate #189: nor (NOR3_5): out = 188, in = 47 22 23 
441 -47 0
441 -22 0
-441 47 22 0
440 -441 0
440 -23 0
-440 441 23 0
188 440 0
-188 -440 0
c Gate #190: nor (NOR2_5): out = 189, in = 47 64 
-189 -47 0
-189 -64 0
189 47 64 0
c Gate #191: nor (NOR3_6): out = 190, in = 32 37 47 
443 -32 0
443 -37 0
-443 32 37 0
442 -443 0
442 -47 0
-442 443 47 0
190 442 0
-190 -442 0
c Gate #192: nor (NOR3_7): out = 191, in = 47 22 23 
445 -47 0
445 -22 0
-445 47 22 0
444 -445 0
444 -23 0
-444 445 23 0
191 444 0
-191 -444 0
c Gate #193: nor (NOR2_6): out = 192, in = 27 48 
-192 -27 0
-192 -48 0
192 27 48 0
c Gate #194: nor (NOR2_7): out = 193, in = 27 48 
-193 -27 0
-193 -48 0
193 27 48 0
c Gate #195: nor (NOR2_8): out = 194, in = 142 37 
-194 -142 0
-194 -37 0
194 142 37 0
c Gate #196: nor (NOR2_9): out = 195, in = 71 72 
-195 -71 0
-195 -72 0
195 71 72 0
c Gate #197: nor (NOR2_10): out = 196, in = 79 69 
-196 -79 0
-196 -69 0
196 79 69 0
c Gate #198: nor (NOR2_11): out = 197, in = 81 70 
-197 -81 0
-197 -70 0
197 81 70 0
c Gate #199: nor (NOR2_12): out = 198, in = 146 23 
-198 -146 0
-198 -23 0
198 146 23 0
c Gate #200: nor (NOR2_13): out = 199, in = 147 41 
-199 -147 0
-199 -41 0
199 147 41 0
c Gate #201: nor (NOR4_2): out = 200, in = 60 59 58 86 
447 -60 0
447 -59 0
-447 60 59 0
448 -447 0
448 -58 0
-448 447 58 0
446 -448 0
446 -86 0
-446 448 86 0
200 446 0
-200 -446 0
c Gate #202: nor (NOR4_3): out = 201, in = 63 62 61 87 
450 -63 0
450 -62 0
-450 63 62 0
451 -450 0
451 -61 0
-451 450 61 0
449 -451 0
449 -87 0
-449 451 87 0
201 449 0
-201 -449 0
c Gate #203: nor (NOR2_14): out = 202, in = 89 88 
-202 -89 0
-202 -88 0
202 89 88 0
c Gate #204: nor (NOR3_9): out = 203, in = 65 82 90 
453 -65 0
453 -82 0
-453 65 82 0
452 -453 0
452 -90 0
-452 453 90 0
203 452 0
-203 -452 0
c Gate #205: nor (NOR2_15): out = 204, in = 91 83 
-204 -91 0
-204 -83 0
204 91 83 0
c Gate #206: nor (NOR2_16): out = 205, in = 84 95 
-205 -84 0
-205 -95 0
205 84 95 0
c Gate #207: nor (NOR3_10): out = 206, in = 152 22 23 
455 -152 0
455 -22 0
-455 152 22 0
454 -455 0
454 -23 0
-454 455 23 0
206 454 0
-206 -454 0
c Gate #208: nor (NOR3_11): out = 207, in = 153 22 23 
457 -153 0
457 -22 0
-457 153 22 0
456 -457 0
456 -23 0
-456 457 23 0
207 456 0
-207 -456 0
c Gate #209: nor (NOR2_17): out = 208, in = 68 96 
-208 -68 0
-208 -96 0
208 68 96 0
c Gate #210: nor (NOR4_4): out = 209, in = 76 98 97 94 
459 -76 0
459 -98 0
-459 76 98 0
460 -459 0
460 -97 0
-460 459 97 0
458 -460 0
458 -94 0
-458 460 94 0
209 458 0
-209 -458 0
c Gate #211: nor (NOR2_18): out = 210, in = 155 23 
-210 -155 0
-210 -23 0
210 155 23 0
c Gate #212: nor (NOR2_19): out = 211, in = 156 23 
-211 -156 0
-211 -23 0
211 156 23 0
c Gate #213: nor (NOR2_20): out = 212, in = 157 41 
-212 -157 0
-212 -41 0
212 157 41 0
c Gate #214: nor (NOR3_12): out = 213, in = 158 40 41 
462 -158 0
462 -40 0
-462 158 40 0
461 -462 0
461 -41 0
-461 462 41 0
213 461 0
-213 -461 0
c Gate #215: nor (NOR2_21): out = 214, in = 159 41 
-214 -159 0
-214 -41 0
214 159 41 0
c Gate #216: nor (NOR3_13): out = 215, in = 160 40 23 
464 -160 0
464 -40 0
-464 160 40 0
463 -464 0
463 -23 0
-463 464 23 0
215 463 0
-215 -463 0
c Gate #217: nor (NOR2_22): out = 216, in = 161 23 
-216 -161 0
-216 -23 0
216 161 23 0
c Gate #218: nor (NOR2_23): out = 217, in = 99 66 
-217 -99 0
-217 -66 0
217 99 66 0
c Gate #219: nor (NOR3_14): out = 218, in = 73 100 85 
466 -73 0
466 -100 0
-466 73 100 0
465 -466 0
465 -85 0
-465 466 85 0
218 465 0
-218 -465 0
c Gate #220: nor (NOR4_6): out = 219, in = 163 2 26 4 
468 -163 0
468 -2 0
-468 163 2 0
469 -468 0
469 -26 0
-469 468 26 0
467 -469 0
467 -4 0
-467 469 4 0
219 467 0
-219 -467 0
c Gate #221: nor (NOR3_15): out = 220, in = 102 101 54 
471 -102 0
471 -101 0
-471 102 101 0
470 -471 0
470 -54 0
-470 471 54 0
220 470 0
-220 -470 0
c Gate #222: nor (NOR4_7): out = 221, in = 104 103 67 92 
473 -104 0
473 -103 0
-473 104 103 0
474 -473 0
474 -67 0
-474 473 67 0
472 -474 0
472 -92 0
-472 474 92 0
221 472 0
-221 -472 0
c Gate #223: nor (NOR4_8): out = 222, in = 164 21 40 23 
476 -164 0
476 -21 0
-476 164 21 0
477 -476 0
477 -40 0
-477 476 40 0
475 -477 0
475 -23 0
-475 477 23 0
222 475 0
-222 -475 0
c Gate #224: nor (NOR2_24): out = 223, in = 196 78 
-223 -196 0
-223 -78 0
223 196 78 0
c Gate #225: nor (NOR2_25): out = 224, in = 197 80 
-224 -197 0
-224 -80 0
224 197 80 0
c Gate #226: nor (NOR4_9): out = 225, in = 208 38 41 77 
479 -208 0
479 -38 0
-479 208 38 0
480 -479 0
480 -41 0
-480 479 41 0
478 -480 0
478 -77 0
-478 480 77 0
225 478 0
-225 -478 0
c Gate #227: nor (NOR2_28): out = 226, in = 173 93 
-226 -173 0
-226 -93 0
226 173 93 0
c Gate #228: nor (NOR4_10): out = 227, in = 217 25 19 22 
482 -217 0
482 -25 0
-482 217 25 0
483 -482 0
483 -19 0
-483 482 19 0
481 -483 0
481 -22 0
-481 483 22 0
227 481 0
-227 -481 0
c Gate #229: or (OR4_9): out = 228, in = 149 29 8 9 
484 -149 0
484 -29 0
-484 149 29 0
485 -484 0
485 -8 0
-485 484 8 0
228 -485 0
228 -9 0
-228 485 9 0
c Gate #230: or (OR4_10): out = 229, in = 185 17 48 21 
486 -185 0
486 -17 0
-486 185 17 0
487 -486 0
487 -48 0
-487 486 48 0
229 -487 0
229 -21 0
-229 487 21 0
c Gate #231: or (OR4_11): out = 230, in = 151 19 20 21 
488 -151 0
488 -19 0
-488 151 19 0
489 -488 0
489 -20 0
-489 488 20 0
230 -489 0
230 -21 0
-230 489 21 0
c Gate #232: or (OR4_12): out = 231, in = 186 20 40 41 
490 -186 0
490 -20 0
-490 186 20 0
491 -490 0
491 -40 0
-491 490 40 0
231 -491 0
231 -41 0
-231 491 41 0
c Gate #233: nand (NAND4_23): out = 232, in = 194 17 47 48 
-493 194 0
-493 17 0
493 -194 -17 0
-494 493 0
-494 47 0
494 -493 -47 0
-492 494 0
-492 48 0
492 -494 -48 0
232 492 0
-232 -492 0
c Gate #234: nand (NAND3_6): out = 233, in = 128 108 228 
-496 128 0
-496 108 0
496 -128 -108 0
-495 496 0
-495 228 0
495 -496 -228 0
233 495 0
-233 -495 0
c Gate #235: nand (NAND2_14): out = 234, in = 218 231 
234 218 0
234 231 0
-234 -218 -231 0
c Gate #236: nand (NAND4_25): out = 235, in = 219 38 40 41 
-498 219 0
-498 38 0
498 -219 -38 0
-499 498 0
-499 40 0
499 -498 -40 0
-497 499 0
-497 41 0
497 -499 -41 0
235 497 0
-235 -497 0
c Gate #237: or (OR2_22): out = 236, in = 188 38 
236 -188 0
236 -38 0
-236 188 38 0
c Gate #238: or (OR2_23): out = 237, in = 191 38 
237 -191 0
237 -38 0
-237 191 38 0
c Gate #239: or (OR4_13): out = 238, in = 167 139 29 30 
500 -167 0
500 -139 0
-500 167 139 0
501 -500 0
501 -29 0
-501 500 29 0
238 -501 0
238 -30 0
-238 501 30 0
c Gate #240: or (OR4_14): out = 239, in = 171 162 5 37 
502 -171 0
502 -162 0
-502 171 162 0
503 -502 0
503 -5 0
-503 502 5 0
239 -503 0
239 -37 0
-239 503 37 0
c Gate #241: or (OR4_15): out = 240, in = 172 20 40 41 
504 -172 0
504 -20 0
-504 172 20 0
505 -504 0
505 -40 0
-505 504 40 0
240 -505 0
240 -41 0
-240 505 41 0
c Gate #242: or (OR4_16): out = 241, in = 175 38 40 41 
506 -175 0
506 -38 0
-506 175 38 0
507 -506 0
507 -40 0
-507 506 40 0
241 -507 0
241 -41 0
-241 507 41 0
c Gate #243: and (AND3_16): out = 242, in = 165 19 20 
-508 165 0
-508 19 0
508 -165 -19 0
-242 508 0
-242 20 0
242 -508 -20 0
c Gate #244: and (AND4_6): out = 243, in = 195 182 181 27 
-509 195 0
-509 182 0
509 -195 -182 0
-510 509 0
-510 181 0
510 -509 -181 0
-243 510 0
-243 27 0
243 -510 -27 0
c Gate #245: and (AND2_32): out = 244, in = 200 47 
-244 200 0
-244 47 0
244 -200 -47 0
c Gate #246: and (AND2_33): out = 245, in = 201 47 
-245 201 0
-245 47 0
245 -201 -47 0
c Gate #247: and (AND4_7): out = 246, in = 202 16 21 22 
-511 202 0
-511 16 0
511 -202 -16 0
-512 511 0
-512 21 0
512 -511 -21 0
-246 512 0
-246 22 0
246 -512 -22 0
c Gate #248: and (AND4_8): out = 247, in = 203 27 20 38 
-513 203 0
-513 27 0
513 -203 -27 0
-514 513 0
-514 20 0
514 -513 -20 0
-247 514 0
-247 38 0
247 -514 -38 0
c Gate #249: and (AND2_34): out = 248, in = 204 17 
-248 204 0
-248 17 0
248 -204 -17 0
c Gate #250: and (AND3_17): out = 249, in = 205 5 48 
-515 205 0
-515 5 0
515 -205 -5 0
-249 515 0
-249 48 0
249 -515 -48 0
c Gate #251: and (AND2_35): out = 250, in = 170 48 
-250 170 0
-250 48 0
250 -170 -48 0
c Gate #252: and (AND4_9): out = 251, in = 209 48 38 40 
-516 209 0
-516 48 0
516 -209 -48 0
-517 516 0
-517 38 0
517 -516 -38 0
-251 517 0
-251 40 0
251 -517 -40 0
c Gate #253: and (AND4_10): out = 252, in = 174 176 25 3 
-518 174 0
-518 176 0
518 -174 -176 0
-519 518 0
-519 25 0
519 -518 -25 0
-252 519 0
-252 3 0
252 -519 -3 0
c Gate #254: and (AND4_11): out = 253, in = 221 27 17 19 
-520 221 0
-520 27 0
520 -221 -27 0
-521 520 0
-521 17 0
521 -520 -17 0
-253 521 0
-253 19 0
253 -521 -19 0
c Gate #255: and (AND3_19): out = 254, in = 233 47 48 
-522 233 0
-522 47 0
522 -233 -47 0
-254 522 0
-254 48 0
254 -522 -48 0
c Gate #256: nand (NAND4_13): out = 255, in = 178 25 4 39 
-524 178 0
-524 25 0
524 -178 -25 0
-525 524 0
-525 4 0
525 -524 -4 0
-523 525 0
-523 39 0
523 -525 -39 0
255 523 0
-255 -523 0
c Gate #257: nor (NOR4_5): out = 256, in = 255 21 22 23 
527 -255 0
527 -21 0
-527 255 21 0
528 -527 0
528 -22 0
-528 527 22 0
526 -528 0
526 -23 0
-526 528 23 0
256 526 0
-256 -526 0
c Gate #258: and (AND4_1): out = 257, in = 177 25 17 38 
-529 177 0
-529 25 0
529 -177 -25 0
-530 529 0
-530 17 0
530 -529 -17 0
-257 530 0
-257 38 0
257 -530 -38 0
c Gate #259: and (AND4_3): out = 258, in = 183 15 16 48 
-531 183 0
-531 15 0
531 -183 -15 0
-532 531 0
-532 16 0
532 -531 -16 0
-258 532 0
-258 48 0
258 -532 -48 0
c Gate #260: and (AND4_4): out = 259, in = 184 24 19 20 
-533 184 0
-533 24 0
533 -184 -24 0
-534 533 0
-534 19 0
534 -533 -19 0
-259 534 0
-259 20 0
259 -534 -20 0
c Gate #261: and (AND2_30): out = 260, in = 150 48 
-260 150 0
-260 48 0
260 -150 -48 0
c Gate #262: and (AND2_31): out = 261, in = 154 38 
-261 154 0
-261 38 0
261 -154 -38 0
c Gate #263: and (AND4_5): out = 262, in = 190 7 8 9 
-535 190 0
-535 7 0
535 -190 -7 0
-536 535 0
-536 8 0
536 -535 -8 0
-262 536 0
-262 9 0
262 -536 -9 0
c Gate #264: or (OR4_5): out = 263, in = 141 19 48 38 
537 -141 0
537 -19 0
-537 141 19 0
538 -537 0
538 -48 0
-538 537 48 0
263 -538 0
263 -38 0
-263 538 38 0
c Gate #265: or (OR2_21): out = 264, in = 179 22 
264 -179 0
264 -22 0
-264 179 22 0
c Gate #266: or (OR4_6): out = 265, in = 180 140 5 20 
539 -180 0
539 -140 0
-539 180 140 0
540 -539 0
540 -5 0
-540 539 5 0
265 -540 0
265 -20 0
-265 540 20 0
c Gate #267: nor (NOR2_26): out = 266, in = 169 260 
-266 -169 0
-266 -260 0
266 169 260 0
c Gate #268: or (OR4_7): out = 267, in = 145 2 3 4 
541 -145 0
541 -2 0
-541 145 2 0
542 -541 0
542 -3 0
-542 541 3 0
267 -542 0
267 -4 0
-267 542 4 0
c Gate #269: nor (NOR2_27): out = 268, in = 39 262 
-268 -39 0
-268 -262 0
268 39 262 0
c Gate #270: nand (NAND4_21): out = 269, in = 187 7 8 9 
-544 187 0
-544 7 0
544 -187 -7 0
-545 544 0
-545 8 0
545 -544 -8 0
-543 545 0
-543 9 0
543 -545 -9 0
269 543 0
-269 -543 0
c Gate #271: or (OR4_8): out = 270, in = 148 5 48 21 
546 -148 0
546 -5 0
-546 148 5 0
547 -546 0
547 -48 0
-547 546 48 0
270 -547 0
270 -21 0
-270 547 21 0
c Gate #272: nor (NOR4_11): out = 271, in = 232 38 40 23 
549 -232 0
549 -38 0
-549 232 38 0
550 -549 0
550 -40 0
-550 549 40 0
548 -550 0
548 -23 0
-548 550 23 0
271 548 0
-271 -548 0
c Gate #273: nor (NOR2_29): out = 272, in = 223 244 
-272 -223 0
-272 -244 0
272 223 244 0
c Gate #274: nor (NOR2_30): out = 273, in = 224 245 
-273 -224 0
-273 -245 0
273 224 245 0
c Gate #275: nor (NOR2_31): out = 274, in = 247 259 
-274 -247 0
-274 -259 0
274 247 259 0
c Gate #276: nor (NOR2_32): out = 275, in = 168 248 
-275 -168 0
-275 -248 0
275 168 248 0
c Gate #277: nor (NOR3_16): out = 276, in = 74 250 242 
552 -74 0
552 -250 0
-552 74 250 0
551 -552 0
551 -242 0
-551 552 242 0
276 551 0
-276 -551 0
c Gate #278: nand (NAND2_15): out = 277, in = 220 238 
277 220 0
277 238 0
-277 -220 -238 0
c Gate #279: or (OR3_9): out = 278, in = 189 261 246 
553 -189 0
553 -261 0
-553 189 261 0
278 -553 0
278 -246 0
-278 553 246 0
c Gate #280: and (AND2_37): out = 279, in = 275 48 
-279 275 0
-279 48 0
279 -275 -48 0
c Gate #281: and (AND2_38): out = 280, in = 276 22 
-280 276 0
-280 22 0
280 -276 -22 0
c Gate #282: or (OR4_17): out = 281, in = 268 143 5 48 
554 -268 0
554 -143 0
-554 268 143 0
555 -554 0
555 -5 0
-555 554 5 0
281 -555 0
281 -48 0
-281 555 48 0
c Gate #283: or (OR4_18): out = 282, in = 225 251 253 243 
556 -225 0
556 -251 0
-556 225 251 0
557 -556 0
557 -253 0
-557 556 253 0
282 -557 0
282 -243 0
-282 557 243 0
c Gate #284: or (OR4_19): out = 283, in = 277 5 39 21 
558 -277 0
558 -5 0
-558 277 5 0
559 -558 0
559 -39 0
-559 558 39 0
283 -559 0
283 -21 0
-283 559 21 0
c Gate #285: or (OR3_10): out = 284, in = 272 48 38 
560 -272 0
560 -48 0
-560 272 48 0
284 -560 0
284 -38 0
-284 560 38 0
c Gate #286: or (OR3_11): out = 285, in = 273 48 38 
561 -273 0
561 -48 0
-561 273 48 0
285 -561 0
285 -38 0
-285 561 38 0
c Gate #287: or (OR4_20): out = 286, in = 278 5 39 20 
562 -278 0
562 -5 0
-562 278 5 0
563 -562 0
563 -39 0
-563 562 39 0
286 -563 0
286 -20 0
-286 563 20 0
c Gate #288: nand (NAND4_27): out = 287, in = 235 284 270 239 
-565 235 0
-565 284 0
565 -235 -284 0
-566 565 0
-566 270 0
566 -565 -270 0
-564 566 0
-564 239 0
564 -566 -239 0
287 564 0
-287 -564 0
c Gate #289: nand (NAND2_11): out = 288, in = 263 230 
288 263 0
288 230 0
-288 -263 -230 0
c Gate #290: nand (NAND2_12): out = 289, in = 192 236 
289 192 0
289 236 0
-289 -192 -236 0
c Gate #291: nor (NOR3_8): out = 290, in = 57 75 257 
568 -57 0
568 -75 0
-568 57 75 0
567 -568 0
567 -257 0
-567 568 257 0
290 567 0
-290 -567 0
c Gate #292: nand (NAND2_13): out = 291, in = 193 237 
291 193 0
291 237 0
-291 -193 -237 0
c Gate #293: or (OR3_8): out = 292, in = 290 19 20 
569 -290 0
569 -19 0
-569 290 19 0
292 -569 0
292 -20 0
-292 569 20 0
c Gate #294: and (AND2_36): out = 293, in = 269 17 
-293 269 0
-293 17 0
293 -269 -17 0
c Gate #295: nand (NAND3_5): out = 294, in = 114 127 267 
-571 114 0
-571 127 0
571 -114 -127 0
-570 571 0
-570 267 0
570 -571 -267 0
294 570 0
-294 -570 0
c Gate #296: nand (NAND4_24): out = 295, in = 166 38 41 264 
-573 166 0
-573 38 0
573 -166 -38 0
-574 573 0
-574 41 0
574 -573 -41 0
-572 574 0
-572 264 0
572 -574 -264 0
295 572 0
-295 -572 0
c Gate #297: nor (NOR3_17): out = 296, in = 144 41 293 
576 -144 0
576 -41 0
-576 144 41 0
575 -576 0
575 -293 0
-575 576 293 0
296 575 0
-296 -575 0
c Gate #298: nor (NOR3_19): out = 297, in = 266 279 252 
578 -266 0
578 -279 0
-578 266 279 0
577 -578 0
577 -252 0
-577 578 252 0
297 577 0
-297 -577 0
c Gate #299: nor (NOR3_20): out = 298, in = 226 280 254 
580 -226 0
580 -280 0
-580 226 280 0
579 -580 0
579 -254 0
-579 580 254 0
298 579 0
-298 -579 0
c Gate #300: and (AND2_40): out = 299, in = 43 287 
-299 43 0
-299 287 0
299 -43 -287 0
c Gate #301: and (AND3_18): out = 300, in = 294 20 21 
-581 294 0
-581 20 0
581 -294 -20 0
-300 581 0
-300 21 0
300 -581 -21 0
c Gate #302: or (OR2_25): out = 301, in = 297 19 
301 -297 0
301 -19 0
-301 297 19 0
c Gate #303: or (OR2_26): out = 302, in = 298 39 
302 -298 0
302 -39 0
-302 298 39 0
c Gate #304: nand (NAND4_26): out = 303, in = 289 292 229 240 
-583 289 0
-583 292 0
583 -289 -292 0
-584 583 0
-584 229 0
584 -583 -229 0
-582 584 0
-582 240 0
582 -584 -240 0
303 582 0
-303 -582 0
c Gate #305: nor (NOR3_18): out = 304, in = 300 249 258 
586 -300 0
586 -249 0
-586 300 249 0
585 -586 0
585 -258 0
-585 586 258 0
304 585 0
-304 -585 0
c Gate #306: and (AND2_39): out = 305, in = 42 282 
-305 42 0
-305 282 0
305 -42 -282 0
c Gate #307: nand (NAND4_28): out = 306, in = 295 285 286 281 
-588 295 0
-588 285 0
588 -295 -285 0
-589 588 0
-589 286 0
589 -588 -286 0
-587 589 0
-587 281 0
587 -589 -281 0
306 587 0
-306 -587 0
c Gate #308: nand (NAND4_29): out = 307, in = 274 301 283 265 
-591 274 0
-591 301 0
591 -274 -301 0
-592 591 0
-592 283 0
592 -591 -283 0
-590 592 0
-590 265 0
590 -592 -265 0
307 590 0
-307 -590 0
c Gate #309: and (AND2_41): out = 308, in = 44 306 
-308 44 0
-308 306 0
308 -44 -306 0
c Gate #310: and (AND2_42): out = 309, in = 45 307 
-309 45 0
-309 307 0
309 -45 -307 0
c Gate #311: or (OR2_24): out = 310, in = 304 19 
310 -304 0
310 -19 0
-310 304 19 0
c Gate #312: nand (NAND4_30): out = 311, in = 291 302 310 241 
-594 291 0
-594 302 0
594 -291 -302 0
-595 594 0
-595 310 0
595 -594 -310 0
-593 595 0
-593 241 0
593 -595 -241 0
311 593 0
-311 -593 0
c Gate #313: and (AND2_43): out = 312, in = 46 311 
-312 46 0
-312 311 0
312 -46 -311 0
c
c Random XOR constraints start here
c
-596 296 222 0
-596 -296 -222 0
596 -296 222 0
596 296 -222 0
-597 596 214 0
-597 -596 -214 0
597 -596 214 0
597 596 -214 0
-598 597 213 0
-598 -597 -213 0
598 -597 213 0
598 597 -213 0
-599 598 212 0
-599 -598 -212 0
599 -598 212 0
599 598 -212 0
-600 599 207 0
-600 -599 -207 0
600 -599 207 0
600 599 -207 0
-601 600 199 0
-601 -600 -199 0
601 -600 199 0
601 600 -199 0
601 0
c Rand xor clause 1 with 7 lits
-602 296 222 0
-602 -296 -222 0
602 -296 222 0
602 296 -222 0
-603 602 214 0
-603 -602 -214 0
603 -602 214 0
603 602 -214 0
-604 603 213 0
-604 -603 -213 0
604 -603 213 0
604 603 -213 0
-605 604 212 0
-605 -604 -212 0
605 -604 212 0
605 604 -212 0
-606 605 207 0
-606 -605 -207 0
606 -605 207 0
606 605 -207 0
-607 606 199 0
-607 -606 -199 0
607 -606 199 0
607 606 -199 0
607 0
c Rand xor clause 2 with 7 lits
-608 296 222 0
-608 -296 -222 0
608 -296 222 0
608 296 -222 0
-609 608 214 0
-609 -608 -214 0
609 -608 214 0
609 608 -214 0
-610 609 213 0
-610 -609 -213 0
610 -609 213 0
610 609 -213 0
-611 610 212 0
-611 -610 -212 0
611 -610 212 0
611 610 -212 0
-612 611 207 0
-612 -611 -207 0
612 -611 207 0
612 611 -207 0
-613 612 199 0
-613 -612 -199 0
613 -612 199 0
613 612 -199 0
613 0
c Rand xor clause 3 with 7 lits
-614 296 222 0
-614 -296 -222 0
614 -296 222 0
614 296 -222 0
-615 614 214 0
-615 -614 -214 0
615 -614 214 0
615 614 -214 0
-616 615 213 0
-616 -615 -213 0
616 -615 213 0
616 615 -213 0
-617 616 212 0
-617 -616 -212 0
617 -616 212 0
617 616 -212 0
-618 617 207 0
-618 -617 -207 0
618 -617 207 0
618 617 -207 0
-619 618 199 0
-619 -618 -199 0
619 -618 199 0
619 618 -199 0
619 0
c Rand xor clause 4 with 7 lits
-620 296 222 0
-620 -296 -222 0
620 -296 222 0
620 296 -222 0
-621 620 214 0
-621 -620 -214 0
621 -620 214 0
621 620 -214 0
-622 621 213 0
-622 -621 -213 0
622 -621 213 0
622 621 -213 0
-623 622 212 0
-623 -622 -212 0
623 -622 212 0
623 622 -212 0
-624 623 207 0
-624 -623 -207 0
624 -623 207 0
624 623 -207 0
-625 624 199 0
-625 -624 -199 0
625 -624 199 0
625 624 -199 0
625 0
c Rand xor clause 5 with 7 lits
-626 296 222 0
-626 -296 -222 0
626 -296 222 0
626 296 -222 0
-627 626 214 0
-627 -626 -214 0
627 -626 214 0
627 626 -214 0
-628 627 213 0
-628 -627 -213 0
628 -627 213 0
628 627 -213 0
-629 628 212 0
-629 -628 -212 0
629 -628 212 0
629 628 -212 0
-630 629 207 0
-630 -629 -207 0
630 -629 207 0
630 629 -207 0
-631 630 199 0
-631 -630 -199 0
631 -630 199 0
631 630 -199 0
631 0
c Rand xor clause 6 with 7 lits
-632 296 222 0
-632 -296 -222 0
632 -296 222 0
632 296 -222 0
-633 632 214 0
-633 -632 -214 0
633 -632 214 0
633 632 -214 0
-634 633 213 0
-634 -633 -213 0
634 -633 213 0
634 633 -213 0
-635 634 212 0
-635 -634 -212 0
635 -634 212 0
635 634 -212 0
-636 635 207 0
-636 -635 -207 0
636 -635 207 0
636 635 -207 0
-637 636 199 0
-637 -636 -199 0
637 -636 199 0
637 636 -199 0
637 0
c Rand xor clause 7 with 7 lits
-638 296 222 0
-638 -296 -222 0
638 -296 222 0
638 296 -222 0
-639 638 214 0
-639 -638 -214 0
639 -638 214 0
639 638 -214 0
-640 639 213 0
-640 -639 -213 0
640 -639 213 0
640 639 -213 0
-641 640 212 0
-641 -640 -212 0
641 -640 212 0
641 640 -212 0
-642 641 207 0
-642 -641 -207 0
642 -641 207 0
642 641 -207 0
-643 642 199 0
-643 -642 -199 0
643 -642 199 0
643 642 -199 0
643 0
c Rand xor clause 8 with 7 lits
-644 296 222 0
-644 -296 -222 0
644 -296 222 0
644 296 -222 0
-645 644 214 0
-645 -644 -214 0
645 -644 214 0
645 644 -214 0
-646 645 213 0
-646 -645 -213 0
646 -645 213 0
646 645 -213 0
-647 646 212 0
-647 -646 -212 0
647 -646 212 0
647 646 -212 0
-648 647 207 0
-648 -647 -207 0
648 -647 207 0
648 647 -207 0
-649 648 199 0
-649 -648 -199 0
649 -648 199 0
649 648 -199 0
649 0
c Rand xor clause 9 with 7 lits
-650 296 222 0
-650 -296 -222 0
650 -296 222 0
650 296 -222 0
-651 650 214 0
-651 -650 -214 0
651 -650 214 0
651 650 -214 0
-652 651 213 0
-652 -651 -213 0
652 -651 213 0
652 651 -213 0
-653 652 212 0
-653 -652 -212 0
653 -652 212 0
653 652 -212 0
-654 653 207 0
-654 -653 -207 0
654 -653 207 0
654 653 -207 0
-655 654 199 0
-655 -654 -199 0
655 -654 199 0
655 654 -199 0
655 0
c Rand xor clause 10 with 7 lits
-656 296 222 0
-656 -296 -222 0
656 -296 222 0
656 296 -222 0
-657 656 214 0
-657 -656 -214 0
657 -656 214 0
657 656 -214 0
-658 657 213 0
-658 -657 -213 0
658 -657 213 0
658 657 -213 0
-659 658 212 0
-659 -658 -212 0
659 -658 212 0
659 658 -212 0
-660 659 207 0
-660 -659 -207 0
660 -659 207 0
660 659 -207 0
-661 660 199 0
-661 -660 -199 0
661 -660 199 0
661 660 -199 0
661 0
c Rand xor clause 11 with 7 lits
-662 296 222 0
-662 -296 -222 0
662 -296 222 0
662 296 -222 0
-663 662 214 0
-663 -662 -214 0
663 -662 214 0
663 662 -214 0
-664 663 213 0
-664 -663 -213 0
664 -663 213 0
664 663 -213 0
-665 664 212 0
-665 -664 -212 0
665 -664 212 0
665 664 -212 0
-666 665 207 0
-666 -665 -207 0
666 -665 207 0
666 665 -207 0
-667 666 199 0
-667 -666 -199 0
667 -666 199 0
667 666 -199 0
667 0
c Rand xor clause 12 with 7 lits
-668 296 222 0
-668 -296 -222 0
668 -296 222 0
668 296 -222 0
-669 668 214 0
-669 -668 -214 0
669 -668 214 0
669 668 -214 0
-670 669 213 0
-670 -669 -213 0
670 -669 213 0
670 669 -213 0
-671 670 212 0
-671 -670 -212 0
671 -670 212 0
671 670 -212 0
-672 671 207 0
-672 -671 -207 0
672 -671 207 0
672 671 -207 0
-673 672 199 0
-673 -672 -199 0
673 -672 199 0
673 672 -199 0
673 0
c Rand xor clause 13 with 7 lits
-674 296 222 0
-674 -296 -222 0
674 -296 222 0
674 296 -222 0
-675 674 214 0
-675 -674 -214 0
675 -674 214 0
675 674 -214 0
-676 675 213 0
-676 -675 -213 0
676 -675 213 0
676 675 -213 0
-677 676 212 0
-677 -676 -212 0
677 -676 212 0
677 676 -212 0
-678 677 207 0
-678 -677 -207 0
678 -677 207 0
678 677 -207 0
-679 678 199 0
-679 -678 -199 0
679 -678 199 0
679 678 -199 0
679 0
c Rand xor clause 14 with 7 lits
-680 296 222 0
-680 -296 -222 0
680 -296 222 0
680 296 -222 0
-681 680 214 0
-681 -680 -214 0
681 -680 214 0
681 680 -214 0
-682 681 213 0
-682 -681 -213 0
682 -681 213 0
682 681 -213 0
-683 682 212 0
-683 -682 -212 0
683 -682 212 0
683 682 -212 0
-684 683 207 0
-684 -683 -207 0
684 -683 207 0
684 683 -207 0
-685 684 199 0
-685 -684 -199 0
685 -684 199 0
685 684 -199 0
685 0
c Rand xor clause 15 with 7 lits
