p cnf 773 2210
c
c CNF representation of circuit s1238 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 540 Total inputs 32
c
c
p cnf 773 2210
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 25 0
c ind 26 27 28 29 30 0
c ind 31 32 0
c
c Gate #34: not (NOT_4): out = 33, in = 30 
33 30 0
-33 -30 0
c Gate #35: not (NOT_5): out = 34, in = 29 
34 29 0
-34 -29 0
c Gate #36: not (NOT_12): out = 35, in = 15 
35 15 0
-35 -15 0
c Gate #37: not (NOT_14): out = 36, in = 26 
36 26 0
-36 -26 0
c Gate #38: not (NOT_15): out = 37, in = 28 
37 28 0
-37 -28 0
c Gate #39: not (NOT_17): out = 38, in = 19 
38 19 0
-38 -19 0
c Gate #40: not (NOT_36): out = 39, in = 16 
39 16 0
-39 -16 0
c Gate #41: not (NOT_44): out = 40, in = 16 
40 16 0
-40 -16 0
c Gate #42: not (NOT_62): out = 41, in = 1 
41 1 0
-41 -1 0
c Gate #43: not (NOT_63): out = 42, in = 2 
42 2 0
-42 -2 0
c Gate #44: not (NOT_64): out = 43, in = 3 
43 3 0
-43 -3 0
c Gate #45: not (NOT_65): out = 44, in = 4 
44 4 0
-44 -4 0
c Gate #46: not (NOT_67): out = 45, in = 5 
45 5 0
-45 -5 0
c Gate #47: not (NOT_68): out = 46, in = 6 
46 6 0
-46 -6 0
c Gate #48: not (NOT_69): out = 47, in = 7 
47 7 0
-47 -7 0
c Gate #49: not (NOT_70): out = 48, in = 8 
48 8 0
-48 -8 0
c Gate #50: not (NOT_71): out = 49, in = 9 
49 9 0
-49 -9 0
c Gate #51: not (NOT_72): out = 50, in = 10 
50 10 0
-50 -10 0
c Gate #52: not (NOT_73): out = 51, in = 11 
51 11 0
-51 -11 0
c Gate #53: not (NOT_74): out = 52, in = 12 
52 12 0
-52 -12 0
c Gate #54: not (NOT_75): out = 53, in = 13 
53 13 0
-53 -13 0
c Gate #55: not (NOT_76): out = 54, in = 14 
54 14 0
-54 -14 0
c Gate #56: not (NOT_78): out = 55, in = 27 
55 27 0
-55 -27 0
c Gate #57: and (AND2_29): out = 56, in = 17 7 
-56 17 0
-56 7 0
56 -17 -7 0
c Gate #58: and (AND2_62): out = 57, in = 33 44 
-57 33 0
-57 44 0
57 -33 -44 0
c Gate #59: and (AND2_82): out = 58, in = 48 47 
-58 48 0
-58 47 0
58 -48 -47 0
c Gate #60: or (OR2_28): out = 59, in = 16 7 
59 -16 0
59 -7 0
-59 16 7 0
c Gate #61: or (OR2_29): out = 60, in = 17 49 
60 -17 0
60 -49 0
-60 17 49 0
c Gate #62: or (OR2_36): out = 61, in = 52 10 
61 -52 0
61 -10 0
-61 52 10 0
c Gate #63: or (OR2_38): out = 62, in = 46 2 
62 -46 0
62 -2 0
-62 46 2 0
c Gate #64: or (OR2_40): out = 63, in = 52 8 
63 -52 0
63 -8 0
-63 52 8 0
c Gate #65: or (OR2_48): out = 64, in = 47 5 
64 -47 0
64 -5 0
-64 47 5 0
c Gate #66: or (OR2_54): out = 65, in = 50 48 
65 -50 0
65 -48 0
-65 50 48 0
c Gate #67: or (OR2_59): out = 66, in = 7 46 
66 -7 0
66 -46 0
-66 7 46 0
c Gate #68: or (OR2_60): out = 67, in = 5 4 
67 -5 0
67 -4 0
-67 5 4 0
c Gate #69: or (OR2_63): out = 68, in = 50 7 
68 -50 0
68 -7 0
-68 50 7 0
c Gate #70: or (OR2_65): out = 69, in = 39 7 
69 -39 0
69 -7 0
-69 39 7 0
c Gate #71: or (OR2_66): out = 70, in = 50 49 
70 -50 0
70 -49 0
-70 50 49 0
c Gate #72: or (OR2_68): out = 71, in = 12 51 
71 -12 0
71 -51 0
-71 12 51 0
c Gate #73: or (OR2_69): out = 72, in = 51 50 
72 -51 0
72 -50 0
-72 51 50 0
c Gate #74: or (OR2_70): out = 73, in = 52 11 
73 -52 0
73 -11 0
-73 52 11 0
c Gate #75: or (OR2_81): out = 74, in = 6 4 
74 -6 0
74 -4 0
-74 6 4 0
c Gate #76: nand (NAND2_0): out = 75, in = 51 10 
75 51 0
75 10 0
-75 -51 -10 0
c Gate #77: nand (NAND2_3): out = 76, in = 7 5 
76 7 0
76 5 0
-76 -7 -5 0
c Gate #78: nand (NAND2_4): out = 77, in = 73 72 
77 73 0
77 72 0
-77 -73 -72 0
c Gate #79: nand (NAND2_5): out = 78, in = 3 1 
78 3 0
78 1 0
-78 -3 -1 0
c Gate #80: nand (NAND2_6): out = 79, in = 4 2 
79 4 0
79 2 0
-79 -4 -2 0
c Gate #81: nand (NAND2_11): out = 80, in = 46 64 
80 46 0
80 64 0
-80 -46 -64 0
c Gate #82: nand (NAND2_12): out = 81, in = 11 9 
81 11 0
81 9 0
-81 -11 -9 0
c Gate #83: nand (NAND2_13): out = 82, in = 12 10 
82 12 0
82 10 0
-82 -12 -10 0
c Gate #84: nand (NAND2_14): out = 83, in = 4 1 
83 4 0
83 1 0
-83 -4 -1 0
c Gate #85: nand (NAND2_15): out = 84, in = 46 5 
84 46 0
84 5 0
-84 -46 -5 0
c Gate #86: nand (NAND2_21): out = 85, in = 9 48 
85 9 0
85 48 0
-85 -9 -48 0
c Gate #87: nand (NAND2_23): out = 86, in = 6 3 
86 6 0
86 3 0
-86 -6 -3 0
c Gate #88: nand (NAND2_25): out = 87, in = 5 4 
87 5 0
87 4 0
-87 -5 -4 0
c Gate #89: nand (NAND3_6): out = 88, in = 16 8 47 
-542 16 0
-542 8 0
542 -16 -8 0
-541 542 0
-541 47 0
541 -542 -47 0
88 541 0
-88 -541 0
c Gate #90: nand (NAND2_29): out = 89, in = 17 9 
89 17 0
89 9 0
-89 -17 -9 0
c Gate #91: nand (NAND2_31): out = 90, in = 10 7 
90 10 0
90 7 0
-90 -10 -7 0
c Gate #92: nand (NAND2_32): out = 91, in = 5 3 
91 5 0
91 3 0
-91 -5 -3 0
c Gate #93: nand (NAND2_35): out = 92, in = 4 43 
92 4 0
92 43 0
-92 -4 -43 0
c Gate #94: nand (NAND2_38): out = 93, in = 6 45 
93 6 0
93 45 0
-93 -6 -45 0
c Gate #95: nand (NAND2_40): out = 94, in = 6 4 
94 6 0
94 4 0
-94 -6 -4 0
c Gate #96: nand (NAND2_51): out = 95, in = 47 45 
95 47 0
95 45 0
-95 -47 -45 0
c Gate #97: nand (NAND2_59): out = 96, in = 81 8 
96 81 0
96 8 0
-96 -81 -8 0
c Gate #98: nand (NAND2_60): out = 97, in = 11 49 
97 11 0
97 49 0
-97 -11 -49 0
c Gate #99: nand (NAND2_62): out = 98, in = 6 44 
98 6 0
98 44 0
-98 -6 -44 0
c Gate #100: nand (NAND2_65): out = 99, in = 50 7 
99 50 0
99 7 0
-99 -50 -7 0
c Gate #101: nand (NAND2_66): out = 100, in = 44 3 
100 44 0
100 3 0
-100 -44 -3 0
c Gate #102: nand (NAND2_67): out = 101, in = 49 8 
101 49 0
101 8 0
-101 -49 -8 0
c Gate #103: nand (NAND2_68): out = 102, in = 94 5 
102 94 0
102 5 0
-102 -94 -5 0
c Gate #104: nand (NAND2_69): out = 103, in = 20 9 
103 20 0
103 9 0
-103 -20 -9 0
c Gate #105: nand (NAND2_71): out = 104, in = 22 47 
104 22 0
104 47 0
-104 -22 -47 0
c Gate #106: nand (NAND2_73): out = 105, in = 18 54 
105 18 0
105 54 0
-105 -18 -54 0
c Gate #107: nand (NAND2_80): out = 106, in = 35 1 
106 35 0
106 1 0
-106 -35 -1 0
c Gate #108: nand (NAND2_87): out = 107, in = 5 2 
107 5 0
107 2 0
-107 -5 -2 0
c Gate #109: nand (NAND2_89): out = 108, in = 11 8 
108 11 0
108 8 0
-108 -11 -8 0
c Gate #110: nand (NAND3_18): out = 109, in = 38 54 4 
-544 38 0
-544 54 0
544 -38 -54 0
-543 544 0
-543 4 0
543 -544 -4 0
109 543 0
-109 -543 0
c Gate #111: nand (NAND2_92): out = 110, in = 51 61 
110 51 0
110 61 0
-110 -51 -61 0
c Gate #112: nand (NAND2_95): out = 111, in = 99 68 
111 99 0
111 68 0
-111 -99 -68 0
c Gate #113: nor (NOR2_0): out = 112, in = 52 43 
-112 -52 0
-112 -43 0
112 52 43 0
c Gate #114: nor (NOR2_3): out = 113, in = 54 13 
-113 -54 0
-113 -13 0
113 54 13 0
c Gate #115: nor (NOR2_6): out = 114, in = 5 1 
-114 -5 0
-114 -1 0
114 5 1 0
c Gate #116: nor (NOR2_7): out = 115, in = 11 48 
-115 -11 0
-115 -48 0
115 11 48 0
c Gate #117: nor (NOR2_8): out = 116, in = 47 44 
-116 -47 0
-116 -44 0
116 47 44 0
c Gate #118: nor (NOR2_9): out = 117, in = 8 6 
-117 -8 0
-117 -6 0
117 8 6 0
c Gate #119: nor (NOR2_16): out = 118, in = 5 42 
-118 -5 0
-118 -42 0
118 5 42 0
c Gate #120: nor (NOR2_22): out = 119, in = 76 43 
-119 -76 0
-119 -43 0
119 76 43 0
c Gate #121: nor (NOR2_23): out = 120, in = 12 8 
-120 -12 0
-120 -8 0
120 12 8 0
c Gate #122: nor (NOR2_26): out = 121, in = 94 42 
-121 -94 0
-121 -42 0
121 94 42 0
c Gate #123: nor (NOR2_28): out = 122, in = 4 41 
-122 -4 0
-122 -41 0
122 4 41 0
c Gate #124: nor (NOR2_29): out = 123, in = 76 46 
-123 -76 0
-123 -46 0
123 76 46 0
c Gate #125: nor (NOR2_31): out = 124, in = 92 47 
-124 -92 0
-124 -47 0
124 92 47 0
c Gate #126: nor (NOR2_32): out = 125, in = 44 2 
-125 -44 0
-125 -2 0
125 44 2 0
c Gate #127: nor (NOR2_33): out = 126, in = 108 7 
-126 -108 0
-126 -7 0
126 108 7 0
c Gate #128: nor (NOR2_34): out = 127, in = 6 5 
-127 -6 0
-127 -5 0
127 6 5 0
c Gate #129: nor (NOR2_36): out = 128, in = 9 8 
-128 -9 0
-128 -8 0
128 9 8 0
c Gate #130: nor (NOR2_37): out = 129, in = 95 6 
-129 -95 0
-129 -6 0
129 95 6 0
c Gate #131: nor (NOR2_38): out = 130, in = 43 2 
-130 -43 0
-130 -2 0
130 43 2 0
c Gate #132: nor (NOR3_4): out = 131, in = 76 108 50 
546 -76 0
546 -108 0
-546 76 108 0
545 -546 0
545 -50 0
-545 546 50 0
131 545 0
-131 -545 0
c Gate #133: nor (NOR2_40): out = 132, in = 12 11 
-132 -12 0
-132 -11 0
132 12 11 0
c Gate #134: not (NOT_23): out = 133, in = 95 
133 95 0
-133 -95 0
c Gate #135: and (AND2_32): out = 134, in = 84 93 
-134 84 0
-134 93 0
134 -84 -93 0
c Gate #136: and (AND2_33): out = 135, in = 124 84 
-135 124 0
-135 84 0
135 -124 -84 0
c Gate #137: and (AND2_41): out = 136, in = 126 10 
-136 126 0
-136 10 0
136 -126 -10 0
c Gate #138: and (AND3_15): out = 137, in = 75 8 47 
-547 75 0
-547 8 0
547 -75 -8 0
-137 547 0
-137 47 0
137 -547 -47 0
c Gate #139: and (AND2_53): out = 138, in = 124 2 
-138 124 0
-138 2 0
138 -124 -2 0
c Gate #140: and (AND2_56): out = 139, in = 22 133 
-139 22 0
-139 133 0
139 -22 -133 0
c Gate #141: and (AND2_70): out = 140, in = 131 1 
-140 131 0
-140 1 0
140 -131 -1 0
c Gate #142: and (AND2_80): out = 141, in = 125 46 
-141 125 0
-141 46 0
141 -125 -46 0
c Gate #143: and (AND2_81): out = 142, in = 122 84 
-142 122 0
-142 84 0
142 -122 -84 0
c Gate #144: and (AND2_85): out = 143, in = 122 43 
-143 122 0
-143 43 0
143 -122 -43 0
c Gate #145: and (AND2_87): out = 144, in = 4 114 
-144 4 0
-144 114 0
144 -4 -114 0
c Gate #146: and (AND2_91): out = 145, in = 115 114 
-145 115 0
-145 114 0
145 -115 -114 0
c Gate #147: or (OR2_33): out = 146, in = 47 134 
146 -47 0
146 -134 0
-146 47 134 0
c Gate #148: not (NOT_28): out = 147, in = 97 
147 97 0
-147 -97 0
c Gate #149: not (NOT_29): out = 148, in = 60 
148 60 0
-148 -60 0
c Gate #150: or (OR2_42): out = 149, in = 40 85 
149 -40 0
149 -85 0
-149 40 85 0
c Gate #151: not (NOT_31): out = 150, in = 99 
150 99 0
-150 -99 0
c Gate #152: or (OR2_53): out = 151, in = 78 45 
151 -78 0
151 -45 0
-151 78 45 0
c Gate #153: not (NOT_32): out = 152, in = 107 
152 107 0
-152 -107 0
c Gate #154: or (OR2_56): out = 153, in = 152 83 
153 -152 0
153 -83 0
-153 152 83 0
c Gate #155: or (OR3_6): out = 154, in = 97 50 8 
548 -97 0
548 -50 0
-548 97 50 0
154 -548 0
154 -8 0
-154 548 8 0
c Gate #156: or (OR2_58): out = 155, in = 100 47 
155 -100 0
155 -47 0
-155 100 47 0
c Gate #157: not (NOT_33): out = 156, in = 108 
156 108 0
-156 -108 0
c Gate #158: not (NOT_35): out = 157, in = 78 
157 78 0
-157 -78 0
c Gate #159: or (OR2_64): out = 158, in = 90 12 
158 -90 0
158 -12 0
-158 90 12 0
c Gate #160: not (NOT_6): out = 159, in = 81 
159 81 0
-159 -81 0
c Gate #161: not (NOT_37): out = 160, in = 109 
160 109 0
-160 -109 0
c Gate #162: or (OR2_67): out = 161, in = 101 52 
161 -101 0
161 -52 0
-161 101 52 0
c Gate #163: or (OR2_71): out = 162, in = 81 8 
162 -81 0
162 -8 0
-162 81 8 0
c Gate #164: or (OR2_72): out = 163, in = 81 47 
163 -81 0
163 -47 0
-163 81 47 0
c Gate #165: or (OR2_73): out = 164, in = 108 10 
164 -108 0
164 -10 0
-164 108 10 0
c Gate #166: or (OR2_75): out = 165, in = 96 82 
165 -96 0
165 -82 0
-165 96 82 0
c Gate #167: or (OR2_76): out = 166, in = 79 6 
166 -79 0
166 -6 0
-166 79 6 0
c Gate #168: or (OR2_77): out = 167, in = 94 5 
167 -94 0
167 -5 0
-167 94 5 0
c Gate #169: or (OR2_78): out = 168, in = 91 7 
168 -91 0
168 -7 0
-168 91 7 0
c Gate #170: or (OR2_79): out = 169, in = 84 47 
169 -84 0
169 -47 0
-169 84 47 0
c Gate #171: not (NOT_41): out = 170, in = 93 
170 93 0
-170 -93 0
c Gate #172: or (OR3_7): out = 171, in = 98 3 42 
549 -98 0
549 -3 0
-549 98 3 0
171 -549 0
171 -42 0
-171 549 42 0
c Gate #173: or (OR3_8): out = 172, in = 84 92 170 
550 -84 0
550 -92 0
-550 84 92 0
172 -550 0
172 -170 0
-172 550 170 0
c Gate #174: or (OR2_86): out = 173, in = 50 159 
173 -50 0
173 -159 0
-173 50 159 0
c Gate #175: or (OR2_88): out = 174, in = 81 51 
174 -81 0
174 -51 0
-174 81 51 0
c Gate #176: not (NOT_42): out = 175, in = 132 
175 132 0
-175 -132 0
c Gate #177: not (NOT_7): out = 176, in = 82 
176 82 0
-176 -82 0
c Gate #178: not (NOT_45): out = 177, in = 109 
177 109 0
-177 -109 0
c Gate #179: not (NOT_46): out = 178, in = 80 
178 80 0
-178 -80 0
c Gate #180: nand (NAND2_8): out = 179, in = 9 176 
179 9 0
179 176 0
-179 -9 -176 0
c Gate #181: nand (NAND2_9): out = 180, in = 98 45 
180 98 0
180 45 0
-180 -98 -45 0
c Gate #182: nand (NAND2_10): out = 181, in = 87 93 
181 87 0
181 93 0
-181 -87 -93 0
c Gate #183: not (NOT_50): out = 182, in = 120 
182 120 0
-182 -120 0
c Gate #184: nand (NAND2_17): out = 183, in = 69 158 
183 69 0
183 158 0
-183 -69 -158 0
c Gate #185: nand (NAND2_18): out = 184, in = 71 161 
184 71 0
184 161 0
-184 -71 -161 0
c Gate #186: nand (NAND2_19): out = 185, in = 101 163 
185 101 0
185 163 0
-185 -101 -163 0
c Gate #187: nand (NAND2_24): out = 186, in = 96 162 
186 96 0
186 162 0
-186 -96 -162 0
c Gate #188: nand (NAND3_7): out = 187, in = 102 100 92 
-552 102 0
-552 100 0
552 -102 -100 0
-551 552 0
-551 92 0
551 -552 -92 0
187 551 0
-187 -551 0
c Gate #189: not (NOT_57): out = 188, in = 124 
188 124 0
-188 -124 0
c Gate #190: not (NOT_58): out = 189, in = 121 
189 121 0
-189 -121 0
c Gate #191: nand (NAND2_39): out = 190, in = 10 174 
190 10 0
190 174 0
-190 -10 -174 0
c Gate #192: not (NOT_61): out = 191, in = 113 
191 113 0
-191 -113 0
c Gate #193: nand (NAND2_41): out = 192, in = 60 97 
192 60 0
192 97 0
-192 -60 -97 0
c Gate #194: nand (NAND2_45): out = 193, in = 159 65 
193 159 0
193 65 0
-193 -159 -65 0
c Gate #195: nand (NAND2_47): out = 194, in = 147 176 
194 147 0
194 176 0
-194 -147 -176 0
c Gate #196: not (NOT_8): out = 195, in = 84 
195 84 0
-195 -84 0
c Gate #197: nand (NAND2_54): out = 196, in = 130 80 
196 130 0
196 80 0
-196 -130 -80 0
c Gate #198: nand (NAND2_55): out = 197, in = 152 41 
197 152 0
197 41 0
-197 -152 -41 0
c Gate #199: not (NOT_10): out = 198, in = 85 
198 85 0
-198 -85 0
c Gate #200: not (NOT_11): out = 199, in = 86 
199 86 0
-199 -86 0
c Gate #201: nand (NAND2_63): out = 200, in = 115 50 
200 115 0
200 50 0
-200 -115 -50 0
c Gate #202: nand (NAND3_12): out = 201, in = 123 176 11 
-554 123 0
-554 176 0
554 -123 -176 0
-553 554 0
-553 11 0
553 -554 -11 0
201 553 0
-201 -553 0
c Gate #203: not (NOT_2): out = 202, in = 79 
202 79 0
-202 -79 0
c Gate #204: not (NOT_13): out = 203, in = 92 
203 92 0
-203 -92 0
c Gate #205: not (NOT_3): out = 204, in = 179 
204 179 0
-204 -179 0
c Gate #206: nand (NAND3_13): out = 205, in = 20 156 70 
-556 20 0
-556 156 0
556 -20 -156 0
-555 556 0
-555 70 0
555 -556 -70 0
205 555 0
-205 -555 0
c Gate #207: not (NOT_0): out = 206, in = 75 
206 75 0
-206 -75 0
c Gate #208: not (NOT_16): out = 207, in = 94 
207 94 0
-207 -94 0
c Gate #209: not (NOT_1): out = 208, in = 76 
208 76 0
-208 -76 0
c Gate #210: nand (NAND4_0): out = 209, in = 127 21 12 4 
-558 127 0
-558 21 0
558 -127 -21 0
-559 558 0
-559 12 0
559 -558 -12 0
-557 559 0
-557 4 0
557 -559 -4 0
209 557 0
-209 -557 0
c Gate #211: nand (NAND3_16): out = 210, in = 148 88 173 
-561 148 0
-561 88 0
561 -148 -88 0
-560 561 0
-560 173 0
560 -561 -173 0
210 560 0
-210 -560 0
c Gate #212: nand (NAND2_78): out = 211, in = 128 190 
211 128 0
211 190 0
-211 -128 -190 0
c Gate #213: not (NOT_18): out = 212, in = 193 
212 193 0
-212 -193 0
c Gate #214: nand (NAND2_81): out = 213, in = 132 129 
213 132 0
213 129 0
-213 -132 -129 0
c Gate #215: nand (NAND2_82): out = 214, in = 206 48 
214 206 0
214 48 0
-214 -206 -48 0
c Gate #216: nand (NAND2_84): out = 215, in = 184 50 
215 184 0
215 50 0
-215 -184 -50 0
c Gate #217: not (NOT_19): out = 216, in = 194 
216 194 0
-216 -194 0
c Gate #218: nand (NAND3_20): out = 217, in = 94 66 155 
-563 94 0
-563 66 0
563 -94 -66 0
-562 563 0
-562 155 0
562 -563 -155 0
217 562 0
-217 -562 0
c Gate #219: not (NOT_22): out = 218, in = 59 
218 59 0
-218 -59 0
c Gate #220: and (AND2_0): out = 219, in = 102 62 
-219 102 0
-219 62 0
219 -102 -62 0
c Gate #221: and (AND2_5): out = 220, in = 195 44 
-220 195 0
-220 44 0
220 -195 -44 0
c Gate #222: nor (NOR2_24): out = 221, in = 175 10 
-221 -175 0
-221 -10 0
221 175 10 0
c Gate #223: and (AND2_6): out = 222, in = 187 7 
-222 187 0
-222 7 0
222 -187 -7 0
c Gate #224: nor (NOR2_27): out = 223, in = 200 52 
-223 -200 0
-223 -52 0
223 200 52 0
c Gate #225: nor (NOR2_30): out = 224, in = 179 11 
-224 -179 0
-224 -11 0
224 179 11 0
c Gate #226: and (AND2_11): out = 225, in = 206 198 
-225 206 0
-225 198 0
225 -206 -198 0
c Gate #227: nor (NOR2_39): out = 226, in = 182 9 
-226 -182 0
-226 -9 0
226 182 9 0
c Gate #228: not (NOT_25): out = 227, in = 196 
227 196 0
-227 -196 0
c Gate #229: and (AND2_83): out = 228, in = 51 218 
-228 51 0
-228 218 0
228 -51 -218 0
c Gate #230: and (AND3_37): out = 229, in = 89 88 221 
-564 89 0
-564 88 0
564 -89 -88 0
-229 564 0
-229 221 0
229 -564 -221 0
c Gate #231: and (AND3_38): out = 230, in = 120 10 192 
-565 120 0
-565 10 0
565 -120 -10 0
-230 565 0
-230 192 0
230 -565 -192 0
c Gate #232: and (AND2_24): out = 231, in = 118 207 
-231 118 0
-231 207 0
231 -118 -207 0
c Gate #233: and (AND3_9): out = 232, in = 208 86 2 
-566 208 0
-566 86 0
566 -208 -86 0
-232 566 0
-232 2 0
232 -566 -2 0
c Gate #234: or (OR2_37): out = 233, in = 219 43 
233 -219 0
233 -43 0
-233 219 43 0
c Gate #235: or (OR2_39): out = 234, in = 176 51 
234 -176 0
234 -51 0
-234 176 51 0
c Gate #236: not (NOT_30): out = 235, in = 200 
235 200 0
-235 -200 0
c Gate #237: and (AND4_0): out = 236, in = 150 147 117 44 
-567 150 0
-567 147 0
567 -150 -147 0
-568 567 0
-568 117 0
568 -567 -117 0
-236 568 0
-236 44 0
236 -568 -44 0
c Gate #238: or (OR2_43): out = 237, in = 108 204 
237 -108 0
237 -204 0
-237 108 204 0
c Gate #239: or (OR2_44): out = 238, in = 188 6 
238 -188 0
238 -6 0
-238 188 6 0
c Gate #240: or (OR2_45): out = 239, in = 84 203 
239 -84 0
239 -203 0
-239 84 203 0
c Gate #241: or (OR2_47): out = 240, in = 178 92 
240 -178 0
240 -92 0
-240 178 92 0
c Gate #242: and (AND4_1): out = 241, in = 115 23 207 9 
-569 115 0
-569 23 0
569 -115 -23 0
-570 569 0
-570 207 0
570 -569 -207 0
-241 570 0
-241 9 0
241 -570 -9 0
c Gate #243: or (OR2_49): out = 242, in = 208 44 
242 -208 0
242 -44 0
-242 208 44 0
c Gate #244: or (OR2_50): out = 243, in = 6 152 
243 -6 0
243 -152 0
-243 6 152 0
c Gate #245: or (OR2_51): out = 244, in = 207 43 
244 -207 0
244 -43 0
-244 207 43 0
c Gate #246: or (OR2_52): out = 245, in = 157 42 
245 -157 0
245 -42 0
-245 157 42 0
c Gate #247: or (OR3_5): out = 246, in = 200 9 7 
571 -200 0
571 -9 0
-571 200 9 0
246 -571 0
246 -7 0
-246 571 7 0
c Gate #248: and (AND2_27): out = 247, in = 200 214 
-247 200 0
-247 214 0
247 -200 -214 0
c Gate #249: and (AND2_28): out = 248, in = 183 8 
-248 183 0
-248 8 0
248 -183 -8 0
c Gate #250: or (OR2_57): out = 249, in = 200 49 
249 -200 0
249 -49 0
-249 200 49 0
c Gate #251: or (OR2_61): out = 250, in = 195 2 
250 -195 0
250 -2 0
-250 195 2 0
c Gate #252: and (AND2_31): out = 251, in = 224 7 
-251 224 0
-251 7 0
251 -224 -7 0
c Gate #253: and (AND3_12): out = 252, in = 215 194 193 
-572 215 0
-572 194 0
572 -215 -194 0
-252 572 0
-252 193 0
252 -572 -193 0
c Gate #254: or (OR2_74): out = 253, in = 206 85 
253 -206 0
253 -85 0
-253 206 85 0
c Gate #255: and (AND2_37): out = 254, in = 212 20 
-254 212 0
-254 20 0
254 -212 -20 0
c Gate #256: and (AND2_38): out = 255, in = 176 49 
-255 176 0
-255 49 0
255 -176 -49 0
c Gate #257: and (AND2_39): out = 256, in = 77 198 
-256 77 0
-256 198 0
256 -77 -198 0
c Gate #258: and (AND2_40): out = 257, in = 206 85 
-257 206 0
-257 85 0
257 -206 -85 0
c Gate #259: or (OR2_80): out = 258, in = 208 46 
258 -208 0
258 -46 0
-258 208 46 0
c Gate #260: or (OR2_82): out = 259, in = 202 43 
259 -202 0
259 -43 0
-259 202 43 0
c Gate #261: and (AND3_14): out = 260, in = 20 186 10 
-573 20 0
-573 186 0
573 -20 -186 0
-260 573 0
-260 10 0
260 -573 -10 0
c Gate #262: or (OR2_85): out = 261, in = 195 41 
261 -195 0
261 -41 0
-261 195 41 0
c Gate #263: or (OR2_87): out = 262, in = 197 44 
262 -197 0
262 -44 0
-262 197 44 0
c Gate #264: nand (NAND3_0): out = 263, in = 258 169 168 
-575 258 0
-575 169 0
575 -258 -169 0
-574 575 0
-574 168 0
574 -575 -168 0
263 574 0
-263 -574 0
c Gate #265: and (AND2_44): out = 264, in = 185 50 
-264 185 0
-264 50 0
264 -185 -50 0
c Gate #266: nand (NAND2_2): out = 265, in = 201 213 
265 201 0
265 213 0
-265 -201 -213 0
c Gate #267: and (AND3_16): out = 266, in = 176 108 7 
-576 176 0
-576 108 0
576 -176 -108 0
-266 576 0
-266 7 0
266 -576 -7 0
c Gate #268: nand (NAND2_16): out = 267, in = 250 67 
267 250 0
267 67 0
-267 -250 -67 0
c Gate #269: and (AND3_20): out = 268, in = 180 2 41 
-577 180 0
-577 2 0
577 -180 -2 0
-268 577 0
-268 41 0
268 -577 -41 0
c Gate #270: nand (NAND2_20): out = 269, in = 4 208 
269 4 0
269 208 0
-269 -4 -208 0
c Gate #271: nand (NAND2_22): out = 270, in = 151 245 
270 151 0
270 245 0
-270 -151 -245 0
c Gate #272: nand (NAND2_26): out = 271, in = 2 261 
271 2 0
271 261 0
-271 -2 -261 0
c Gate #273: nand (NAND2_30): out = 272, in = 253 164 
272 253 0
272 164 0
-272 -253 -164 0
c Gate #274: and (AND2_54): out = 273, in = 202 263 
-273 202 0
-273 263 0
273 -202 -263 0
c Gate #275: nand (NAND2_42): out = 274, in = 106 262 
274 106 0
274 262 0
-274 -106 -262 0
c Gate #276: nand (NAND3_8): out = 275, in = 211 59 210 
-579 211 0
-579 59 0
579 -211 -59 0
-578 579 0
-578 210 0
578 -579 -210 0
275 578 0
-275 -578 0
c Gate #277: nand (NAND2_43): out = 276, in = 95 242 
276 95 0
276 242 0
-276 -95 -242 0
c Gate #278: and (AND2_55): out = 277, in = 227 4 
-277 227 0
-277 4 0
277 -227 -4 0
c Gate #279: nand (NAND2_46): out = 278, in = 206 8 
278 206 0
278 8 0
-278 -206 -8 0
c Gate #280: and (AND3_23): out = 279, in = 123 223 9 
-580 123 0
-580 223 0
580 -123 -223 0
-279 580 0
-279 9 0
279 -580 -9 0
c Gate #281: nand (NAND2_49): out = 280, in = 195 3 
280 195 0
280 3 0
-280 -195 -3 0
c Gate #282: and (AND3_6): out = 281, in = 125 133 49 
-581 125 0
-581 133 0
581 -125 -133 0
-281 581 0
-281 49 0
281 -581 -49 0
c Gate #283: nand (NAND2_53): out = 282, in = 44 233 
282 44 0
282 233 0
-282 -44 -233 0
c Gate #284: nand (NAND2_56): out = 283, in = 156 204 
283 156 0
283 204 0
-283 -156 -204 0
c Gate #285: nand (NAND2_57): out = 284, in = 226 206 
284 226 0
284 206 0
-284 -226 -206 0
c Gate #286: nand (NAND2_58): out = 285, in = 208 44 
285 208 0
285 44 0
-285 -208 -44 0
c Gate #287: not (NOT_9): out = 286, in = 269 
286 269 0
-286 -269 0
c Gate #288: nand (NAND2_61): out = 287, in = 202 45 
287 202 0
287 45 0
-287 -202 -45 0
c Gate #289: nand (NAND2_64): out = 288, in = 207 43 
288 207 0
288 43 0
-288 -207 -43 0
c Gate #290: nand (NAND3_15): out = 289, in = 47 3 243 
-583 47 0
-583 3 0
583 -47 -3 0
-582 583 0
-582 243 0
582 -583 -243 0
289 582 0
-289 -582 0
c Gate #291: nand (NAND2_77): out = 290, in = 226 51 
290 226 0
290 51 0
-290 -226 -51 0
c Gate #292: nand (NAND3_17): out = 291, in = 221 47 46 
-585 221 0
-585 47 0
585 -221 -47 0
-584 585 0
-584 46 0
584 -585 -46 0
291 584 0
-291 -584 0
c Gate #293: nand (NAND2_79): out = 292, in = 217 45 
292 217 0
292 45 0
-292 -217 -45 0
c Gate #294: and (AND3_31): out = 293, in = 235 127 116 
-586 235 0
-586 127 0
586 -235 -127 0
-293 586 0
-293 116 0
293 -586 -116 0
c Gate #295: and (AND2_65): out = 294, in = 131 207 
-294 131 0
-294 207 0
294 -131 -207 0
c Gate #296: and (AND2_66): out = 295, in = 84 203 
-295 84 0
-295 203 0
295 -84 -203 0
c Gate #297: nand (NAND2_83): out = 296, in = 270 44 
296 270 0
296 44 0
-296 -270 -44 0
c Gate #298: and (AND2_67): out = 297, in = 130 181 
-297 130 0
-297 181 0
297 -130 -181 0
c Gate #299: nand (NAND2_85): out = 298, in = 272 12 
298 272 0
298 12 0
-298 -272 -12 0
c Gate #300: nand (NAND2_88): out = 299, in = 249 154 
299 249 0
299 154 0
-299 -249 -154 0
c Gate #301: not (NOT_21): out = 300, in = 280 
300 280 0
-300 -280 0
c Gate #302: nand (NAND3_19): out = 301, in = 219 167 166 
-588 219 0
-588 167 0
588 -219 -167 0
-587 588 0
-587 166 0
587 -588 -166 0
301 587 0
-301 -587 0
c Gate #303: nand (NAND2_93): out = 302, in = 63 234 
302 63 0
302 234 0
-302 -63 -234 0
c Gate #304: and (AND2_69): out = 303, in = 150 24 
-303 150 0
-303 24 0
303 -150 -24 0
c Gate #305: nand (NAND2_96): out = 304, in = 288 244 
304 288 0
304 244 0
-304 -288 -244 0
c Gate #306: nand (NAND3_25): out = 305, in = 278 237 149 
-590 278 0
-590 237 0
590 -278 -237 0
-589 590 0
-589 149 0
589 -590 -149 0
305 589 0
-305 -589 0
c Gate #307: and (AND2_1): out = 306, in = 285 92 
-306 285 0
-306 92 0
306 -285 -92 0
c Gate #308: nor (NOR2_15): out = 307, in = 49 247 
-307 -49 0
-307 -247 0
307 49 247 0
c Gate #309: and (AND3_33): out = 308, in = 126 195 204 
-591 126 0
-591 195 0
591 -126 -195 0
-308 591 0
-308 204 0
308 -591 -204 0
c Gate #310: nor (NOR3_3): out = 309, in = 269 52 6 
593 -269 0
593 -52 0
-593 269 52 0
592 -593 0
592 -6 0
-592 593 6 0
309 592 0
-309 -592 0
c Gate #311: and (AND2_73): out = 310, in = 128 265 
-310 128 0
-310 265 0
310 -128 -265 0
c Gate #312: and (AND2_7): out = 311, in = 276 6 
-311 276 0
-311 6 0
311 -276 -6 0
c Gate #313: nor (NOR2_35): out = 312, in = 284 46 
-312 -284 0
-312 -46 0
312 284 46 0
c Gate #314: nor (NOR2_41): out = 313, in = 297 295 
-313 -297 0
-313 -295 0
313 297 295 0
c Gate #315: nor (NOR3_7): out = 314, in = 277 273 138 
595 -277 0
595 -273 0
-595 277 273 0
594 -595 0
594 -138 0
-594 595 138 0
314 594 0
-314 -594 0
c Gate #316: or (OR2_62): out = 315, in = 287 47 
315 -287 0
315 -47 0
-315 287 47 0
c Gate #317: or (OR2_4): out = 316, in = 310 308 
316 -310 0
316 -308 0
-316 310 308 0
c Gate #318: and (AND2_16): out = 317, in = 290 283 
-317 290 0
-317 283 0
317 -290 -283 0
c Gate #319: or (OR2_7): out = 318, in = 241 236 
318 -241 0
318 -236 0
-318 241 236 0
c Gate #320: or (OR3_0): out = 319, in = 257 256 255 
596 -257 0
596 -256 0
-596 257 256 0
319 -596 0
319 -255 0
-319 596 255 0
c Gate #321: or (OR2_9): out = 320, in = 299 225 
320 -299 0
320 -225 0
-320 299 225 0
c Gate #322: or (OR2_10): out = 321, in = 56 248 
321 -56 0
321 -248 0
-321 56 248 0
c Gate #323: and (AND2_42): out = 322, in = 319 7 
-322 319 0
-322 7 0
322 -319 -7 0
c Gate #324: or (OR2_84): out = 323, in = 282 195 
323 -282 0
323 -195 0
-323 282 195 0
c Gate #325: or (OR2_13): out = 324, in = 264 137 
324 -264 0
324 -137 0
-324 264 137 0
c Gate #326: nand (NAND2_1): out = 325, in = 201 291 
325 201 0
325 291 0
-325 -201 -291 0
c Gate #327: nand (NAND3_1): out = 326, in = 285 239 238 
-598 285 0
-598 239 0
598 -285 -239 0
-597 598 0
-597 238 0
597 -598 -238 0
326 597 0
-326 -597 0
c Gate #328: and (AND2_45): out = 327, in = 324 12 
-327 324 0
-327 12 0
327 -324 -12 0
c Gate #329: nand (NAND2_7): out = 328, in = 18 305 
328 18 0
328 305 0
-328 -18 -305 0
c Gate #330: not (NOT_47): out = 329, in = 305 
329 305 0
-329 -305 0
c Gate #331: nand (NAND3_2): out = 330, in = 288 259 74 
-600 288 0
-600 259 0
600 -288 -259 0
-599 600 0
-599 74 0
599 -600 -74 0
330 599 0
-330 -599 0
c Gate #332: not (NOT_49): out = 331, in = 299 
331 299 0
-331 -299 0
c Gate #333: or (OR2_17): out = 332, in = 322 136 
332 -322 0
332 -136 0
-332 322 136 0
c Gate #334: or (OR2_18): out = 333, in = 294 293 
333 -294 0
333 -293 0
-333 294 293 0
c Gate #335: and (AND2_48): out = 334, in = 301 1 
-334 301 0
-334 1 0
334 -301 -1 0
c Gate #336: not (NOT_52): out = 335, in = 328 
335 328 0
-335 -328 0
c Gate #337: nand (NAND3_5): out = 336, in = 197 296 153 
-602 197 0
-602 296 0
602 -197 -296 0
-601 602 0
-601 153 0
601 -602 -153 0
336 601 0
-336 -601 0
c Gate #338: not (NOT_55): out = 337, in = 299 
337 299 0
-337 -299 0
c Gate #339: nand (NAND2_27): out = 338, in = 285 146 
338 285 0
338 146 0
-338 -285 -146 0
c Gate #340: nand (NAND2_28): out = 339, in = 284 283 
339 284 0
339 283 0
-339 -284 -283 0
c Gate #341: and (AND2_51): out = 340, in = 312 5 
-340 312 0
-340 5 0
340 -312 -5 0
c Gate #342: nand (NAND2_36): out = 341, in = 282 1 
341 282 0
341 1 0
-341 -282 -1 0
c Gate #343: nand (NAND2_37): out = 342, in = 298 165 
342 298 0
342 165 0
-342 -298 -165 0
c Gate #344: nand (NAND3_10): out = 343, in = 1 323 172 
-604 1 0
-604 323 0
604 -1 -323 0
-603 604 0
-603 172 0
603 -604 -172 0
343 603 0
-343 -603 0
c Gate #345: or (OR3_2): out = 344, in = 311 222 220 
605 -311 0
605 -222 0
-605 311 222 0
344 -605 0
344 -220 0
-344 605 220 0
c Gate #346: not (NOT_26): out = 345, in = 283 
345 283 0
-345 -283 0
c Gate #347: nand (NAND2_52): out = 346, in = 286 42 
346 286 0
346 42 0
-346 -286 -42 0
c Gate #348: or (OR2_32): out = 347, in = 46 306 
347 -46 0
347 -306 0
-347 46 306 0
c Gate #349: nand (NAND3_11): out = 348, in = 345 208 207 
-607 345 0
-607 208 0
607 -345 -208 0
-606 607 0
-606 207 0
606 -607 -207 0
348 606 0
-348 -606 0
c Gate #350: and (AND3_35): out = 349, in = 207 271 5 
-608 207 0
-608 271 0
608 -207 -271 0
-349 608 0
-349 5 0
349 -608 -5 0
c Gate #351: and (AND2_59): out = 350, in = 129 345 
-350 129 0
-350 345 0
350 -129 -345 0
c Gate #352: and (AND2_60): out = 351, in = 128 325 
-351 128 0
-351 325 0
351 -128 -325 0
c Gate #353: nand (NAND3_14): out = 352, in = 123 299 12 
-610 123 0
-610 299 0
610 -123 -299 0
-609 610 0
-609 12 0
609 -610 -12 0
352 609 0
-352 -609 0
c Gate #354: and (AND2_61): out = 353, in = 309 307 
-353 309 0
-353 307 0
353 -309 -307 0
c Gate #355: not (NOT_24): out = 354, in = 346 
354 346 0
-354 -346 0
c Gate #356: nand (NAND2_74): out = 355, in = 312 286 
355 312 0
355 286 0
-355 -312 -286 0
c Gate #357: nand (NAND2_75): out = 356, in = 344 2 
356 344 0
356 2 0
-356 -344 -2 0
c Gate #358: nand (NAND2_76): out = 357, in = 330 5 
357 330 0
357 5 0
-357 -330 -5 0
c Gate #359: and (AND2_84): out = 358, in = 343 42 
-358 343 0
-358 42 0
358 -343 -42 0
c Gate #360: and (AND2_86): out = 359, in = 341 45 
-359 341 0
-359 45 0
359 -341 -45 0
c Gate #361: nand (NAND2_86): out = 360, in = 346 315 
360 346 0
360 315 0
-360 -346 -315 0
c Gate #362: or (OR2_46): out = 361, in = 86 286 
361 -86 0
361 -286 0
-361 86 286 0
c Gate #363: and (AND3_8): out = 362, in = 121 119 339 
-611 121 0
-611 119 0
611 -121 -119 0
-362 611 0
-362 339 0
362 -611 -339 0
c Gate #364: nand (NAND3_21): out = 363, in = 280 240 361 
-613 280 0
-613 240 0
613 -280 -240 0
-612 613 0
-612 361 0
612 -613 -361 0
363 612 0
-363 -612 0
c Gate #365: and (AND2_89): out = 364, in = 275 12 
-364 275 0
-364 12 0
364 -275 -12 0
c Gate #366: nand (NAND3_23): out = 365, in = 196 289 356 
-615 196 0
-615 289 0
615 -196 -289 0
-614 615 0
-614 356 0
614 -615 -356 0
365 614 0
-365 -614 0
c Gate #367: and (AND2_20): out = 366, in = 360 9 
-366 360 0
-366 9 0
366 -360 -9 0
c Gate #368: and (AND3_10): out = 367, in = 114 318 12 
-616 114 0
-616 318 0
616 -114 -318 0
-367 616 0
-367 12 0
367 -616 -12 0
c Gate #369: nor (NOR2_11): out = 368, in = 337 6 
-368 -337 0
-368 -6 0
368 337 6 0
c Gate #370: nor (NOR2_18): out = 369, in = 328 13 
-369 -328 0
-369 -13 0
369 328 13 0
c Gate #371: nor (NOR2_21): out = 370, in = 335 14 
-370 -335 0
-370 -14 0
370 335 14 0
c Gate #372: and (AND2_23): out = 371, in = 267 3 
-371 267 0
-371 3 0
371 -267 -3 0
c Gate #373: or (OR2_55): out = 372, in = 331 47 
372 -331 0
372 -47 0
-372 331 47 0
c Gate #374: or (OR2_0): out = 373, in = 140 303 
373 -140 0
373 -303 0
-373 140 303 0
c Gate #375: or (OR2_1): out = 374, in = 139 279 
374 -139 0
374 -279 0
-374 139 279 0
c Gate #376: and (AND2_74): out = 375, in = 316 44 
-375 316 0
-375 44 0
375 -316 -44 0
c Gate #377: and (AND2_8): out = 376, in = 369 300 
-376 369 0
-376 300 0
376 -369 -300 0
c Gate #378: and (AND3_3): out = 377, in = 309 320 43 
-617 309 0
-617 320 0
617 -309 -320 0
-377 617 0
-377 43 0
377 -617 -43 0
c Gate #379: nor (NOR2_43): out = 378, in = 6 317 
-378 -6 0
-378 -317 0
378 6 317 0
c Gate #380: nor (NOR2_45): out = 379, in = 327 266 
-379 -327 0
-379 -266 0
379 327 266 0
c Gate #381: and (AND2_30): out = 380, in = 321 9 
-380 321 0
-380 9 0
380 -321 -9 0
c Gate #382: nor (NOR2_46): out = 381, in = 351 350 
-381 -351 0
-381 -350 0
381 351 350 0
c Gate #383: and (AND2_34): out = 382, in = 338 3 
-382 338 0
-382 3 0
382 -338 -3 0
c Gate #384: nand (NAND3_4): out = 383, in = 292 280 347 
-619 292 0
-619 280 0
619 -292 -280 0
-618 619 0
-618 347 0
618 -619 -347 0
383 618 0
-383 -618 0
c Gate #385: not (NOT_54): out = 384, in = 368 
384 368 0
-384 -368 0
c Gate #386: or (OR2_11): out = 385, in = 231 371 
385 -231 0
385 -371 0
-385 231 371 0
c Gate #387: or (OR2_12): out = 386, in = 334 268 
386 -334 0
386 -268 0
-386 334 268 0
c Gate #388: not (NOT_60): out = 387, in = 368 
387 368 0
-387 -368 0
c Gate #389: and (AND2_19): out = 388, in = 354 224 
-388 354 0
-388 224 0
388 -354 -224 0
c Gate #390: nand (NAND3_9): out = 389, in = 355 209 348 
-621 355 0
-621 209 0
621 -355 -209 0
-620 621 0
-620 348 0
620 -621 -348 0
389 620 0
-389 -620 0
c Gate #391: or (OR2_26): out = 390, in = 359 143 
390 -359 0
390 -143 0
-390 359 143 0
c Gate #392: or (OR3_1): out = 391, in = 142 141 349 
622 -142 0
622 -141 0
-622 142 141 0
391 -622 0
391 -349 0
-391 622 349 0
c Gate #393: and (AND2_18): out = 392, in = 216 360 
-392 216 0
-392 360 0
392 -216 -360 0
c Gate #394: not (NOT_27): out = 393, in = 348 
393 348 0
-393 -348 0
c Gate #395: nand (NAND2_72): out = 394, in = 365 14 
394 365 0
394 14 0
-394 -365 -14 0
c Gate #396: and (AND2_25): out = 395, in = 385 7 
-395 385 0
-395 7 0
395 -385 -7 0
c Gate #397: and (AND3_36): out = 396, in = 391 219 3 
-623 391 0
-623 219 0
623 -391 -219 0
-396 623 0
-396 3 0
396 -623 -3 0
c Gate #398: or (OR2_14): out = 397, in = 388 392 
397 -388 0
397 -392 0
-397 388 392 0
c Gate #399: and (AND2_88): out = 398, in = 390 46 
-398 390 0
-398 46 0
398 -390 -46 0
c Gate #400: nand (NAND2_91): out = 399, in = 305 365 
399 305 0
399 365 0
-399 -305 -365 0
c Gate #401: or (OR2_16): out = 400, in = 382 135 
400 -382 0
400 -135 0
-400 382 135 0
c Gate #402: nand (NAND2_94): out = 401, in = 372 246 
401 372 0
401 246 0
-401 -372 -246 0
c Gate #403: not (NOT_43): out = 402, in = 369 
402 369 0
-402 -369 0
c Gate #404: nor (NOR2_4): out = 403, in = 402 14 
-403 -402 0
-403 -14 0
403 402 14 0
c Gate #405: nor (NOR2_5): out = 404, in = 399 42 
-404 -399 0
-404 -42 0
404 399 42 0
c Gate #406: and (AND3_1): out = 405, in = 403 207 91 
-624 403 0
-624 207 0
624 -403 -207 0
-405 624 0
-405 91 0
405 -624 -91 0
c Gate #407: nor (NOR2_13): out = 406, in = 387 269 
-406 -387 0
-406 -269 0
406 387 269 0
c Gate #408: nor (NOR2_14): out = 407, in = 384 5 
-407 -384 0
-407 -5 0
407 384 5 0
c Gate #409: and (AND2_26): out = 408, in = 393 1 
-408 393 0
-408 1 0
408 -393 -1 0
c Gate #410: and (AND2_47): out = 409, in = 20 342 
-409 20 0
-409 342 0
409 -20 -342 0
c Gate #411: and (AND2_4): out = 410, in = 404 326 
-410 404 0
-410 326 0
410 -404 -326 0
c Gate #412: nor (NOR2_25): out = 411, in = 107 399 
-411 -107 0
-411 -399 0
411 107 399 0
c Gate #413: and (AND3_18): out = 412, in = 403 199 87 
-625 403 0
-625 199 0
625 -403 -199 0
-412 625 0
-412 87 0
412 -625 -87 0
c Gate #414: or (OR2_6): out = 413, in = 57 353 
413 -57 0
413 -353 0
-413 57 353 0
c Gate #415: or (OR2_3): out = 414, in = 366 281 
414 -366 0
414 -281 0
-414 366 281 0
c Gate #416: and (AND3_19): out = 415, in = 404 113 383 
-626 404 0
-626 113 0
626 -404 -113 0
-415 626 0
-415 383 0
415 -626 -383 0
c Gate #417: and (AND2_9): out = 416, in = 105 394 
-416 105 0
-416 394 0
416 -105 -394 0
c Gate #418: and (AND2_75): out = 417, in = 406 12 
-417 406 0
-417 12 0
417 -406 -12 0
c Gate #419: not (NOT_51): out = 418, in = 411 
418 411 0
-418 -411 0
c Gate #420: and (AND2_12): out = 419, in = 389 3 
-419 389 0
-419 3 0
419 -389 -3 0
c Gate #421: and (AND3_4): out = 420, in = 403 25 5 
-627 403 0
-627 25 0
627 -403 -25 0
-420 627 0
-420 5 0
420 -627 -5 0
c Gate #422: nor (NOR3_5): out = 421, in = 329 13 416 
629 -329 0
629 -13 0
-629 329 13 0
628 -629 0
628 -416 0
-628 629 416 0
421 628 0
-421 -628 0
c Gate #423: nand (NAND3_3): out = 422, in = 357 287 171 
-631 357 0
-631 287 0
631 -357 -287 0
-630 631 0
-630 171 0
630 -631 -171 0
422 630 0
-422 -630 0
c Gate #424: nor (NOR2_44): out = 423, in = 251 380 
-423 -251 0
-423 -380 0
423 251 380 0
c Gate #425: and (AND2_15): out = 424, in = 352 104 
-424 352 0
-424 104 0
424 -352 -104 0
c Gate #426: not (NOT_34): out = 425, in = 399 
425 399 0
-425 -399 0
c Gate #427: nor (NOR4_1): out = 426, in = 358 228 58 396 
633 -358 0
633 -228 0
-633 358 228 0
634 -633 0
634 -58 0
-634 633 58 0
632 -634 0
632 -396 0
-632 634 396 0
426 632 0
-426 -632 0
c Gate #428: or (OR3_3): out = 427, in = 399 152 46 
635 -399 0
635 -152 0
-635 399 152 0
427 -635 0
427 -46 0
-427 635 46 0
c Gate #429: and (AND3_25): out = 428, in = 34 425 14 
-636 34 0
-636 425 0
636 -34 -425 0
-428 636 0
-428 14 0
428 -636 -14 0
c Gate #430: and (AND2_21): out = 429, in = 397 48 
-429 397 0
-429 48 0
429 -397 -48 0
c Gate #431: and (AND2_22): out = 430, in = 223 414 
-430 223 0
-430 414 0
430 -223 -414 0
c Gate #432: or (OR3_4): out = 431, in = 399 91 2 
637 -399 0
637 -91 0
-637 399 91 0
431 -637 0
431 -2 0
-431 637 2 0
c Gate #433: or (OR2_41): out = 432, in = 418 92 
432 -418 0
432 -92 0
-432 418 92 0
c Gate #434: nand (NAND2_34): out = 433, in = 432 431 
433 432 0
433 431 0
-433 -432 -431 0
c Gate #435: and (AND2_36): out = 434, in = 403 400 
-434 403 0
-434 400 0
434 -403 -400 0
c Gate #436: not (NOT_39): out = 435, in = 411 
435 411 0
-435 -411 0
c Gate #437: or (OR2_5): out = 436, in = 417 375 
436 -417 0
436 -375 0
-436 417 375 0
c Gate #438: and (AND2_3): out = 437, in = 433 6 
-437 433 0
-437 6 0
437 -433 -6 0
c Gate #439: nor (NOR2_19): out = 438, in = 4 424 
-438 -4 0
-438 -424 0
438 4 424 0
c Gate #440: nor (NOR2_20): out = 439, in = 191 425 
-439 -191 0
-439 -425 0
439 191 425 0
c Gate #441: or (OR2_25): out = 440, in = 430 429 
440 -430 0
440 -429 0
-440 430 429 0
c Gate #442: or (OR2_27): out = 441, in = 410 437 
441 -410 0
441 -437 0
-441 410 437 0
c Gate #443: or (OR2_19): out = 442, in = 395 232 
442 -395 0
442 -232 0
-442 395 232 0
c Gate #444: and (AND2_50): out = 443, in = 407 12 
-443 407 0
-443 12 0
443 -407 -12 0
c Gate #445: or (OR2_21): out = 444, in = 408 367 
444 -408 0
444 -367 0
-444 408 367 0
c Gate #446: and (AND2_13): out = 445, in = 438 43 
-445 438 0
-445 43 0
445 -438 -43 0
c Gate #447: and (AND2_14): out = 446, in = 113 441 
-446 113 0
-446 441 0
446 -113 -441 0
c Gate #448: or (OR2_30): out = 447, in = 398 144 
447 -398 0
447 -144 0
-447 398 144 0
c Gate #449: or (OR2_35): out = 448, in = 435 6 
448 -435 0
448 -6 0
-448 435 6 0
c Gate #450: or (OR3_12): out = 449, in = 445 419 377 
638 -445 0
638 -419 0
-638 445 419 0
449 -638 0
449 -377 0
-449 638 377 0
c Gate #451: and (AND3_7): out = 450, in = 440 46 3 
-639 440 0
-639 46 0
639 -440 -46 0
-450 639 0
-450 3 0
450 -639 -3 0
c Gate #452: or (OR2_22): out = 451, in = 340 443 
451 -340 0
451 -443 0
-451 340 443 0
c Gate #453: nand (NAND2_33): out = 452, in = 448 427 
452 448 0
452 427 0
-452 -448 -427 0
c Gate #454: nand (NAND3_24): out = 453, in = 444 3 2 
-641 444 0
-641 3 0
641 -444 -3 0
-640 641 0
-640 2 0
640 -641 -2 0
453 640 0
-453 -640 0
c Gate #455: and (AND2_90): out = 454, in = 84 447 
-454 84 0
-454 447 0
454 -84 -447 0
c Gate #456: not (NOT_79): out = 455, in = 449 
455 449 0
-455 -449 0
c Gate #457: and (AND3_0): out = 456, in = 113 452 3 
-642 113 0
-642 452 0
642 -113 -452 0
-456 642 0
-456 3 0
456 -642 -3 0
c Gate #458: not (NOT_66): out = 457, in = 453 
457 453 0
-457 -453 0
c Gate #459: nand (NAND2_48): out = 458, in = 370 449 
458 370 0
458 449 0
-458 -370 -449 0
c Gate #460: or (OR2_93): out = 459, in = 362 450 
459 -362 0
459 -450 0
-459 362 450 0
c Gate #461: nor (NOR4_0): out = 460, in = 454 364 230 229 
644 -454 0
644 -364 0
-644 454 364 0
645 -644 0
645 -230 0
-645 644 230 0
643 -645 0
643 -229 0
-643 645 229 0
460 643 0
-460 -643 0
c Gate #462: and (AND3_11): out = 461, in = 113 442 425 
-646 113 0
-646 442 0
646 -113 -442 0
-461 646 0
-461 425 0
461 -646 -425 0
c Gate #463: not (NOT_20): out = 462, in = 458 
462 458 0
-462 -458 0
c Gate #464: nand (NAND2_90): out = 463, in = 460 32 
463 460 0
463 32 0
-463 -460 -32 0
c Gate #465: not (NOT_77): out = 464, in = 459 
464 459 0
-464 -459 0
c Gate #466: and (AND2_79): out = 465, in = 439 464 
-465 439 0
-465 464 0
465 -439 -464 0
c Gate #467: not (NOT_59): out = 466, in = 463 
466 463 0
-466 -463 0
c Gate #468: or (OR2_83): out = 467, in = 458 13 
467 -458 0
467 -13 0
-467 458 13 0
c Gate #469: not (NOT_53): out = 468, in = 459 
468 459 0
-468 -459 0
c Gate #470: nor (NOR2_10): out = 469, in = 458 3 
-469 -458 0
-469 -3 0
469 458 3 0
c Gate #471: and (AND2_52): out = 470, in = 469 286 
-470 469 0
-470 286 0
470 -469 -286 0
c Gate #472: nor (NOR2_17): out = 471, in = 463 53 
-471 -463 0
-471 -53 0
471 463 53 0
c Gate #473: nor (NOR3_1): out = 472, in = 466 14 53 
648 -466 0
648 -14 0
-648 466 14 0
647 -648 0
647 -53 0
-647 648 53 0
472 647 0
-472 -647 0
c Gate #474: nor (NOR3_2): out = 473, in = 425 468 54 
650 -425 0
650 -468 0
-650 425 468 0
649 -650 0
649 -54 0
-649 650 54 0
473 649 0
-473 -649 0
c Gate #475: and (AND2_17): out = 474, in = 473 2 
-474 473 0
-474 2 0
474 -473 -2 0
c Gate #476: not (NOT_48): out = 475, in = 469 
475 469 0
-475 -469 0
c Gate #477: and (AND3_2): out = 476, in = 471 118 1 
-651 471 0
-651 118 0
651 -471 -118 0
-476 651 0
-476 1 0
476 -651 -1 0
c Gate #478: nand (NAND2_70): out = 477, in = 439 459 
477 439 0
477 459 0
-477 -439 -459 0
c Gate #479: nand (NAND2_50): out = 478, in = 472 457 
478 472 0
478 457 0
-478 -472 -457 0
c Gate #480: and (AND3_34): out = 479, in = 370 455 53 
-652 370 0
-652 455 0
652 -370 -455 0
-479 652 0
-479 53 0
479 -652 -53 0
c Gate #481: nor (NOR2_42): out = 480, in = 376 476 
-480 -376 0
-480 -476 0
480 376 476 0
c Gate #482: nor (NOR2_1): out = 481, in = 475 13 
-481 -475 0
-481 -13 0
481 475 13 0
c Gate #483: nor (NOR3_0): out = 482, in = 189 478 49 
654 -189 0
654 -478 0
-654 189 478 0
653 -654 0
653 -49 0
-653 654 49 0
482 653 0
-482 -653 0
c Gate #484: not (NOT_56): out = 483, in = 473 
483 473 0
-483 -473 0
c Gate #485: and (AND2_77): out = 484, in = 481 436 
-484 481 0
-484 436 0
484 -481 -436 0
c Gate #486: nor (NOR2_12): out = 485, in = 483 2 
-485 -483 0
-485 -2 0
485 483 2 0
c Gate #487: and (AND2_68): out = 486, in = 406 485 
-486 406 0
-486 485 0
486 -406 -485 0
c Gate #488: and (AND2_49): out = 487, in = 438 481 
-487 438 0
-487 481 0
487 -438 -481 0
c Gate #489: or (OR2_24): out = 488, in = 462 474 
488 -462 0
488 -474 0
-488 462 474 0
c Gate #490: and (AND3_28): out = 489, in = 307 485 195 
-655 307 0
-655 485 0
655 -307 -485 0
-489 655 0
-489 195 0
489 -655 -195 0
c Gate #491: and (AND3_22): out = 490, in = 119 485 4 
-656 119 0
-656 485 0
656 -119 -485 0
-490 656 0
-490 4 0
490 -656 -4 0
c Gate #492: and (AND2_58): out = 491, in = 407 488 
-491 407 0
-491 488 0
491 -407 -488 0
c Gate #493: and (AND3_29): out = 492, in = 24 482 23 
-657 24 0
-657 482 0
657 -24 -482 0
-492 657 0
-492 23 0
492 -657 -23 0
c Gate #494: and (AND2_72): out = 493, in = 482 373 
-493 482 0
-493 373 0
493 -482 -373 0
c Gate #495: and (AND2_78): out = 494, in = 472 453 
-494 472 0
-494 453 0
494 -472 -453 0
c Gate #496: and (AND3_26): out = 495, in = 469 374 44 
-658 469 0
-658 374 0
658 -469 -374 0
-495 658 0
-495 44 0
495 -658 -44 0
c Gate #497: or (OR3_9): out = 496, in = 465 494 479 
659 -465 0
659 -494 0
-659 465 494 0
496 -659 0
496 -479 0
-496 659 479 0
c Gate #498: and (AND3_32): out = 497, in = 333 488 9 
-660 333 0
-660 488 0
660 -333 -488 0
-497 660 0
-497 9 0
497 -660 -9 0
c Gate #499: or (OR2_2): out = 498, in = 470 490 
498 -470 0
498 -490 0
-498 470 490 0
c Gate #500: not (NOT_40): out = 499, in = 471 
499 471 0
-499 -471 0
c Gate #501: nand (NAND3_22): out = 500, in = 477 478 467 
-662 477 0
-662 478 0
662 -477 -478 0
-661 662 0
-661 467 0
661 -662 -467 0
500 661 0
-500 -661 0
c Gate #502: and (AND4_2): out = 501, in = 116 451 488 3 
-663 116 0
-663 451 0
663 -116 -451 0
-664 663 0
-664 488 0
664 -663 -488 0
-501 664 0
-501 3 0
501 -664 -3 0
c Gate #503: or (OR2_8): out = 502, in = 491 489 
502 -491 0
502 -489 0
-502 491 489 0
c Gate #504: and (AND3_24): out = 503, in = 117 216 498 
-665 117 0
-665 216 0
665 -117 -216 0
-503 665 0
-503 498 0
503 -665 -498 0
c Gate #505: or (OR2_15): out = 504, in = 486 497 
504 -486 0
504 -497 0
-504 486 497 0
c Gate #506: and (AND2_71): out = 505, in = 504 53 
-505 504 0
-505 53 0
505 -504 -53 0
c Gate #507: or (OR2_20): out = 506, in = 493 505 
506 -493 0
506 -505 0
-506 493 505 0
c Gate #508: and (AND3_30): out = 507, in = 116 502 53 
-666 116 0
-666 502 0
666 -116 -502 0
-507 666 0
-507 53 0
507 -666 -53 0
c Gate #509: and (AND2_64): out = 508, in = 481 413 
-508 481 0
-508 413 0
508 -481 -413 0
c Gate #510: nor (NOR2_2): out = 509, in = 499 14 
-509 -499 0
-509 -14 0
509 499 14 0
c Gate #511: and (AND2_76): out = 510, in = 112 506 
-510 112 0
-510 506 0
510 -112 -506 0
c Gate #512: and (AND3_27): out = 511, in = 509 422 1 
-667 509 0
-667 422 0
667 -509 -422 0
-511 667 0
-511 1 0
511 -667 -1 0
c Gate #513: and (AND3_5): out = 512, in = 509 336 6 
-668 509 0
-668 336 0
668 -509 -336 0
-512 668 0
-512 6 0
512 -668 -6 0
c Gate #514: or (OR2_23): out = 513, in = 507 492 
513 -507 0
513 -492 0
-513 507 492 0
c Gate #515: or (OR4_0): out = 514, in = 495 428 503 501 
669 -495 0
669 -428 0
-669 495 428 0
670 -669 0
670 -503 0
-670 669 503 0
514 -670 0
514 -501 0
-514 670 501 0
c Gate #516: and (AND2_57): out = 515, in = 514 53 
-515 514 0
-515 53 0
515 -514 -53 0
c Gate #517: or (OR2_90): out = 516, in = 515 511 
516 -515 0
516 -511 0
-516 515 511 0
c Gate #518: and (AND2_46): out = 517, in = 509 37 
-517 509 0
-517 37 0
517 -509 -37 0
c Gate #519: nand (NAND2_44): out = 518, in = 509 7 
518 509 0
518 7 0
-518 -509 -7 0
c Gate #520: and (AND3_17): out = 519, in = 509 152 83 
-671 509 0
-671 152 0
671 -509 -152 0
-519 671 0
-519 83 0
519 -671 -83 0
c Gate #521: and (AND2_10): out = 520, in = 103 518 
-520 103 0
-520 518 0
520 -103 -518 0
c Gate #522: or (OR3_10): out = 521, in = 446 512 420 
672 -446 0
672 -512 0
-672 446 512 0
521 -672 0
521 -420 0
-521 672 420 0
c Gate #523: or (OR2_92): out = 522, in = 484 510 
522 -484 0
522 -510 0
-522 484 510 0
c Gate #524: or (OR4_1): out = 523, in = 160 415 412 519 
673 -160 0
673 -415 0
-673 160 415 0
674 -673 0
674 -412 0
-674 673 412 0
523 -674 0
523 -519 0
-523 674 519 0
c Gate #525: and (AND2_63): out = 524, in = 112 513 
-524 112 0
-524 513 0
524 -112 -513 0
c Gate #526: and (AND2_35): out = 525, in = 509 36 
-525 509 0
-525 36 0
525 -509 -36 0
c Gate #527: and (AND3_21): out = 526, in = 509 386 3 
-675 509 0
-675 386 0
675 -509 -386 0
-526 675 0
-526 3 0
526 -675 -3 0
c Gate #528: and (AND2_43): out = 527, in = 509 332 
-527 509 0
-527 332 0
527 -509 -332 0
c Gate #529: and (AND2_2): out = 528, in = 509 274 
-528 509 0
-528 274 0
528 -509 -274 0
c Gate #530: or (OR2_95): out = 529, in = 409 517 
529 -409 0
529 -517 0
-529 409 517 0
c Gate #531: or (OR2_89): out = 530, in = 487 526 
530 -487 0
530 -526 0
-530 487 526 0
c Gate #532: or (OR2_31): out = 531, in = 518 252 
531 -518 0
531 -252 0
-531 518 252 0
c Gate #533: and (AND3_13): out = 532, in = 509 156 90 
-676 509 0
-676 156 0
676 -509 -156 0
-532 676 0
-532 90 0
532 -676 -90 0
c Gate #534: or (OR2_91): out = 533, in = 508 524 
533 -508 0
533 -524 0
-533 508 524 0
c Gate #535: or (OR3_11): out = 534, in = 434 525 461 
677 -434 0
677 -525 0
-677 434 525 0
534 -677 0
534 -461 0
-534 677 461 0
c Gate #536: or (OR4_2): out = 535, in = 177 528 405 456 
678 -177 0
678 -528 0
-678 177 528 0
679 -678 0
679 -405 0
-679 678 405 0
535 -679 0
535 -456 0
-535 679 456 0
c Gate #537: or (OR2_94): out = 536, in = 527 260 
536 -527 0
536 -260 0
-536 527 260 0
c Gate #538: or (OR2_34): out = 537, in = 278 520 
537 -278 0
537 -520 0
-537 278 520 0
c Gate #539: not (NOT_38): out = 538, in = 537 
538 537 0
-538 -537 0
c Gate #540: nand (NAND3_26): out = 539, in = 537 531 205 
-681 537 0
-681 531 0
681 -537 -531 0
-680 681 0
-680 205 0
680 -681 -205 0
539 680 0
-539 -680 0
c Gate #541: nor (NOR3_6): out = 540, in = 538 254 532 
683 -538 0
683 -254 0
-683 538 254 0
682 -683 0
682 -532 0
-682 683 532 0
540 682 0
-540 -682 0
c
c Random XOR constraints start here
c
-684 426 381 0
-684 -426 -381 0
684 -426 381 0
684 426 -381 0
-685 684 423 0
-685 -684 -423 0
685 -684 423 0
685 684 -423 0
-686 685 539 0
-686 -685 -539 0
686 -685 539 0
686 685 -539 0
-687 686 401 0
-687 -686 -401 0
687 -686 401 0
687 686 -401 0
-688 687 534 0
-688 -687 -534 0
688 -687 534 0
688 687 -534 0
-689 688 536 0
-689 -688 -536 0
689 -688 536 0
689 688 -536 0
689 0
c Rand xor clause 1 with 7 lits
-690 426 381 0
-690 -426 -381 0
690 -426 381 0
690 426 -381 0
-691 690 423 0
-691 -690 -423 0
691 -690 423 0
691 690 -423 0
-692 691 539 0
-692 -691 -539 0
692 -691 539 0
692 691 -539 0
-693 692 401 0
-693 -692 -401 0
693 -692 401 0
693 692 -401 0
-694 693 534 0
-694 -693 -534 0
694 -693 534 0
694 693 -534 0
-695 694 536 0
-695 -694 -536 0
695 -694 536 0
695 694 -536 0
695 0
c Rand xor clause 2 with 7 lits
-696 426 381 0
-696 -426 -381 0
696 -426 381 0
696 426 -381 0
-697 696 423 0
-697 -696 -423 0
697 -696 423 0
697 696 -423 0
-698 697 539 0
-698 -697 -539 0
698 -697 539 0
698 697 -539 0
-699 698 401 0
-699 -698 -401 0
699 -698 401 0
699 698 -401 0
-700 699 534 0
-700 -699 -534 0
700 -699 534 0
700 699 -534 0
-701 700 536 0
-701 -700 -536 0
701 -700 536 0
701 700 -536 0
701 0
c Rand xor clause 3 with 7 lits
-702 426 381 0
-702 -426 -381 0
702 -426 381 0
702 426 -381 0
-703 702 423 0
-703 -702 -423 0
703 -702 423 0
703 702 -423 0
-704 703 539 0
-704 -703 -539 0
704 -703 539 0
704 703 -539 0
-705 704 401 0
-705 -704 -401 0
705 -704 401 0
705 704 -401 0
-706 705 534 0
-706 -705 -534 0
706 -705 534 0
706 705 -534 0
-707 706 536 0
-707 -706 -536 0
707 -706 536 0
707 706 -536 0
707 0
c Rand xor clause 4 with 7 lits
-708 426 381 0
-708 -426 -381 0
708 -426 381 0
708 426 -381 0
-709 708 423 0
-709 -708 -423 0
709 -708 423 0
709 708 -423 0
-710 709 539 0
-710 -709 -539 0
710 -709 539 0
710 709 -539 0
-711 710 401 0
-711 -710 -401 0
711 -710 401 0
711 710 -401 0
-712 711 534 0
-712 -711 -534 0
712 -711 534 0
712 711 -534 0
-713 712 536 0
-713 -712 -536 0
713 -712 536 0
713 712 -536 0
713 0
c Rand xor clause 5 with 7 lits
-714 426 381 0
-714 -426 -381 0
714 -426 381 0
714 426 -381 0
-715 714 423 0
-715 -714 -423 0
715 -714 423 0
715 714 -423 0
-716 715 539 0
-716 -715 -539 0
716 -715 539 0
716 715 -539 0
-717 716 401 0
-717 -716 -401 0
717 -716 401 0
717 716 -401 0
-718 717 534 0
-718 -717 -534 0
718 -717 534 0
718 717 -534 0
-719 718 536 0
-719 -718 -536 0
719 -718 536 0
719 718 -536 0
719 0
c Rand xor clause 6 with 7 lits
-720 426 381 0
-720 -426 -381 0
720 -426 381 0
720 426 -381 0
-721 720 423 0
-721 -720 -423 0
721 -720 423 0
721 720 -423 0
-722 721 539 0
-722 -721 -539 0
722 -721 539 0
722 721 -539 0
-723 722 401 0
-723 -722 -401 0
723 -722 401 0
723 722 -401 0
-724 723 534 0
-724 -723 -534 0
724 -723 534 0
724 723 -534 0
-725 724 536 0
-725 -724 -536 0
725 -724 536 0
725 724 -536 0
725 0
c Rand xor clause 7 with 7 lits
-726 426 381 0
-726 -426 -381 0
726 -426 381 0
726 426 -381 0
-727 726 423 0
-727 -726 -423 0
727 -726 423 0
727 726 -423 0
-728 727 539 0
-728 -727 -539 0
728 -727 539 0
728 727 -539 0
-729 728 401 0
-729 -728 -401 0
729 -728 401 0
729 728 -401 0
-730 729 534 0
-730 -729 -534 0
730 -729 534 0
730 729 -534 0
-731 730 536 0
-731 -730 -536 0
731 -730 536 0
731 730 -536 0
731 0
c Rand xor clause 8 with 7 lits
-732 426 381 0
-732 -426 -381 0
732 -426 381 0
732 426 -381 0
-733 732 423 0
-733 -732 -423 0
733 -732 423 0
733 732 -423 0
-734 733 539 0
-734 -733 -539 0
734 -733 539 0
734 733 -539 0
-735 734 401 0
-735 -734 -401 0
735 -734 401 0
735 734 -401 0
-736 735 534 0
-736 -735 -534 0
736 -735 534 0
736 735 -534 0
-737 736 536 0
-737 -736 -536 0
737 -736 536 0
737 736 -536 0
737 0
c Rand xor clause 9 with 7 lits
-738 426 381 0
-738 -426 -381 0
738 -426 381 0
738 426 -381 0
-739 738 423 0
-739 -738 -423 0
739 -738 423 0
739 738 -423 0
-740 739 539 0
-740 -739 -539 0
740 -739 539 0
740 739 -539 0
-741 740 401 0
-741 -740 -401 0
741 -740 401 0
741 740 -401 0
-742 741 534 0
-742 -741 -534 0
742 -741 534 0
742 741 -534 0
-743 742 536 0
-743 -742 -536 0
743 -742 536 0
743 742 -536 0
743 0
c Rand xor clause 10 with 7 lits
-744 426 381 0
-744 -426 -381 0
744 -426 381 0
744 426 -381 0
-745 744 423 0
-745 -744 -423 0
745 -744 423 0
745 744 -423 0
-746 745 539 0
-746 -745 -539 0
746 -745 539 0
746 745 -539 0
-747 746 401 0
-747 -746 -401 0
747 -746 401 0
747 746 -401 0
-748 747 534 0
-748 -747 -534 0
748 -747 534 0
748 747 -534 0
-749 748 536 0
-749 -748 -536 0
749 -748 536 0
749 748 -536 0
749 0
c Rand xor clause 11 with 7 lits
-750 426 381 0
-750 -426 -381 0
750 -426 381 0
750 426 -381 0
-751 750 423 0
-751 -750 -423 0
751 -750 423 0
751 750 -423 0
-752 751 539 0
-752 -751 -539 0
752 -751 539 0
752 751 -539 0
-753 752 401 0
-753 -752 -401 0
753 -752 401 0
753 752 -401 0
-754 753 534 0
-754 -753 -534 0
754 -753 534 0
754 753 -534 0
-755 754 536 0
-755 -754 -536 0
755 -754 536 0
755 754 -536 0
755 0
c Rand xor clause 12 with 7 lits
-756 426 381 0
-756 -426 -381 0
756 -426 381 0
756 426 -381 0
-757 756 423 0
-757 -756 -423 0
757 -756 423 0
757 756 -423 0
-758 757 539 0
-758 -757 -539 0
758 -757 539 0
758 757 -539 0
-759 758 401 0
-759 -758 -401 0
759 -758 401 0
759 758 -401 0
-760 759 534 0
-760 -759 -534 0
760 -759 534 0
760 759 -534 0
-761 760 536 0
-761 -760 -536 0
761 -760 536 0
761 760 -536 0
761 0
c Rand xor clause 13 with 7 lits
-762 426 381 0
-762 -426 -381 0
762 -426 381 0
762 426 -381 0
-763 762 423 0
-763 -762 -423 0
763 -762 423 0
763 762 -423 0
-764 763 539 0
-764 -763 -539 0
764 -763 539 0
764 763 -539 0
-765 764 401 0
-765 -764 -401 0
765 -764 401 0
765 764 -401 0
-766 765 534 0
-766 -765 -534 0
766 -765 534 0
766 765 -534 0
-767 766 536 0
-767 -766 -536 0
767 -766 536 0
767 766 -536 0
767 0
c Rand xor clause 14 with 7 lits
-768 426 381 0
-768 -426 -381 0
768 -426 381 0
768 426 -381 0
-769 768 423 0
-769 -768 -423 0
769 -768 423 0
769 768 -423 0
-770 769 539 0
-770 -769 -539 0
770 -769 539 0
770 769 -539 0
-771 770 401 0
-771 -770 -401 0
771 -770 401 0
771 770 -401 0
-772 771 534 0
-772 -771 -534 0
772 -771 534 0
772 771 -534 0
-773 772 536 0
-773 -772 -536 0
773 -772 536 0
773 772 -536 0
773 0
c Rand xor clause 15 with 7 lits
