p cnf 606 1657
c
c CNF representation of circuit s832 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 310 Total inputs 23
c
c
p cnf 606 1657
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 0
c
c Gate #25: not (NOT_0): out = 24, in = 18 
24 18 0
-24 -18 0
c Gate #26: not (NOT_1): out = 25, in = 18 
25 18 0
-25 -18 0
c Gate #27: not (NOT_2): out = 26, in = 18 
26 18 0
-26 -18 0
c Gate #28: not (NOT_3): out = 27, in = 18 
27 18 0
-27 -18 0
c Gate #29: not (NOT_4): out = 28, in = 18 
28 18 0
-28 -18 0
c Gate #30: not (NOT_5): out = 29, in = 9 
29 9 0
-29 -9 0
c Gate #31: not (NOT_6): out = 30, in = 6 
30 6 0
-30 -6 0
c Gate #32: not (NOT_7): out = 31, in = 13 
31 13 0
-31 -13 0
c Gate #33: not (NOT_8): out = 32, in = 11 
32 11 0
-32 -11 0
c Gate #34: not (NOT_9): out = 33, in = 12 
33 12 0
-33 -12 0
c Gate #35: not (NOT_10): out = 34, in = 3 
34 3 0
-34 -3 0
c Gate #36: not (NOT_11): out = 35, in = 10 
35 10 0
-35 -10 0
c Gate #37: not (NOT_12): out = 36, in = 14 
36 14 0
-36 -14 0
c Gate #38: not (NOT_13): out = 37, in = 8 
37 8 0
-37 -8 0
c Gate #39: not (NOT_14): out = 38, in = 7 
38 7 0
-38 -7 0
c Gate #40: not (NOT_15): out = 39, in = 1 
39 1 0
-39 -1 0
c Gate #41: not (NOT_16): out = 40, in = 5 
40 5 0
-40 -5 0
c Gate #42: not (NOT_17): out = 41, in = 16 
41 16 0
-41 -16 0
c Gate #43: not (NOT_18): out = 42, in = 19 
42 19 0
-42 -19 0
c Gate #44: not (NOT_19): out = 43, in = 17 
43 17 0
-43 -17 0
c Gate #45: not (NOT_20): out = 44, in = 22 
44 22 0
-44 -22 0
c Gate #46: not (NOT_21): out = 45, in = 21 
45 21 0
-45 -21 0
c Gate #47: not (NOT_22): out = 46, in = 20 
46 20 0
-46 -20 0
c Gate #48: not (NOT_23): out = 47, in = 2 
47 2 0
-47 -2 0
c Gate #49: not (NOT_24): out = 48, in = 23 
48 23 0
-48 -23 0
c Gate #50: and (AND2_5): out = 49, in = 19 44 
-49 19 0
-49 44 0
49 -19 -44 0
c Gate #51: and (AND4_0): out = 50, in = 44 20 42 2 
-311 44 0
-311 20 0
311 -44 -20 0
-312 311 0
-312 42 0
312 -311 -42 0
-50 312 0
-50 2 0
50 -312 -2 0
c Gate #52: and (AND3_0): out = 51, in = 20 19 39 
-313 20 0
-313 19 0
313 -20 -19 0
-51 313 0
-51 39 0
51 -313 -39 0
c Gate #53: and (AND3_1): out = 52, in = 23 21 20 
-314 23 0
-314 21 0
314 -23 -21 0
-52 314 0
-52 20 0
52 -314 -20 0
c Gate #54: and (AND3_2): out = 53, in = 48 45 46 
-315 48 0
-315 45 0
315 -48 -45 0
-53 315 0
-53 46 0
53 -315 -46 0
c Gate #55: and (AND4_1): out = 54, in = 48 44 20 19 
-316 48 0
-316 44 0
316 -48 -44 0
-317 316 0
-317 20 0
317 -316 -20 0
-54 317 0
-54 19 0
54 -317 -19 0
c Gate #56: and (AND3_3): out = 55, in = 21 46 42 
-318 21 0
-318 46 0
318 -21 -46 0
-55 318 0
-55 42 0
55 -318 -42 0
c Gate #57: and (AND2_6): out = 56, in = 45 20 
-56 45 0
-56 20 0
56 -45 -20 0
c Gate #58: and (AND2_7): out = 57, in = 43 21 
-57 43 0
-57 21 0
57 -43 -21 0
c Gate #59: and (AND2_8): out = 58, in = 5 21 
-58 5 0
-58 21 0
58 -5 -21 0
c Gate #60: and (AND3_4): out = 59, in = 48 44 6 
-319 48 0
-319 44 0
319 -48 -44 0
-59 319 0
-59 6 0
59 -319 -6 0
c Gate #61: and (AND2_10): out = 60, in = 23 4 
-60 23 0
-60 4 0
60 -23 -4 0
c Gate #62: and (AND2_11): out = 61, in = 23 2 
-61 23 0
-61 2 0
61 -23 -2 0
c Gate #63: and (AND2_12): out = 62, in = 23 22 
-62 23 0
-62 22 0
62 -23 -22 0
c Gate #64: and (AND2_13): out = 63, in = 44 23 
-63 44 0
-63 23 0
63 -44 -23 0
c Gate #65: and (AND4_6): out = 64, in = 23 22 19 39 
-320 23 0
-320 22 0
320 -23 -22 0
-321 320 0
-321 19 0
321 -320 -19 0
-64 321 0
-64 39 0
64 -321 -39 0
c Gate #66: and (AND3_5): out = 65, in = 44 19 40 
-322 44 0
-322 19 0
322 -44 -19 0
-65 322 0
-65 40 0
65 -322 -40 0
c Gate #67: and (AND2_14): out = 66, in = 31 33 
-66 31 0
-66 33 0
66 -31 -33 0
c Gate #68: and (AND2_15): out = 67, in = 33 32 
-67 33 0
-67 32 0
67 -33 -32 0
c Gate #69: and (AND3_6): out = 68, in = 48 44 6 
-323 48 0
-323 44 0
323 -48 -44 0
-68 323 0
-68 6 0
68 -323 -6 0
c Gate #70: and (AND2_18): out = 69, in = 23 4 
-69 23 0
-69 4 0
69 -23 -4 0
c Gate #71: and (AND2_19): out = 70, in = 23 2 
-70 23 0
-70 2 0
70 -23 -2 0
c Gate #72: and (AND2_20): out = 71, in = 23 22 
-71 23 0
-71 22 0
71 -23 -22 0
c Gate #73: and (AND2_21): out = 72, in = 44 23 
-72 44 0
-72 23 0
72 -44 -23 0
c Gate #74: and (AND2_22): out = 73, in = 48 12 
-73 48 0
-73 12 0
73 -48 -12 0
c Gate #75: and (AND2_23): out = 74, in = 48 11 
-74 48 0
-74 11 0
74 -48 -11 0
c Gate #76: and (AND2_24): out = 75, in = 23 22 
-75 23 0
-75 22 0
75 -23 -22 0
c Gate #77: and (AND4_9): out = 76, in = 23 22 19 39 
-324 23 0
-324 22 0
324 -23 -22 0
-325 324 0
-325 19 0
325 -324 -19 0
-76 325 0
-76 39 0
76 -325 -39 0
c Gate #78: and (AND3_7): out = 77, in = 44 19 40 
-326 44 0
-326 19 0
326 -44 -19 0
-77 326 0
-77 40 0
77 -326 -40 0
c Gate #79: and (AND3_8): out = 78, in = 48 44 17 
-327 48 0
-327 44 0
327 -48 -44 0
-78 327 0
-78 17 0
78 -327 -17 0
c Gate #80: and (AND3_9): out = 79, in = 44 17 41 
-328 44 0
-328 17 0
328 -44 -17 0
-79 328 0
-79 41 0
79 -328 -41 0
c Gate #81: and (AND2_25): out = 80, in = 23 22 
-80 23 0
-80 22 0
80 -23 -22 0
c Gate #82: and (AND3_10): out = 81, in = 48 19 16 
-329 48 0
-329 19 0
329 -48 -19 0
-81 329 0
-81 16 0
81 -329 -16 0
c Gate #83: and (AND2_29): out = 82, in = 44 41 
-82 44 0
-82 41 0
82 -44 -41 0
c Gate #84: and (AND2_30): out = 83, in = 46 19 
-83 46 0
-83 19 0
83 -46 -19 0
c Gate #85: and (AND2_31): out = 84, in = 46 16 
-84 46 0
-84 16 0
84 -46 -16 0
c Gate #86: and (AND4_13): out = 85, in = 23 44 21 16 
-330 23 0
-330 44 0
330 -23 -44 0
-331 330 0
-331 21 0
331 -330 -21 0
-85 331 0
-85 16 0
85 -331 -16 0
c Gate #87: and (AND2_32): out = 86, in = 48 45 
-86 48 0
-86 45 0
86 -48 -45 0
c Gate #88: and (AND3_11): out = 87, in = 48 22 21 
-332 48 0
-332 22 0
332 -48 -22 0
-87 332 0
-87 21 0
87 -332 -21 0
c Gate #89: and (AND3_12): out = 88, in = 23 21 20 
-333 23 0
-333 21 0
333 -23 -21 0
-88 333 0
-88 20 0
88 -333 -20 0
c Gate #90: and (AND2_33): out = 89, in = 44 46 
-89 44 0
-89 46 0
89 -44 -46 0
c Gate #91: and (AND2_34): out = 90, in = 45 46 
-90 45 0
-90 46 0
90 -45 -46 0
c Gate #92: and (AND2_37): out = 91, in = 41 45 
-91 41 0
-91 45 0
91 -41 -45 0
c Gate #93: and (AND2_38): out = 92, in = 41 48 
-92 41 0
-92 48 0
92 -41 -48 0
c Gate #94: and (AND3_17): out = 93, in = 48 19 1 
-334 48 0
-334 19 0
334 -48 -19 0
-93 334 0
-93 1 0
93 -334 -1 0
c Gate #95: and (AND3_18): out = 94, in = 42 43 47 
-335 42 0
-335 43 0
335 -42 -43 0
-94 335 0
-94 47 0
94 -335 -47 0
c Gate #96: and (AND2_39): out = 95, in = 23 42 
-95 23 0
-95 42 0
95 -23 -42 0
c Gate #97: and (AND2_40): out = 96, in = 23 43 
-96 23 0
-96 43 0
96 -23 -43 0
c Gate #98: and (AND2_41): out = 97, in = 48 45 
-97 48 0
-97 45 0
97 -48 -45 0
c Gate #99: and (AND2_42): out = 98, in = 44 45 
-98 44 0
-98 45 0
98 -44 -45 0
c Gate #100: or (OR3_3): out = 99, in = 2 21 22 
336 -2 0
336 -21 0
-336 2 21 0
99 -336 0
99 -22 0
-99 336 22 0
c Gate #101: or (OR2_3): out = 100, in = 16 48 
100 -16 0
100 -48 0
-100 16 48 0
c Gate #102: or (OR3_4): out = 101, in = 48 41 36 
337 -48 0
337 -41 0
-337 48 41 0
101 -337 0
101 -36 0
-101 337 36 0
c Gate #103: or (OR2_4): out = 102, in = 23 42 
102 -23 0
102 -42 0
-102 23 42 0
c Gate #104: or (OR2_5): out = 103, in = 23 16 
103 -23 0
103 -16 0
-103 23 16 0
c Gate #105: or (OR4_10): out = 104, in = 35 29 37 38 
338 -35 0
338 -29 0
-338 35 29 0
339 -338 0
339 -37 0
-339 338 37 0
104 -339 0
104 -38 0
-104 339 38 0
c Gate #106: or (OR3_5): out = 105, in = 48 46 41 
340 -48 0
340 -46 0
-340 48 46 0
105 -340 0
105 -41 0
-105 340 41 0
c Gate #107: or (OR2_6): out = 106, in = 23 20 
106 -23 0
106 -20 0
-106 23 20 0
c Gate #108: or (OR2_7): out = 107, in = 44 20 
107 -44 0
107 -20 0
-107 44 20 0
c Gate #109: or (OR2_8): out = 108, in = 13 12 
108 -13 0
108 -12 0
-108 13 12 0
c Gate #110: or (OR2_9): out = 109, in = 13 11 
109 -13 0
109 -11 0
-109 13 11 0
c Gate #111: or (OR2_10): out = 110, in = 12 11 
110 -12 0
110 -11 0
-110 12 11 0
c Gate #112: or (OR4_11): out = 111, in = 23 13 12 32 
341 -23 0
341 -13 0
-341 23 13 0
342 -341 0
342 -12 0
-342 341 12 0
111 -342 0
111 -32 0
-111 342 32 0
c Gate #113: or (OR4_12): out = 112, in = 23 13 33 11 
343 -23 0
343 -13 0
-343 23 13 0
344 -343 0
344 -33 0
-344 343 33 0
112 -344 0
112 -11 0
-112 344 11 0
c Gate #114: or (OR2_11): out = 113, in = 23 42 
113 -23 0
113 -42 0
-113 23 42 0
c Gate #115: or (OR2_12): out = 114, in = 21 42 
114 -21 0
114 -42 0
-114 21 42 0
c Gate #116: or (OR2_13): out = 115, in = 43 5 
115 -43 0
115 -5 0
-115 43 5 0
c Gate #117: or (OR2_15): out = 116, in = 23 17 
116 -23 0
116 -17 0
-116 23 17 0
c Gate #118: or (OR2_16): out = 117, in = 22 17 
117 -22 0
117 -17 0
-117 22 17 0
c Gate #119: or (OR4_13): out = 118, in = 20 19 41 15 
345 -20 0
345 -19 0
-345 20 19 0
346 -345 0
346 -41 0
-346 345 41 0
118 -346 0
118 -15 0
-118 346 15 0
c Gate #120: or (OR3_6): out = 119, in = 22 20 19 
347 -22 0
347 -20 0
-347 22 20 0
119 -347 0
119 -19 0
-119 347 19 0
c Gate #121: or (OR2_18): out = 120, in = 22 23 
120 -22 0
120 -23 0
-120 22 23 0
c Gate #122: or (OR2_19): out = 121, in = 44 19 
121 -44 0
121 -19 0
-121 44 19 0
c Gate #123: or (OR2_20): out = 122, in = 44 16 
122 -44 0
122 -16 0
-122 44 16 0
c Gate #124: or (OR3_7): out = 123, in = 48 45 46 
348 -48 0
348 -45 0
-348 48 45 0
123 -348 0
123 -46 0
-123 348 46 0
c Gate #125: or (OR3_8): out = 124, in = 21 20 17 
349 -21 0
349 -20 0
-349 21 20 0
124 -349 0
124 -17 0
-124 349 17 0
c Gate #126: or (OR4_15): out = 125, in = 23 21 41 15 
350 -23 0
350 -21 0
-350 23 21 0
351 -350 0
351 -41 0
-351 350 41 0
125 -351 0
125 -15 0
-125 351 15 0
c Gate #127: or (OR3_9): out = 126, in = 23 22 21 
352 -23 0
352 -22 0
-352 23 22 0
126 -352 0
126 -21 0
-126 352 21 0
c Gate #128: or (OR3_10): out = 127, in = 48 44 40 
353 -48 0
353 -44 0
-353 48 44 0
127 -353 0
127 -40 0
-127 353 40 0
c Gate #129: or (OR2_21): out = 128, in = 45 40 
128 -45 0
128 -40 0
-128 45 40 0
c Gate #130: or (OR2_22): out = 129, in = 48 22 
129 -48 0
129 -22 0
-129 48 22 0
c Gate #131: or (OR2_23): out = 130, in = 22 6 
130 -22 0
130 -6 0
-130 22 6 0
c Gate #132: or (OR2_24): out = 131, in = 48 43 
131 -48 0
131 -43 0
-131 48 43 0
c Gate #133: or (OR2_25): out = 132, in = 20 5 
132 -20 0
132 -5 0
-132 20 5 0
c Gate #134: or (OR2_26): out = 133, in = 46 19 
133 -46 0
133 -19 0
-133 46 19 0
c Gate #135: or (OR2_27): out = 134, in = 46 39 
134 -46 0
134 -39 0
-134 46 39 0
c Gate #136: or (OR2_29): out = 135, in = 44 23 
135 -44 0
135 -23 0
-135 44 23 0
c Gate #137: or (OR2_30): out = 136, in = 6 23 
136 -6 0
136 -23 0
-136 6 23 0
c Gate #138: nand (NAND4_0): out = 137, in = 16 42 46 45 
-355 16 0
-355 42 0
355 -16 -42 0
-356 355 0
-356 46 0
356 -355 -46 0
-354 356 0
-354 45 0
354 -356 -45 0
137 354 0
-137 -354 0
c Gate #139: nand (NAND4_2): out = 138, in = 30 42 20 21 
-358 30 0
-358 42 0
358 -30 -42 0
-359 358 0
-359 20 0
359 -358 -20 0
-357 359 0
-357 21 0
357 -359 -21 0
138 357 0
-138 -357 0
c Gate #140: nand (NAND4_3): out = 139, in = 42 46 45 22 
-361 42 0
-361 46 0
361 -42 -46 0
-362 361 0
-362 45 0
362 -361 -45 0
-360 362 0
-360 22 0
360 -362 -22 0
139 360 0
-139 -360 0
c Gate #141: nand (NAND4_4): out = 140, in = 6 42 20 21 
-364 6 0
-364 42 0
364 -6 -42 0
-365 364 0
-365 20 0
365 -364 -20 0
-363 365 0
-363 21 0
363 -365 -21 0
140 363 0
-140 -363 0
c Gate #142: nand (NAND4_5): out = 141, in = 17 46 21 22 
-367 17 0
-367 46 0
367 -17 -46 0
-368 367 0
-368 21 0
368 -367 -21 0
-366 368 0
-366 22 0
366 -368 -22 0
141 366 0
-141 -366 0
c Gate #143: nand (NAND3_0): out = 142, in = 113 112 111 
-370 113 0
-370 112 0
370 -113 -112 0
-369 370 0
-369 111 0
369 -370 -111 0
142 369 0
-142 -369 0
c Gate #144: nand (NAND2_1): out = 143, in = 117 116 
143 117 0
143 116 0
-143 -117 -116 0
c Gate #145: nand (NAND3_1): out = 144, in = 45 22 23 
-372 45 0
-372 22 0
372 -45 -22 0
-371 372 0
-371 23 0
371 -372 -23 0
144 371 0
-144 -371 0
c Gate #146: nand (NAND3_2): out = 145, in = 21 22 23 
-374 21 0
-374 22 0
374 -21 -22 0
-373 374 0
-373 23 0
373 -374 -23 0
145 373 0
-145 -373 0
c Gate #147: nand (NAND3_4): out = 146, in = 134 133 132 
-376 134 0
-376 133 0
376 -134 -133 0
-375 376 0
-375 132 0
375 -376 -132 0
146 375 0
-146 -375 0
c Gate #148: nand (NAND4_12): out = 147, in = 10 16 21 48 
-378 10 0
-378 16 0
378 -10 -16 0
-379 378 0
-379 21 0
379 -378 -21 0
-377 379 0
-377 48 0
377 -379 -48 0
147 377 0
-147 -377 0
c Gate #149: nand (NAND4_13): out = 148, in = 40 110 109 108 
-381 40 0
-381 110 0
381 -40 -110 0
-382 381 0
-382 109 0
382 -381 -109 0
-380 382 0
-380 108 0
380 -382 -108 0
148 380 0
-148 -380 0
c Gate #150: nand (NAND3_5): out = 149, in = 43 42 46 
-384 43 0
-384 42 0
384 -43 -42 0
-383 384 0
-383 46 0
383 -384 -46 0
149 383 0
-149 -383 0
c Gate #151: nand (NAND4_14): out = 150, in = 16 42 22 23 
-386 16 0
-386 42 0
386 -16 -42 0
-387 386 0
-387 22 0
387 -386 -22 0
-385 387 0
-385 23 0
385 -387 -23 0
150 385 0
-150 -385 0
c Gate #152: nand (NAND2_3): out = 151, in = 119 118 
151 119 0
151 118 0
-151 -119 -118 0
c Gate #153: nand (NAND2_4): out = 152, in = 9 10 
152 9 0
152 10 0
-152 -9 -10 0
c Gate #154: nand (NAND2_5): out = 153, in = 122 121 
153 122 0
153 121 0
-153 -122 -121 0
c Gate #155: nand (NAND2_6): out = 154, in = 124 123 
154 124 0
154 123 0
-154 -124 -123 0
c Gate #156: nand (NAND4_15): out = 155, in = 128 127 126 125 
-389 128 0
-389 127 0
389 -128 -127 0
-390 389 0
-390 126 0
390 -389 -126 0
-388 390 0
-388 125 0
388 -390 -125 0
155 388 0
-155 -388 0
c Gate #157: nand (NAND3_6): out = 156, in = 40 22 48 
-392 40 0
-392 22 0
392 -40 -22 0
-391 392 0
-391 48 0
391 -392 -48 0
156 391 0
-156 -391 0
c Gate #158: nand (NAND4_16): out = 157, in = 21 131 130 129 
-394 21 0
-394 131 0
394 -21 -131 0
-395 394 0
-395 130 0
395 -394 -130 0
-393 395 0
-393 129 0
393 -395 -129 0
157 393 0
-157 -393 0
c Gate #159: nand (NAND2_7): out = 158, in = 45 104 
158 45 0
158 104 0
-158 -45 -104 0
c Gate #160: nand (NAND4_17): out = 159, in = 21 103 102 101 
-397 21 0
-397 103 0
397 -21 -103 0
-398 397 0
-398 102 0
398 -397 -102 0
-396 398 0
-396 101 0
396 -398 -101 0
159 396 0
-159 -396 0
c Gate #161: nand (NAND4_18): out = 160, in = 45 107 106 105 
-400 45 0
-400 107 0
400 -45 -107 0
-401 400 0
-401 106 0
401 -400 -106 0
-399 401 0
-399 105 0
399 -401 -105 0
160 399 0
-160 -399 0
c Gate #162: nand (NAND2_8): out = 161, in = 44 23 
161 44 0
161 23 0
-161 -44 -23 0
c Gate #163: nand (NAND4_19): out = 162, in = 42 20 21 44 
-403 42 0
-403 20 0
403 -42 -20 0
-404 403 0
-404 21 0
404 -403 -21 0
-402 404 0
-402 44 0
402 -404 -44 0
162 402 0
-162 -402 0
c Gate #164: nand (NAND4_20): out = 163, in = 16 20 45 44 
-406 16 0
-406 20 0
406 -16 -20 0
-407 406 0
-407 45 0
407 -406 -45 0
-405 407 0
-405 44 0
405 -407 -44 0
163 405 0
-163 -405 0
c Gate #165: nand (NAND4_22): out = 164, in = 40 20 45 22 
-409 40 0
-409 20 0
409 -40 -20 0
-410 409 0
-410 45 0
410 -409 -45 0
-408 410 0
-408 22 0
408 -410 -22 0
164 408 0
-164 -408 0
c Gate #166: nand (NAND4_23): out = 165, in = 42 20 21 22 
-412 42 0
-412 20 0
412 -42 -20 0
-413 412 0
-413 21 0
413 -412 -21 0
-411 413 0
-411 22 0
411 -413 -22 0
165 411 0
-165 -411 0
c Gate #167: nand (NAND4_24): out = 166, in = 15 16 42 46 
-415 15 0
-415 16 0
415 -15 -16 0
-416 415 0
-416 42 0
416 -415 -42 0
-414 416 0
-414 46 0
414 -416 -46 0
166 414 0
-166 -414 0
c Gate #168: nand (NAND2_9): out = 167, in = 115 114 
167 115 0
167 114 0
-167 -115 -114 0
c Gate #169: nand (NAND4_27): out = 168, in = 42 20 21 44 
-418 42 0
-418 20 0
418 -42 -20 0
-419 418 0
-419 21 0
419 -418 -21 0
-417 419 0
-417 44 0
417 -419 -44 0
168 417 0
-168 -417 0
c Gate #170: nand (NAND4_28): out = 169, in = 17 42 20 21 
-421 17 0
-421 42 0
421 -17 -42 0
-422 421 0
-422 20 0
422 -421 -20 0
-420 422 0
-420 21 0
420 -422 -21 0
169 420 0
-169 -420 0
c Gate #171: nand (NAND2_12): out = 170, in = 44 48 
170 44 0
170 48 0
-170 -44 -48 0
c Gate #172: nand (NAND2_13): out = 171, in = 22 23 
171 22 0
171 23 0
-171 -22 -23 0
c Gate #173: nand (NAND4_29): out = 172, in = 42 20 21 44 
-424 42 0
-424 20 0
424 -42 -20 0
-425 424 0
-425 21 0
425 -424 -21 0
-423 425 0
-423 44 0
423 -425 -44 0
172 423 0
-172 -423 0
c Gate #174: nand (NAND4_30): out = 173, in = 16 20 45 44 
-427 16 0
-427 20 0
427 -16 -20 0
-428 427 0
-428 45 0
428 -427 -45 0
-426 428 0
-426 44 0
426 -428 -44 0
173 426 0
-173 -426 0
c Gate #175: nor (NOR3_0): out = 174, in = 137 44 23 
430 -137 0
430 -44 0
-430 137 44 0
429 -430 0
429 -23 0
-429 430 23 0
174 429 0
-174 -429 0
c Gate #176: nor (NOR3_1): out = 175, in = 138 22 23 
432 -138 0
432 -22 0
-432 138 22 0
431 -432 0
431 -23 0
-431 432 23 0
175 431 0
-175 -431 0
c Gate #177: nor (NOR2_0): out = 176, in = 42 21 
-176 -42 0
-176 -21 0
176 42 21 0
c Gate #178: nor (NOR3_2): out = 177, in = 56 55 54 
434 -56 0
434 -55 0
-434 56 55 0
433 -434 0
433 -54 0
-433 434 54 0
177 433 0
-177 -433 0
c Gate #179: nor (NOR2_1): out = 178, in = 139 23 
-178 -139 0
-178 -23 0
178 139 23 0
c Gate #180: nor (NOR3_3): out = 179, in = 140 22 23 
436 -140 0
436 -22 0
-436 140 22 0
435 -436 0
435 -23 0
-435 436 23 0
179 435 0
-179 -435 0
c Gate #181: nor (NOR3_4): out = 180, in = 36 41 43 
438 -36 0
438 -41 0
-438 36 41 0
437 -438 0
437 -43 0
-437 438 43 0
180 437 0
-180 -437 0
c Gate #182: nor (NOR2_6): out = 181, in = 51 50 
-181 -51 0
-181 -50 0
181 51 50 0
c Gate #183: nor (NOR2_7): out = 182, in = 19 20 
-182 -19 0
-182 -20 0
182 19 20 0
c Gate #184: nor (NOR2_8): out = 183, in = 148 41 
-183 -148 0
-183 -41 0
183 148 41 0
c Gate #185: nor (NOR3_8): out = 184, in = 35 41 42 
440 -35 0
440 -41 0
-440 35 41 0
439 -440 0
439 -42 0
-439 440 42 0
184 439 0
-184 -439 0
c Gate #186: nor (NOR3_9): out = 185, in = 42 22 23 
442 -42 0
442 -22 0
-442 42 22 0
441 -442 0
441 -23 0
-441 442 23 0
185 441 0
-185 -441 0
c Gate #187: nor (NOR2_9): out = 186, in = 40 46 
-186 -40 0
-186 -46 0
186 40 46 0
c Gate #188: nor (NOR2_10): out = 187, in = 22 23 
-187 -22 0
-187 -23 0
187 22 23 0
c Gate #189: nor (NOR4_1): out = 188, in = 149 2 34 4 
444 -149 0
444 -2 0
-444 149 2 0
445 -444 0
445 -34 0
-445 444 34 0
443 -445 0
443 -4 0
-443 445 4 0
188 443 0
-188 -443 0
c Gate #190: nor (NOR3_10): out = 189, in = 41 43 19 
447 -41 0
447 -43 0
-447 41 43 0
446 -447 0
446 -19 0
-446 447 19 0
189 446 0
-189 -446 0
c Gate #191: nor (NOR4_2): out = 190, in = 20 45 44 23 
449 -20 0
449 -45 0
-449 20 45 0
450 -449 0
450 -44 0
-450 449 44 0
448 -450 0
448 -23 0
-448 450 23 0
190 448 0
-190 -448 0
c Gate #192: nor (NOR2_11): out = 191, in = 67 66 
-191 -67 0
-191 -66 0
191 67 66 0
c Gate #193: nor (NOR4_3): out = 192, in = 90 89 88 87 
452 -90 0
452 -89 0
-452 90 89 0
453 -452 0
453 -88 0
-453 452 88 0
451 -453 0
451 -87 0
-451 453 87 0
192 451 0
-192 -451 0
c Gate #194: nor (NOR4_4): out = 193, in = 96 95 94 93 
455 -96 0
455 -95 0
-455 96 95 0
456 -455 0
456 -94 0
-456 455 94 0
454 -456 0
454 -93 0
-454 456 93 0
193 454 0
-193 -454 0
c Gate #195: nor (NOR4_5): out = 194, in = 181 45 48 49 
458 -181 0
458 -45 0
-458 181 45 0
459 -458 0
459 -48 0
-459 458 48 0
457 -459 0
457 -49 0
-457 459 49 0
194 457 0
-194 -457 0
c Gate #196: nor (NOR4_6): out = 195, in = 62 61 60 59 
461 -62 0
461 -61 0
-461 62 61 0
462 -461 0
462 -60 0
-462 461 60 0
460 -462 0
460 -59 0
-460 462 59 0
195 460 0
-195 -460 0
c Gate #197: nor (NOR2_13): out = 196, in = 65 64 
-196 -65 0
-196 -64 0
196 65 64 0
c Gate #198: nor (NOR2_14): out = 197, in = 74 73 
-197 -74 0
-197 -73 0
197 74 73 0
c Gate #199: nor (NOR2_15): out = 198, in = 42 75 
-198 -42 0
-198 -75 0
198 42 75 0
c Gate #200: nor (NOR4_7): out = 199, in = 2 34 4 17 
464 -2 0
464 -34 0
-464 2 34 0
465 -464 0
465 -4 0
-465 464 4 0
463 -465 0
463 -17 0
-463 465 17 0
199 463 0
-199 -463 0
c Gate #201: nor (NOR4_8): out = 200, in = 71 70 69 68 
467 -71 0
467 -70 0
-467 71 70 0
468 -467 0
468 -69 0
-468 467 69 0
466 -468 0
466 -68 0
-466 468 68 0
200 466 0
-200 -466 0
c Gate #202: nor (NOR2_17): out = 201, in = 77 76 
-201 -77 0
-201 -76 0
201 77 76 0
c Gate #203: nor (NOR3_11): out = 202, in = 35 41 42 
470 -35 0
470 -41 0
-470 35 41 0
469 -470 0
469 -42 0
-469 470 42 0
202 469 0
-202 -469 0
c Gate #204: nor (NOR4_9): out = 203, in = 84 83 82 81 
472 -84 0
472 -83 0
-472 84 83 0
473 -472 0
473 -82 0
-473 472 82 0
471 -473 0
471 -81 0
-471 473 81 0
203 471 0
-203 -471 0
c Gate #205: nor (NOR3_12): out = 204, in = 45 44 48 
475 -45 0
475 -44 0
-475 45 44 0
474 -475 0
474 -48 0
-474 475 48 0
204 474 0
-204 -474 0
c Gate #206: nor (NOR3_13): out = 205, in = 80 79 78 
477 -80 0
477 -79 0
-477 80 79 0
476 -477 0
476 -78 0
-476 477 78 0
205 476 0
-205 -476 0
c Gate #207: nor (NOR2_18): out = 206, in = 4 22 
-206 -4 0
-206 -22 0
206 4 22 0
c Gate #208: nor (NOR2_21): out = 207, in = 86 85 
-207 -86 0
-207 -85 0
207 86 85 0
c Gate #209: nor (NOR3_14): out = 208, in = 42 22 23 
479 -42 0
479 -22 0
-479 42 22 0
478 -479 0
478 -23 0
-478 479 23 0
208 478 0
-208 -478 0
c Gate #210: nor (NOR2_22): out = 209, in = 40 46 
-209 -40 0
-209 -46 0
209 40 46 0
c Gate #211: nor (NOR2_23): out = 210, in = 160 92 
-210 -160 0
-210 -92 0
210 160 92 0
c Gate #212: nor (NOR3_16): out = 211, in = 21 44 23 
481 -21 0
481 -44 0
-481 21 44 0
480 -481 0
480 -23 0
-480 481 23 0
211 480 0
-211 -480 0
c Gate #213: nor (NOR2_24): out = 212, in = 98 97 
-212 -98 0
-212 -97 0
212 98 97 0
c Gate #214: nor (NOR2_25): out = 213, in = 162 23 
-213 -162 0
-213 -23 0
213 162 23 0
c Gate #215: nor (NOR2_26): out = 214, in = 163 23 
-214 -163 0
-214 -23 0
214 163 23 0
c Gate #216: nor (NOR2_27): out = 215, in = 165 23 
-215 -165 0
-215 -23 0
215 165 23 0
c Gate #217: nor (NOR4_10): out = 216, in = 166 21 44 23 
483 -166 0
483 -21 0
-483 166 21 0
484 -483 0
484 -44 0
-484 483 44 0
482 -484 0
482 -23 0
-482 484 23 0
216 482 0
-216 -482 0
c Gate #218: nor (NOR2_28): out = 217, in = 44 48 
-217 -44 0
-217 -48 0
217 44 48 0
c Gate #219: nor (NOR2_29): out = 218, in = 168 48 
-218 -168 0
-218 -48 0
218 168 48 0
c Gate #220: nor (NOR3_19): out = 219, in = 169 44 48 
486 -169 0
486 -44 0
-486 169 44 0
485 -486 0
485 -48 0
-485 486 48 0
219 485 0
-219 -485 0
c Gate #221: nor (NOR2_30): out = 220, in = 53 52 
-220 -53 0
-220 -52 0
220 53 52 0
c Gate #222: nor (NOR2_31): out = 221, in = 172 48 
-221 -172 0
-221 -48 0
221 172 48 0
c Gate #223: nor (NOR2_32): out = 222, in = 173 48 
-222 -173 0
-222 -48 0
222 173 48 0
c Gate #224: and (AND2_36): out = 223, in = 159 46 
-223 159 0
-223 46 0
223 -159 -46 0
c Gate #225: and (AND4_5): out = 224, in = 193 46 45 44 
-487 193 0
-487 46 0
487 -193 -46 0
-488 487 0
-488 45 0
488 -487 -45 0
-224 488 0
-224 44 0
224 -488 -44 0
c Gate #226: or (OR2_14): out = 225, in = 185 45 
225 -185 0
225 -45 0
-225 185 45 0
c Gate #227: and (AND4_10): out = 226, in = 204 39 19 20 
-489 204 0
-489 39 0
489 -204 -39 0
-490 489 0
-490 19 0
490 -489 -19 0
-226 490 0
-226 20 0
226 -490 -20 0
c Gate #228: and (AND4_14): out = 227, in = 211 15 16 46 
-491 211 0
-491 15 0
491 -211 -15 0
-492 491 0
-492 16 0
492 -491 -16 0
-227 492 0
-227 46 0
227 -492 -46 0
c Gate #229: or (OR2_17): out = 228, in = 199 22 
228 -199 0
228 -22 0
-228 199 22 0
c Gate #230: nand (NAND4_21): out = 229, in = 184 7 8 9 
-494 184 0
-494 7 0
494 -184 -7 0
-495 494 0
-495 8 0
495 -494 -8 0
-493 495 0
-493 9 0
493 -495 -9 0
229 493 0
-229 -493 0
c Gate #231: and (AND3_15): out = 230, in = 212 5 46 
-496 212 0
-496 5 0
496 -212 -5 0
-230 496 0
-230 46 0
230 -496 -46 0
c Gate #232: or (OR4_14): out = 231, in = 153 152 38 37 
497 -153 0
497 -152 0
-497 153 152 0
498 -497 0
498 -38 0
-498 497 38 0
231 -498 0
231 -37 0
-231 498 37 0
c Gate #233: nand (NAND4_25): out = 232, in = 182 47 4 43 
-500 182 0
-500 47 0
500 -182 -47 0
-501 500 0
-501 4 0
501 -500 -4 0
-499 501 0
-499 43 0
499 -501 -43 0
232 499 0
-232 -499 0
c Gate #234: and (AND4_11): out = 233, in = 205 40 20 45 
-502 205 0
-502 40 0
502 -205 -40 0
-503 502 0
-503 20 0
503 -502 -20 0
-233 503 0
-233 45 0
233 -503 -45 0
c Gate #235: nand (NAND2_10): out = 234, in = 186 225 
234 186 0
234 225 0
-234 -186 -225 0
c Gate #236: and (AND4_7): out = 235, in = 197 16 21 22 
-504 197 0
-504 16 0
504 -197 -16 0
-505 504 0
-505 21 0
505 -504 -21 0
-235 505 0
-235 22 0
235 -505 -22 0
c Gate #237: and (AND2_16): out = 236, in = 150 45 
-236 150 0
-236 45 0
236 -150 -45 0
c Gate #238: and (AND2_17): out = 237, in = 200 42 
-237 200 0
-237 42 0
237 -200 -42 0
c Gate #239: and (AND4_12): out = 238, in = 154 206 47 3 
-506 154 0
-506 206 0
506 -154 -206 0
-507 506 0
-507 47 0
507 -506 -47 0
-238 507 0
-238 3 0
238 -507 -3 0
c Gate #240: and (AND2_43): out = 239, in = 229 17 
-239 229 0
-239 17 0
239 -229 -17 0
c Gate #241: or (OR4_0): out = 240, in = 176 20 44 48 
508 -176 0
508 -20 0
-508 176 20 0
509 -508 0
509 -44 0
-509 508 44 0
240 -509 0
240 -48 0
-240 509 48 0
c Gate #242: or (OR4_1): out = 241, in = 142 141 5 41 
510 -142 0
510 -141 0
-510 142 141 0
511 -510 0
511 -5 0
-511 510 5 0
241 -511 0
241 -41 0
-241 511 41 0
c Gate #243: or (OR4_2): out = 242, in = 143 5 46 21 
512 -143 0
512 -5 0
-512 143 5 0
513 -512 0
513 -46 0
-513 512 46 0
242 -513 0
242 -21 0
-242 513 21 0
c Gate #244: or (OR3_1): out = 243, in = 198 236 235 
514 -198 0
514 -236 0
-514 198 236 0
243 -514 0
243 -235 0
-243 514 235 0
c Gate #245: or (OR4_4): out = 244, in = 243 5 43 20 
515 -243 0
515 -5 0
-515 243 5 0
516 -515 0
516 -43 0
-516 515 43 0
244 -516 0
244 -20 0
-244 516 20 0
c Gate #246: nor (NOR2_5): out = 245, in = 233 226 
-245 -233 0
-245 -226 0
245 233 226 0
c Gate #247: or (OR2_28): out = 246, in = 208 45 
246 -208 0
246 -45 0
-246 208 45 0
c Gate #248: or (OR4_16): out = 247, in = 161 2 3 4 
517 -161 0
517 -2 0
-517 161 2 0
518 -517 0
518 -3 0
-518 517 3 0
247 -518 0
247 -4 0
-247 518 4 0
c Gate #249: or (OR4_5): out = 248, in = 180 145 5 20 
519 -180 0
519 -145 0
-519 180 145 0
520 -519 0
520 -5 0
-520 519 5 0
248 -520 0
248 -20 0
-248 520 20 0
c Gate #250: or (OR4_17): out = 249, in = 167 20 44 48 
521 -167 0
521 -20 0
-521 167 20 0
522 -521 0
522 -44 0
-522 521 44 0
249 -522 0
249 -48 0
-249 522 48 0
c Gate #251: or (OR4_18): out = 250, in = 217 17 46 21 
523 -217 0
523 -17 0
-523 217 17 0
524 -523 0
524 -46 0
-524 523 46 0
250 -524 0
250 -21 0
-250 524 21 0
c Gate #252: or (OR4_19): out = 251, in = 170 19 20 21 
525 -170 0
525 -19 0
-525 170 19 0
526 -525 0
526 -20 0
-526 525 20 0
251 -526 0
251 -21 0
-251 526 21 0
c Gate #253: or (OR4_20): out = 252, in = 171 19 46 45 
527 -171 0
527 -19 0
-527 171 19 0
528 -527 0
528 -46 0
-528 527 46 0
252 -528 0
252 -45 0
-252 528 45 0
c Gate #254: nand (NAND4_1): out = 253, in = 183 17 42 46 
-530 183 0
-530 17 0
530 -183 -17 0
-531 530 0
-531 42 0
531 -530 -42 0
-529 531 0
-529 46 0
529 -531 -46 0
253 529 0
-253 -529 0
c Gate #255: or (OR4_7): out = 254, in = 146 45 44 48 
532 -146 0
532 -45 0
-532 146 45 0
533 -532 0
533 -44 0
-533 532 44 0
254 -533 0
254 -48 0
-254 533 48 0
c Gate #256: nand (NAND2_0): out = 255, in = 177 240 
255 177 0
255 240 0
-255 -177 -240 0
c Gate #257: nor (NOR2_12): out = 256, in = 196 63 
-256 -196 0
-256 -63 0
256 196 63 0
c Gate #258: or (OR4_9): out = 257, in = 147 38 8 9 
534 -147 0
534 -38 0
-534 147 38 0
535 -534 0
535 -8 0
-535 534 8 0
257 -535 0
257 -9 0
-257 535 9 0
c Gate #259: and (AND2_27): out = 258, in = 207 17 
-258 207 0
-258 17 0
258 -207 -17 0
c Gate #260: nand (NAND4_6): out = 259, in = 188 45 44 48 
-537 188 0
-537 45 0
537 -188 -45 0
-538 537 0
-538 44 0
538 -537 -44 0
-536 538 0
-536 48 0
536 -538 -48 0
259 536 0
-259 -536 0
c Gate #261: nor (NOR2_16): out = 260, in = 201 72 
-260 -201 0
-260 -72 0
260 201 72 0
c Gate #262: and (AND2_28): out = 261, in = 156 46 
-261 156 0
-261 46 0
261 -156 -46 0
c Gate #263: nand (NAND4_7): out = 262, in = 151 45 48 228 
-540 151 0
-540 45 0
540 -151 -45 0
-541 540 0
-541 48 0
541 -540 -48 0
-539 541 0
-539 228 0
539 -541 -228 0
262 539 0
-262 -539 0
c Gate #264: and (AND2_9): out = 263, in = 195 42 
-263 195 0
-263 42 0
263 -195 -42 0
c Gate #265: nand (NAND3_3): out = 264, in = 203 120 231 
-543 203 0
-543 120 0
543 -203 -120 0
-542 543 0
-542 231 0
542 -543 -231 0
264 542 0
-264 -542 0
c Gate #266: nand (NAND2_2): out = 265, in = 209 246 
265 209 0
265 246 0
-265 -209 -246 0
c Gate #267: nor (NOR2_19): out = 266, in = 155 258 
-266 -155 0
-266 -258 0
266 155 258 0
c Gate #268: nor (NOR2_20): out = 267, in = 157 261 
-267 -157 0
-267 -261 0
267 157 261 0
c Gate #269: and (AND4_2): out = 268, in = 187 47 17 45 
-544 187 0
-544 47 0
544 -187 -47 0
-545 544 0
-545 17 0
545 -544 -17 0
-268 545 0
-268 45 0
268 -545 -45 0
c Gate #270: nor (NOR3_17): out = 269, in = 164 48 239 
547 -164 0
547 -48 0
-547 164 48 0
546 -547 0
546 -239 0
-546 547 239 0
269 546 0
-269 -546 0
c Gate #271: and (AND4_3): out = 270, in = 191 190 189 40 
-548 191 0
-548 190 0
548 -191 -190 0
-549 548 0
-549 189 0
549 -548 -189 0
-270 549 0
-270 40 0
270 -549 -40 0
c Gate #272: nor (NOR4_11): out = 271, in = 232 21 22 23 
551 -232 0
551 -21 0
-551 232 21 0
552 -551 0
552 -22 0
-552 551 22 0
550 -552 0
550 -23 0
-550 552 23 0
271 550 0
-271 -550 0
c Gate #273: and (AND4_8): out = 272, in = 202 7 8 9 
-553 202 0
-553 7 0
553 -202 -7 0
-554 553 0
-554 8 0
554 -553 -8 0
-272 554 0
-272 9 0
272 -554 -9 0
c Gate #274: nor (NOR3_18): out = 273, in = 58 57 268 
556 -58 0
556 -57 0
-556 58 57 0
555 -556 0
555 -268 0
-555 556 268 0
273 555 0
-273 -555 0
c Gate #275: and (AND4_4): out = 274, in = 192 40 17 19 
-557 192 0
-557 40 0
557 -192 -40 0
-558 557 0
-558 17 0
558 -557 -17 0
-274 558 0
-274 19 0
274 -558 -19 0
c Gate #276: nor (NOR4_12): out = 275, in = 220 47 19 22 
560 -220 0
560 -47 0
-560 220 47 0
561 -560 0
561 -19 0
-561 560 19 0
559 -561 0
559 -22 0
-559 561 22 0
275 559 0
-275 -559 0
c Gate #277: and (AND3_14): out = 276, in = 158 19 20 
-562 158 0
-562 19 0
562 -158 -19 0
-276 562 0
-276 20 0
276 -562 -20 0
c Gate #278: nand (NAND3_7): out = 277, in = 100 99 257 
-564 100 0
-564 99 0
564 -100 -99 0
-563 564 0
-563 257 0
563 -564 -257 0
277 563 0
-277 -563 0
c Gate #279: nand (NAND2_11): out = 278, in = 252 251 
278 252 0
278 251 0
-278 -252 -251 0
c Gate #280: nor (NOR4_0): out = 279, in = 253 45 44 23 
566 -253 0
566 -45 0
-566 253 45 0
567 -566 0
567 -44 0
-567 566 44 0
565 -567 0
565 -23 0
-565 567 23 0
279 565 0
-279 -565 0
c Gate #281: or (OR4_6): out = 280, in = 264 5 43 21 
568 -264 0
568 -5 0
-568 264 5 0
569 -568 0
569 -43 0
-569 568 43 0
280 -569 0
280 -21 0
-280 569 21 0
c Gate #282: and (AND2_26): out = 281, in = 266 46 
-281 266 0
-281 46 0
281 -266 -46 0
c Gate #283: or (OR3_11): out = 282, in = 273 19 20 
570 -273 0
570 -19 0
-570 273 19 0
282 -570 0
282 -20 0
-282 570 20 0
c Gate #284: nor (NOR3_15): out = 283, in = 91 223 276 
572 -91 0
572 -223 0
-572 91 223 0
571 -572 0
571 -276 0
-571 572 276 0
283 571 0
-283 -571 0
c Gate #285: nor (NOR2_2): out = 284, in = 256 263 
-284 -256 0
-284 -263 0
284 256 263 0
c Gate #286: nor (NOR2_3): out = 285, in = 43 272 
-285 -43 0
-285 -272 0
285 43 272 0
c Gate #287: nor (NOR2_4): out = 286, in = 260 237 
-286 -260 0
-286 -237 0
286 260 237 0
c Gate #288: nand (NAND3_8): out = 287, in = 136 135 247 
-574 136 0
-574 135 0
574 -136 -135 0
-573 574 0
-573 247 0
573 -574 -247 0
287 573 0
-287 -573 0
c Gate #289: and (AND3_13): out = 288, in = 277 42 46 
-575 277 0
-575 42 0
575 -277 -42 0
-288 575 0
-288 46 0
288 -575 -46 0
c Gate #290: nor (NOR3_5): out = 289, in = 267 281 238 
577 -267 0
577 -281 0
-577 267 281 0
576 -577 0
576 -238 0
-576 577 238 0
289 576 0
-289 -576 0
c Gate #291: and (AND2_35): out = 290, in = 283 22 
-290 283 0
-290 22 0
290 -283 -22 0
c Gate #292: or (OR4_8): out = 291, in = 194 224 274 270 
578 -194 0
578 -224 0
-578 194 224 0
579 -578 0
579 -274 0
-579 578 274 0
291 -579 0
291 -270 0
-291 579 270 0
c Gate #293: and (AND3_16): out = 292, in = 287 20 21 
-580 287 0
-580 20 0
580 -287 -20 0
-292 580 0
-292 21 0
292 -580 -21 0
c Gate #294: or (OR4_3): out = 293, in = 285 144 5 46 
581 -285 0
581 -144 0
-581 285 144 0
582 -581 0
582 -5 0
-582 581 5 0
293 -582 0
293 -46 0
-293 582 46 0
c Gate #295: nand (NAND4_26): out = 294, in = 234 282 250 249 
-584 234 0
-584 282 0
584 -234 -282 0
-585 584 0
-585 250 0
585 -584 -250 0
-583 585 0
-583 249 0
583 -585 -249 0
294 583 0
-294 -583 0
c Gate #296: or (OR2_0): out = 295, in = 289 19 
295 -289 0
295 -19 0
-295 289 19 0
c Gate #297: nor (NOR3_7): out = 296, in = 210 290 288 
587 -210 0
587 -290 0
-587 210 290 0
586 -587 0
586 -288 0
-586 587 288 0
296 586 0
-296 -586 0
c Gate #298: and (AND2_0): out = 297, in = 24 291 
-297 24 0
-297 291 0
297 -24 -291 0
c Gate #299: or (OR3_0): out = 298, in = 284 46 45 
588 -284 0
588 -46 0
-588 284 46 0
298 -588 0
298 -45 0
-298 588 45 0
c Gate #300: or (OR3_2): out = 299, in = 286 46 45 
589 -286 0
589 -46 0
-589 286 46 0
299 -589 0
299 -45 0
-299 589 45 0
c Gate #301: nor (NOR3_6): out = 300, in = 292 230 227 
591 -292 0
591 -230 0
-591 292 230 0
590 -591 0
590 -227 0
-590 591 227 0
300 590 0
-300 -590 0
c Gate #302: nand (NAND4_8): out = 301, in = 259 298 242 241 
-593 259 0
-593 298 0
593 -259 -298 0
-594 593 0
-594 242 0
594 -593 -242 0
-592 594 0
-592 241 0
592 -594 -241 0
301 592 0
-301 -592 0
c Gate #303: or (OR2_2): out = 302, in = 296 43 
302 -296 0
302 -43 0
-302 296 43 0
c Gate #304: nand (NAND4_9): out = 303, in = 262 299 244 293 
-596 262 0
-596 299 0
596 -262 -299 0
-597 596 0
-597 244 0
597 -596 -244 0
-595 597 0
-595 293 0
595 -597 -293 0
303 595 0
-303 -595 0
c Gate #305: or (OR2_1): out = 304, in = 300 19 
304 -300 0
304 -19 0
-304 300 19 0
c Gate #306: nand (NAND4_11): out = 305, in = 265 302 304 254 
-599 265 0
-599 302 0
599 -265 -302 0
-600 599 0
-600 304 0
600 -599 -304 0
-598 600 0
-598 254 0
598 -600 -254 0
305 598 0
-305 -598 0
c Gate #307: and (AND2_4): out = 306, in = 28 305 
-306 28 0
-306 305 0
306 -28 -305 0
c Gate #308: and (AND2_1): out = 307, in = 25 301 
-307 25 0
-307 301 0
307 -25 -301 0
c Gate #309: and (AND2_2): out = 308, in = 26 303 
-308 26 0
-308 303 0
308 -26 -303 0
c Gate #310: nand (NAND4_10): out = 309, in = 245 295 280 248 
-602 245 0
-602 295 0
602 -245 -295 0
-603 602 0
-603 280 0
603 -602 -280 0
-601 603 0
-601 248 0
601 -603 -248 0
309 601 0
-309 -601 0
c Gate #311: and (AND2_3): out = 310, in = 27 309 
-310 27 0
-310 309 0
310 -27 -309 0
c
c Random XOR constraints start here
c
-604 222 271 0
-604 -222 -271 0
604 -222 271 0
604 222 -271 0
604 0
c Rand xor clause 1 with 2 lits
-605 222 271 0
-605 -222 -271 0
605 -222 271 0
605 222 -271 0
605 0
c Rand xor clause 2 with 2 lits
-606 222 271 0
-606 -222 -271 0
606 -222 271 0
606 222 -271 0
606 0
c Rand xor clause 3 with 2 lits
