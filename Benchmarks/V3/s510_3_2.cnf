p cnf 298 768
c
c CNF representation of circuit s510 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 236 Total inputs 25
c
c
p cnf 298 768
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 25 0
c
c Gate #27: not (NOT_0): out = 26, in = 7 
26 7 0
-26 -7 0
c Gate #28: not (NOT_1): out = 27, in = 6 
27 6 0
-27 -6 0
c Gate #29: not (NOT_2): out = 28, in = 17 
28 17 0
-28 -17 0
c Gate #30: not (NOT_3): out = 29, in = 12 
29 12 0
-29 -12 0
c Gate #31: not (NOT_4): out = 30, in = 25 
30 25 0
-30 -25 0
c Gate #32: not (NOT_5): out = 31, in = 24 
31 24 0
-31 -24 0
c Gate #33: not (NOT_6): out = 32, in = 23 
32 23 0
-32 -23 0
c Gate #34: not (NOT_7): out = 33, in = 22 
33 22 0
-33 -22 0
c Gate #35: not (NOT_8): out = 34, in = 21 
34 21 0
-34 -21 0
c Gate #36: not (NOT_9): out = 35, in = 20 
35 20 0
-35 -20 0
c Gate #37: not (NOT_10): out = 36, in = 8 
36 8 0
-36 -8 0
c Gate #38: not (NOT_11): out = 37, in = 9 
37 9 0
-37 -9 0
c Gate #39: and (AND2_0): out = 38, in = 23 15 
-38 23 0
-38 15 0
38 -23 -15 0
c Gate #40: and (AND2_1): out = 39, in = 20 16 
-39 20 0
-39 16 0
39 -20 -16 0
c Gate #41: and (AND2_2): out = 40, in = 21 1 
-40 21 0
-40 1 0
40 -21 -1 0
c Gate #42: and (AND2_3): out = 41, in = 32 10 
-41 32 0
-41 10 0
41 -32 -10 0
c Gate #43: and (AND2_5): out = 42, in = 4 37 
-42 4 0
-42 37 0
42 -4 -37 0
c Gate #44: or (OR2_0): out = 43, in = 25 3 
43 -25 0
43 -3 0
-43 25 3 0
c Gate #45: or (OR2_1): out = 44, in = 29 13 
44 -29 0
44 -13 0
-44 29 13 0
c Gate #46: or (OR2_2): out = 45, in = 30 31 
45 -30 0
45 -31 0
-45 30 31 0
c Gate #47: or (OR2_4): out = 46, in = 33 34 
46 -33 0
46 -34 0
-46 33 34 0
c Gate #48: or (OR2_5): out = 47, in = 32 34 
47 -32 0
47 -34 0
-47 32 34 0
c Gate #49: nand (NAND2_0): out = 48, in = 23 24 
48 23 0
48 24 0
-48 -23 -24 0
c Gate #50: nand (NAND2_1): out = 49, in = 24 22 
49 24 0
49 22 0
-49 -24 -22 0
c Gate #51: nand (NAND2_2): out = 50, in = 9 4 
50 9 0
50 4 0
-50 -9 -4 0
c Gate #52: nand (NAND2_3): out = 51, in = 24 30 
51 24 0
51 30 0
-51 -24 -30 0
c Gate #53: nand (NAND2_4): out = 52, in = 22 30 
52 22 0
52 30 0
-52 -22 -30 0
c Gate #54: nand (NAND2_5): out = 53, in = 33 23 
53 33 0
53 23 0
-53 -33 -23 0
c Gate #55: nand (NAND2_6): out = 54, in = 34 22 
54 34 0
54 22 0
-54 -34 -22 0
c Gate #56: nand (NAND2_10): out = 55, in = 34 35 
55 34 0
55 35 0
-55 -34 -35 0
c Gate #57: nand (NAND2_11): out = 56, in = 35 49 
56 35 0
56 49 0
-56 -35 -49 0
c Gate #58: nand (NAND2_12): out = 57, in = 35 2 
57 35 0
57 2 0
-57 -35 -2 0
c Gate #59: nand (NAND2_13): out = 58, in = 25 35 
58 25 0
58 35 0
-58 -25 -35 0
c Gate #60: nand (NAND2_14): out = 59, in = 7 36 
59 7 0
59 36 0
-59 -7 -36 0
c Gate #61: nand (NAND2_20): out = 60, in = 35 46 
60 35 0
60 46 0
-60 -35 -46 0
c Gate #62: nor (NOR2_0): out = 61, in = 24 25 
-61 -24 0
-61 -25 0
61 24 25 0
c Gate #63: nor (NOR2_1): out = 62, in = 23 24 
-62 -23 0
-62 -24 0
62 23 24 0
c Gate #64: nor (NOR2_2): out = 63, in = 23 25 
-63 -23 0
-63 -25 0
63 23 25 0
c Gate #65: nor (NOR2_3): out = 64, in = 20 22 
-64 -20 0
-64 -22 0
64 20 22 0
c Gate #66: nor (NOR2_4): out = 65, in = 24 20 
-65 -24 0
-65 -20 0
65 24 20 0
c Gate #67: nor (NOR2_5): out = 66, in = 28 18 
-66 -28 0
-66 -18 0
66 28 18 0
c Gate #68: nor (NOR2_6): out = 67, in = 23 30 
-67 -23 0
-67 -30 0
67 23 30 0
c Gate #69: nor (NOR2_7): out = 68, in = 24 30 
-68 -24 0
-68 -30 0
68 24 30 0
c Gate #70: nor (NOR2_8): out = 69, in = 25 48 
-69 -25 0
-69 -48 0
69 25 48 0
c Gate #71: nor (NOR2_9): out = 70, in = 32 49 
-70 -32 0
-70 -49 0
70 32 49 0
c Gate #72: nor (NOR2_10): out = 71, in = 33 24 
-71 -33 0
-71 -24 0
71 33 24 0
c Gate #73: nor (NOR2_11): out = 72, in = 34 30 
-72 -34 0
-72 -30 0
72 34 30 0
c Gate #74: nor (NOR2_12): out = 73, in = 31 64 
-73 -31 0
-73 -64 0
73 31 64 0
c Gate #75: nor (NOR2_13): out = 74, in = 35 30 
-74 -35 0
-74 -30 0
74 35 30 0
c Gate #76: nor (NOR3_0): out = 75, in = 32 33 35 
238 -32 0
238 -33 0
-238 32 33 0
237 -238 0
237 -35 0
-237 238 35 0
75 237 0
-75 -237 0
c Gate #77: nor (NOR2_14): out = 76, in = 40 39 
-76 -40 0
-76 -39 0
76 40 39 0
c Gate #78: nor (NOR2_15): out = 77, in = 35 51 
-77 -35 0
-77 -51 0
77 35 51 0
c Gate #79: nor (NOR3_1): out = 78, in = 51 23 22 
240 -51 0
240 -23 0
-240 51 23 0
239 -240 0
239 -22 0
-239 240 22 0
78 239 0
-78 -239 0
c Gate #80: nor (NOR2_18): out = 79, in = 38 41 
-79 -38 0
-79 -41 0
79 38 41 0
c Gate #81: nor (NOR2_20): out = 80, in = 35 53 
-80 -35 0
-80 -53 0
80 35 53 0
c Gate #82: nor (NOR2_21): out = 81, in = 32 54 
-81 -32 0
-81 -54 0
81 32 54 0
c Gate #83: nor (NOR2_23): out = 82, in = 48 58 
-82 -48 0
-82 -58 0
82 48 58 0
c Gate #84: not (NOT_17): out = 83, in = 55 
83 55 0
-83 -55 0
c Gate #85: not (NOT_18): out = 84, in = 75 
84 75 0
-84 -75 0
c Gate #86: or (OR2_3): out = 85, in = 48 21 
85 -48 0
85 -21 0
-85 48 21 0
c Gate #87: or (OR2_7): out = 86, in = 52 55 
86 -52 0
86 -55 0
-86 52 55 0
c Gate #88: or (OR2_18): out = 87, in = 51 83 
87 -51 0
87 -83 0
-87 51 83 0
c Gate #89: not (NOT_22): out = 88, in = 79 
88 79 0
-88 -79 0
c Gate #90: not (NOT_25): out = 89, in = 81 
89 81 0
-89 -81 0
c Gate #91: nand (NAND3_0): out = 90, in = 63 3 33 
-242 63 0
-242 3 0
242 -63 -3 0
-241 242 0
-241 33 0
241 -242 -33 0
90 241 0
-90 -241 0
c Gate #92: nand (NAND2_7): out = 91, in = 62 64 
91 62 0
91 64 0
-91 -62 -64 0
c Gate #93: nand (NAND2_8): out = 92, in = 25 64 
92 25 0
92 64 0
-92 -25 -64 0
c Gate #94: nand (NAND2_9): out = 93, in = 23 65 
93 23 0
93 65 0
-93 -23 -65 0
c Gate #95: not (NOT_12): out = 94, in = 61 
94 61 0
-94 -61 0
c Gate #96: not (NOT_13): out = 95, in = 48 
95 48 0
-95 -48 0
c Gate #97: nand (NAND2_15): out = 96, in = 65 67 
96 65 0
96 67 0
-96 -65 -67 0
c Gate #98: nand (NAND2_16): out = 97, in = 67 34 
97 67 0
97 34 0
-97 -67 -34 0
c Gate #99: nand (NAND3_1): out = 98, in = 49 67 20 
-244 49 0
-244 67 0
244 -49 -67 0
-243 244 0
-243 20 0
243 -244 -20 0
98 243 0
-98 -243 0
c Gate #100: nand (NAND2_17): out = 99, in = 69 22 
99 69 0
99 22 0
-99 -69 -22 0
c Gate #101: nand (NAND2_18): out = 100, in = 33 69 
100 33 0
100 69 0
-100 -33 -69 0
c Gate #102: nand (NAND2_19): out = 101, in = 23 71 
101 23 0
101 71 0
-101 -23 -71 0
c Gate #103: not (NOT_14): out = 102, in = 63 
102 63 0
-102 -63 0
c Gate #104: nand (NAND2_21): out = 103, in = 72 33 
103 72 0
103 33 0
-103 -72 -33 0
c Gate #105: nand (NAND2_22): out = 104, in = 73 25 
104 73 0
104 25 0
-104 -73 -25 0
c Gate #106: nand (NAND2_23): out = 105, in = 93 85 
105 93 0
105 85 0
-105 -93 -85 0
c Gate #107: nand (NAND2_24): out = 106, in = 32 77 
106 32 0
106 77 0
-106 -32 -77 0
c Gate #108: nand (NAND2_25): out = 107, in = 34 78 
107 34 0
107 78 0
-107 -34 -78 0
c Gate #109: nand (NAND3_3): out = 108, in = 68 80 27 
-246 68 0
-246 80 0
246 -68 -80 0
-245 246 0
-245 27 0
245 -246 -27 0
108 245 0
-108 -245 0
c Gate #110: not (NOT_15): out = 109, in = 67 
109 67 0
-109 -67 0
c Gate #111: and (AND2_4): out = 110, in = 61 32 
-110 61 0
-110 32 0
110 -61 -32 0
c Gate #112: not (NOT_16): out = 111, in = 52 
111 52 0
-111 -52 0
c Gate #113: and (AND2_6): out = 112, in = 22 51 
-112 22 0
-112 51 0
112 -22 -51 0
c Gate #114: and (AND2_7): out = 113, in = 68 35 
-113 68 0
-113 35 0
113 -68 -35 0
c Gate #115: and (AND2_8): out = 114, in = 70 20 
-114 70 0
-114 20 0
114 -70 -20 0
c Gate #116: and (AND2_9): out = 115, in = 70 72 
-115 70 0
-115 72 0
115 -70 -72 0
c Gate #117: and (AND2_10): out = 116, in = 72 31 
-116 72 0
-116 31 0
116 -72 -31 0
c Gate #118: and (AND2_11): out = 117, in = 71 72 
-117 71 0
-117 72 0
117 -71 -72 0
c Gate #119: and (AND2_12): out = 118, in = 34 91 
-118 34 0
-118 91 0
118 -34 -91 0
c Gate #120: and (AND3_0): out = 119, in = 23 25 56 
-247 23 0
-247 25 0
247 -23 -25 0
-119 247 0
-119 56 0
119 -247 -56 0
c Gate #121: and (AND2_13): out = 120, in = 57 69 
-120 57 0
-120 69 0
120 -57 -69 0
c Gate #122: and (AND2_14): out = 121, in = 59 78 
-121 59 0
-121 78 0
121 -59 -78 0
c Gate #123: and (AND3_1): out = 122, in = 60 62 11 
-248 60 0
-248 62 0
248 -60 -62 0
-122 248 0
-122 11 0
122 -248 -11 0
c Gate #124: nor (NOR2_16): out = 123, in = 95 62 
-123 -95 0
-123 -62 0
123 95 62 0
c Gate #125: nor (NOR2_17): out = 124, in = 102 49 
-124 -102 0
-124 -49 0
124 102 49 0
c Gate #126: and (AND3_2): out = 125, in = 33 50 82 
-249 33 0
-249 50 0
249 -33 -50 0
-125 249 0
-125 82 0
125 -249 -82 0
c Gate #127: nor (NOR2_19): out = 126, in = 53 94 
-126 -53 0
-126 -94 0
126 53 94 0
c Gate #128: and (AND2_19): out = 127, in = 82 34 
-127 82 0
-127 34 0
127 -82 -34 0
c Gate #129: nor (NOR3_2): out = 128, in = 54 20 94 
251 -54 0
251 -20 0
-251 54 20 0
250 -251 0
250 -94 0
-250 251 94 0
128 250 0
-128 -250 0
c Gate #130: nor (NOR2_22): out = 129, in = 91 21 
-129 -91 0
-129 -21 0
129 91 21 0
c Gate #131: nor (NOR2_24): out = 130, in = 42 92 
-130 -42 0
-130 -92 0
130 42 92 0
c Gate #132: nor (NOR2_25): out = 131, in = 31 109 
-131 -31 0
-131 -109 0
131 31 109 0
c Gate #133: nor (NOR2_26): out = 132, in = 112 63 
-132 -112 0
-132 -63 0
132 112 63 0
c Gate #134: nor (NOR3_3): out = 133, in = 92 21 123 
253 -92 0
253 -21 0
-253 92 21 0
252 -253 0
252 -123 0
-252 253 123 0
133 252 0
-133 -252 0
c Gate #135: nor (NOR2_27): out = 134, in = 118 25 
-134 -118 0
-134 -25 0
134 118 25 0
c Gate #136: nor (NOR2_28): out = 135, in = 115 129 
-135 -115 0
-135 -129 0
135 115 129 0
c Gate #137: nor (NOR2_29): out = 136, in = 110 105 
-136 -110 0
-136 -105 0
136 110 105 0
c Gate #138: nor (NOR2_30): out = 137, in = 23 83 
-137 -23 0
-137 -83 0
137 23 83 0
c Gate #139: nor (NOR2_31): out = 138, in = 120 81 
-138 -120 0
-138 -81 0
138 120 81 0
c Gate #140: nor (NOR2_32): out = 139, in = 84 61 
-139 -84 0
-139 -61 0
139 84 61 0
c Gate #141: nor (NOR2_34): out = 140, in = 114 134 
-140 -114 0
-140 -134 0
140 114 134 0
c Gate #142: nor (NOR2_35): out = 141, in = 22 137 
-141 -22 0
-141 -137 0
141 22 137 0
c Gate #143: or (OR2_9): out = 142, in = 96 21 
142 -96 0
142 -21 0
-142 96 21 0
c Gate #144: or (OR3_0): out = 143, in = 20 97 49 
254 -20 0
254 -97 0
-254 20 97 0
143 -254 0
143 -49 0
-143 254 49 0
c Gate #145: or (OR2_10): out = 144, in = 56 97 
144 -56 0
144 -97 0
-144 56 97 0
c Gate #146: or (OR2_11): out = 145, in = 66 99 
145 -66 0
145 -99 0
-145 66 99 0
c Gate #147: or (OR2_12): out = 146, in = 28 99 
146 -28 0
146 -99 0
-146 28 99 0
c Gate #148: or (OR2_13): out = 147, in = 100 2 
147 -100 0
147 -2 0
-147 100 2 0
c Gate #149: or (OR2_14): out = 148, in = 76 100 
148 -76 0
148 -100 0
-148 76 100 0
c Gate #150: nand (NAND2_26): out = 149, in = 111 35 
149 111 0
149 35 0
-149 -111 -35 0
c Gate #151: nand (NAND2_27): out = 150, in = 34 123 
150 34 0
150 123 0
-150 -34 -123 0
c Gate #152: nand (NAND2_28): out = 151, in = 124 44 
151 124 0
151 44 0
-151 -124 -44 0
c Gate #153: nand (NAND3_2): out = 152, in = 126 4 5 
-256 126 0
-256 4 0
256 -126 -4 0
-255 256 0
-255 5 0
255 -256 -5 0
152 255 0
-152 -255 0
c Gate #154: or (OR2_15): out = 153, in = 48 103 
153 -48 0
153 -103 0
-153 48 103 0
c Gate #155: nand (NAND2_30): out = 154, in = 101 142 
154 101 0
154 142 0
-154 -101 -142 0
c Gate #156: nand (NAND2_31): out = 155, in = 54 131 
155 54 0
155 131 0
-155 -54 -131 0
c Gate #157: nand (NAND2_34): out = 156, in = 153 143 
156 153 0
156 143 0
-156 -153 -143 0
c Gate #158: nand (NAND2_36): out = 157, in = 135 144 
157 135 0
157 144 0
-157 -135 -144 0
c Gate #159: nand (NAND2_37): out = 158, in = 137 22 
158 137 0
158 22 0
-158 -137 -22 0
c Gate #160: nand (NAND3_4): out = 159, in = 98 87 147 
-258 98 0
-258 87 0
258 -98 -87 0
-257 258 0
-257 147 0
257 -258 -147 0
159 257 0
-159 -257 0
c Gate #161: nand (NAND3_7): out = 160, in = 136 141 45 
-260 136 0
-260 141 0
260 -136 -141 0
-259 260 0
-259 45 0
259 -260 -45 0
160 259 0
-160 -259 0
c Gate #162: or (OR2_16): out = 161, in = 129 80 
161 -129 0
161 -80 0
-161 129 80 0
c Gate #163: or (OR2_17): out = 162, in = 109 83 
162 -109 0
162 -83 0
-162 109 83 0
c Gate #164: or (OR2_20): out = 163, in = 132 35 
163 -132 0
163 -35 0
-163 132 35 0
c Gate #165: or (OR2_21): out = 164, in = 58 150 
164 -58 0
164 -150 0
-164 58 150 0
c Gate #166: or (OR2_25): out = 165, in = 89 25 
165 -89 0
165 -25 0
-165 89 25 0
c Gate #167: or (OR2_26): out = 166, in = 89 30 
166 -89 0
166 -30 0
-166 89 30 0
c Gate #168: and (AND2_15): out = 167, in = 74 123 
-167 74 0
-167 123 0
167 -74 -123 0
c Gate #169: and (AND2_16): out = 168, in = 14 124 
-168 14 0
-168 124 0
168 -14 -124 0
c Gate #170: and (AND2_17): out = 169, in = 11 126 
-169 11 0
-169 126 0
169 -11 -126 0
c Gate #171: and (AND2_18): out = 170, in = 126 20 
-170 126 0
-170 20 0
170 -126 -20 0
c Gate #172: not (NOT_23): out = 171, in = 101 
171 101 0
-171 -101 0
c Gate #173: not (NOT_24): out = 172, in = 103 
172 103 0
-172 -103 0
c Gate #174: not (NOT_26): out = 173, in = 129 
173 129 0
-173 -129 0
c Gate #175: not (NOT_27): out = 174, in = 150 
174 150 0
-174 -150 0
c Gate #176: not (NOT_28): out = 175, in = 133 
175 133 0
-175 -133 0
c Gate #177: and (AND2_21): out = 176, in = 131 60 
-176 131 0
-176 60 0
176 -131 -60 0
c Gate #178: and (AND2_22): out = 177, in = 106 107 
-177 106 0
-177 107 0
177 -106 -107 0
c Gate #179: and (AND2_23): out = 178, in = 88 128 
-178 88 0
-178 128 0
178 -88 -128 0
c Gate #180: not (NOT_29): out = 179, in = 151 
179 151 0
-179 -151 0
c Gate #181: not (NOT_19): out = 180, in = 97 
180 97 0
-180 -97 0
c Gate #182: and (AND3_3): out = 181, in = 171 19 20 
-261 171 0
-261 19 0
261 -171 -19 0
-181 261 0
-181 20 0
181 -261 -20 0
c Gate #183: not (NOT_20): out = 182, in = 99 
182 99 0
-182 -99 0
c Gate #184: not (NOT_21): out = 183, in = 124 
183 124 0
-183 -124 0
c Gate #185: or (OR2_6): out = 184, in = 93 4 
184 -93 0
184 -4 0
-184 93 4 0
c Gate #186: nor (NOR2_33): out = 185, in = 168 169 
-185 -168 0
-185 -169 0
185 168 169 0
c Gate #187: nor (NOR3_4): out = 186, in = 72 113 170 
263 -72 0
263 -113 0
-263 72 113 0
262 -263 0
262 -170 0
-262 263 170 0
186 262 0
-186 -262 0
c Gate #188: and (AND2_24): out = 187, in = 172 23 
-187 172 0
-187 23 0
187 -172 -23 0
c Gate #189: or (OR2_8): out = 188, in = 96 33 
188 -96 0
188 -33 0
-188 96 33 0
c Gate #190: nor (NOR2_37): out = 189, in = 176 75 
-189 -176 0
-189 -75 0
189 176 75 0
c Gate #191: nor (NOR2_38): out = 190, in = 177 26 
-190 -177 0
-190 -26 0
190 177 26 0
c Gate #192: nor (NOR2_39): out = 191, in = 174 73 
-191 -174 0
-191 -73 0
191 174 73 0
c Gate #193: nor (NOR2_40): out = 192, in = 122 181 
-192 -122 0
-192 -181 0
192 122 181 0
c Gate #194: nor (NOR2_41): out = 193, in = 187 125 
-193 -187 0
-193 -125 0
193 187 125 0
c Gate #195: nor (NOR3_7): out = 194, in = 117 179 159 
265 -117 0
265 -179 0
-265 117 179 0
264 -265 0
264 -159 0
-264 265 159 0
194 264 0
-194 -264 0
c Gate #196: nand (NAND4_0): out = 195, in = 104 109 186 173 
-267 104 0
-267 109 0
267 -104 -109 0
-268 267 0
-268 186 0
268 -267 -186 0
-266 268 0
-266 173 0
266 -268 -173 0
195 266 0
-195 -266 0
c Gate #197: nand (NAND3_6): out = 196, in = 140 188 164 
-270 140 0
-270 188 0
270 -140 -188 0
-269 270 0
-269 164 0
269 -270 -164 0
196 269 0
-196 -269 0
c Gate #198: nand (NAND2_35): out = 197, in = 30 161 
197 30 0
197 161 0
-197 -30 -161 0
c Gate #199: nand (NAND2_42): out = 198, in = 189 165 
198 189 0
198 165 0
-198 -189 -165 0
c Gate #200: and (AND2_20): out = 199, in = 31 180 
-199 31 0
-199 180 0
199 -31 -180 0
c Gate #201: nand (NAND3_8): out = 200, in = 197 193 166 
-272 197 0
-272 193 0
272 -197 -193 0
-271 272 0
-271 166 0
271 -272 -166 0
200 271 0
-200 -271 0
c Gate #202: not (NOT_31): out = 201, in = 192 
201 192 0
-201 -192 0
c Gate #203: nand (NAND2_32): out = 202, in = 16 182 
202 16 0
202 182 0
-202 -16 -182 0
c Gate #204: nand (NAND2_33): out = 203, in = 171 43 
203 171 0
203 43 0
-203 -171 -43 0
c Gate #205: or (OR2_19): out = 204, in = 74 180 
204 -74 0
204 -180 0
-204 74 180 0
c Gate #206: nand (NAND2_38): out = 205, in = 89 162 
205 89 0
205 162 0
-205 -89 -162 0
c Gate #207: nand (NAND2_29): out = 206, in = 184 47 
206 184 0
206 47 0
-206 -184 -47 0
c Gate #208: or (OR2_22): out = 207, in = 29 183 
207 -29 0
207 -183 0
-207 29 183 0
c Gate #209: nor (NOR2_36): out = 208, in = 199 77 
-208 -199 0
-208 -77 0
208 199 77 0
c Gate #210: or (OR2_23): out = 209, in = 172 81 
209 -172 0
209 -81 0
-209 172 81 0
c Gate #211: or (OR2_24): out = 210, in = 130 172 
210 -130 0
210 -172 0
-210 130 172 0
c Gate #212: nand (NAND2_39): out = 211, in = 24 204 
211 24 0
211 204 0
-211 -24 -204 0
c Gate #213: nand (NAND3_5): out = 212, in = 152 146 207 
-274 152 0
-274 146 0
274 -152 -146 0
-273 274 0
-273 207 0
273 -274 -207 0
212 273 0
-212 -273 0
c Gate #214: or (OR2_27): out = 213, in = 191 25 
213 -191 0
213 -25 0
-213 191 25 0
c Gate #215: nor (NOR3_6): out = 214, in = 205 127 116 
276 -205 0
276 -127 0
-276 205 127 0
275 -276 0
275 -116 0
-275 276 116 0
214 275 0
-214 -275 0
c Gate #216: and (AND2_26): out = 215, in = 212 83 
-215 212 0
-215 83 0
215 -212 -83 0
c Gate #217: nor (NOR2_42): out = 216, in = 215 190 
-216 -215 0
-216 -190 0
216 215 190 0
c Gate #218: nor (NOR2_43): out = 217, in = 121 200 
-217 -121 0
-217 -200 0
217 121 200 0
c Gate #219: and (AND2_25): out = 218, in = 206 30 
-218 206 0
-218 30 0
218 -206 -30 0
c Gate #220: nand (NAND4_1): out = 219, in = 203 202 90 185 
-278 203 0
-278 202 0
278 -203 -202 0
-279 278 0
-279 90 0
279 -278 -90 0
-277 279 0
-277 185 0
277 -279 -185 0
219 277 0
-219 -277 0
c Gate #221: nand (NAND2_40): out = 220, in = 31 209 
220 31 0
220 209 0
-220 -31 -209 0
c Gate #222: and (AND2_29): out = 221, in = 201 30 
-221 201 0
-221 30 0
221 -201 -30 0
c Gate #223: nand (NAND3_9): out = 222, in = 214 86 213 
-281 214 0
-281 86 0
281 -214 -86 0
-280 281 0
-280 213 0
280 -281 -213 0
222 280 0
-222 -280 0
c Gate #224: nand (NAND3_10): out = 223, in = 217 194 145 
-283 217 0
-283 194 0
283 -217 -194 0
-282 283 0
-282 145 0
282 -283 -145 0
223 282 0
-223 -282 0
c Gate #225: not (NOT_30): out = 224, in = 208 
224 208 0
-224 -208 0
c Gate #226: and (AND2_27): out = 225, in = 219 21 
-225 219 0
-225 21 0
225 -219 -21 0
c Gate #227: nor (NOR3_5): out = 226, in = 154 218 167 
285 -154 0
285 -218 0
-285 154 218 0
284 -285 0
284 -167 0
-284 285 167 0
226 284 0
-226 -284 0
c Gate #228: nand (NAND2_41): out = 227, in = 24 210 
227 24 0
227 210 0
-227 -24 -210 0
c Gate #229: nand (NAND4_2): out = 228, in = 211 158 149 220 
-287 211 0
-287 158 0
287 -211 -158 0
-288 287 0
-288 149 0
288 -287 -149 0
-286 288 0
-286 220 0
286 -288 -220 0
228 286 0
-228 -286 0
c Gate #230: nor (NOR2_45): out = 229, in = 221 178 
-229 -221 0
-229 -178 0
229 221 178 0
c Gate #231: nand (NAND3_11): out = 230, in = 216 229 148 
-290 216 0
-290 229 0
290 -216 -229 0
-289 290 0
-289 148 0
289 -290 -148 0
230 289 0
-230 -289 0
c Gate #232: and (AND2_28): out = 231, in = 224 33 
-231 224 0
-231 33 0
231 -224 -33 0
c Gate #233: nand (NAND4_3): out = 232, in = 155 138 226 227 
-292 155 0
-292 138 0
292 -155 -138 0
-293 292 0
-293 226 0
293 -292 -226 0
-291 293 0
-291 227 0
291 -293 -227 0
232 291 0
-232 -291 0
c Gate #234: nor (NOR2_44): out = 233, in = 231 119 
-233 -231 0
-233 -119 0
233 231 119 0
c Gate #235: nand (NAND2_43): out = 234, in = 233 163 
234 233 0
234 163 0
-234 -233 -163 0
c Gate #236: nor (NOR2_46): out = 235, in = 225 230 
-235 -225 0
-235 -230 0
235 225 230 0
c Gate #237: nand (NAND3_12): out = 236, in = 235 108 175 
-295 235 0
-295 108 0
295 -235 -108 0
-294 295 0
-294 175 0
294 -295 -175 0
236 294 0
-236 -294 0
c
c Random XOR constraints start here
c
-296 139 232 0
-296 -139 -232 0
296 -139 232 0
296 139 -232 0
296 0
c Rand xor clause 1 with 2 lits
-297 139 232 0
-297 -139 -232 0
297 -139 232 0
297 139 -232 0
297 0
c Rand xor clause 2 with 2 lits
-298 139 232 0
-298 -139 -232 0
298 -139 232 0
298 139 -232 0
298 0
c Rand xor clause 3 with 2 lits
