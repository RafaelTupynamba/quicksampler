p cnf 263 635
c
c CNF representation of circuit s382 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 182 Total inputs 24
c
c
p cnf 263 635
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 0
c
c Gate #26: not (NOT_0): out = 25, in = 4 
25 4 0
-25 -4 0
c Gate #27: not (NOT_1): out = 26, in = 5 
26 5 0
-26 -5 0
c Gate #28: not (NOT_2): out = 27, in = 7 
27 7 0
-27 -7 0
c Gate #29: not (NOT_3): out = 28, in = 8 
28 8 0
-28 -8 0
c Gate #30: not (NOT_4): out = 29, in = 13 
29 13 0
-29 -13 0
c Gate #31: not (NOT_5): out = 30, in = 14 
30 14 0
-30 -14 0
c Gate #32: not (NOT_6): out = 31, in = 15 
31 15 0
-31 -15 0
c Gate #33: not (NOT_7): out = 32, in = 16 
32 16 0
-32 -16 0
c Gate #34: not (NOT_8): out = 33, in = 17 
33 17 0
-33 -17 0
c Gate #35: not (NOT_9): out = 34, in = 18 
34 18 0
-34 -18 0
c Gate #36: not (NOT_10): out = 35, in = 19 
35 19 0
-35 -19 0
c Gate #37: not (NOT_11): out = 36, in = 20 
36 20 0
-36 -20 0
c Gate #38: not (NOT_12): out = 37, in = 21 
37 21 0
-37 -21 0
c Gate #39: not (NOT_13): out = 38, in = 22 
38 22 0
-38 -22 0
c Gate #40: not (NOT_14): out = 39, in = 23 
39 23 0
-39 -23 0
c Gate #41: not (NOT_15): out = 40, in = 24 
40 24 0
-40 -24 0
c Gate #42: not (NOT_16): out = 41, in = 1 
41 1 0
-41 -1 0
c Gate #43: not (NOT_17): out = 42, in = 3 
42 3 0
-42 -3 0
c Gate #44: not (NOT_18): out = 43, in = 5 
43 5 0
-43 -5 0
c Gate #45: not (NOT_19): out = 44, in = 2 
44 2 0
-44 -2 0
c Gate #46: not (NOT_20): out = 45, in = 16 
45 16 0
-45 -16 0
c Gate #47: not (NOT_21): out = 46, in = 15 
46 15 0
-46 -15 0
c Gate #48: not (NOT_22): out = 47, in = 14 
47 14 0
-47 -14 0
c Gate #49: not (NOT_23): out = 48, in = 13 
48 13 0
-48 -13 0
c Gate #50: not (NOT_24): out = 49, in = 24 
49 24 0
-49 -24 0
c Gate #51: not (NOT_25): out = 50, in = 11 
50 11 0
-50 -11 0
c Gate #52: not (NOT_26): out = 51, in = 10 
51 10 0
-51 -10 0
c Gate #53: not (NOT_27): out = 52, in = 12 
52 12 0
-52 -12 0
c Gate #54: not (NOT_28): out = 53, in = 9 
53 9 0
-53 -9 0
c Gate #55: not (NOT_29): out = 54, in = 6 
54 6 0
-54 -6 0
c Gate #56: not (NOT_30): out = 55, in = 41 
55 41 0
-55 -41 0
c Gate #57: not (NOT_31): out = 56, in = 42 
56 42 0
-56 -42 0
c Gate #58: not (NOT_32): out = 57, in = 44 
57 44 0
-57 -44 0
c Gate #59: not (NOT_33): out = 58, in = 49 
58 49 0
-58 -49 0
c Gate #60: not (NOT_34): out = 59, in = 40 
59 40 0
-59 -40 0
c Gate #61: not (NOT_35): out = 60, in = 50 
60 50 0
-60 -50 0
c Gate #62: not (NOT_36): out = 61, in = 51 
61 51 0
-61 -51 0
c Gate #63: not (NOT_37): out = 62, in = 53 
62 53 0
-62 -53 0
c Gate #64: not (NOT_38): out = 63, in = 54 
63 54 0
-63 -54 0
c Gate #65: not (NOT_39): out = 64, in = 28 
64 28 0
-64 -28 0
c Gate #66: not (NOT_40): out = 65, in = 27 
65 27 0
-65 -27 0
c Gate #67: not (NOT_41): out = 66, in = 55 
66 55 0
-66 -55 0
c Gate #68: not (NOT_42): out = 67, in = 56 
67 56 0
-67 -56 0
c Gate #69: not (NOT_43): out = 68, in = 56 
68 56 0
-68 -56 0
c Gate #70: not (NOT_44): out = 69, in = 56 
69 56 0
-69 -56 0
c Gate #71: not (NOT_45): out = 70, in = 57 
70 57 0
-70 -57 0
c Gate #72: not (NOT_46): out = 71, in = 64 
71 64 0
-71 -64 0
c Gate #73: not (NOT_47): out = 72, in = 65 
72 65 0
-72 -65 0
c Gate #74: and (AND2_1): out = 73, in = 69 12 
-73 69 0
-73 12 0
73 -69 -12 0
c Gate #75: and (AND2_2): out = 74, in = 69 14 
-74 69 0
-74 14 0
74 -69 -14 0
c Gate #76: and (AND3_0): out = 75, in = 69 15 16 
-183 69 0
-183 15 0
183 -69 -15 0
-75 183 0
-75 16 0
75 -183 -16 0
c Gate #77: and (AND3_1): out = 76, in = 69 13 45 
-184 69 0
-184 13 0
184 -69 -13 0
-76 184 0
-76 45 0
76 -184 -45 0
c Gate #78: or (OR3_0): out = 77, in = 12 13 14 
185 -12 0
185 -13 0
-185 12 13 0
77 -185 0
77 -14 0
-77 185 14 0
c Gate #79: or (OR3_1): out = 78, in = 43 15 16 
186 -43 0
186 -15 0
-186 43 15 0
78 -186 0
78 -16 0
-78 186 16 0
c Gate #80: or (OR4_0): out = 79, in = 12 14 15 45 
187 -12 0
187 -14 0
-187 12 14 0
188 -187 0
188 -15 0
-188 187 15 0
79 -188 0
79 -45 0
-79 188 45 0
c Gate #81: or (OR2_0): out = 80, in = 43 48 
80 -43 0
80 -48 0
-80 43 48 0
c Gate #82: or (OR2_1): out = 81, in = 5 55 
81 -5 0
81 -55 0
-81 5 55 0
c Gate #83: or (OR2_2): out = 82, in = 56 47 
82 -56 0
82 -47 0
-82 56 47 0
c Gate #84: or (OR4_1): out = 83, in = 56 48 15 16 
189 -56 0
189 -48 0
-189 56 48 0
190 -189 0
190 -15 0
-190 189 15 0
83 -190 0
83 -16 0
-83 190 16 0
c Gate #85: or (OR3_2): out = 84, in = 56 48 14 
191 -56 0
191 -48 0
-191 56 48 0
84 -191 0
84 -14 0
-84 191 14 0
c Gate #86: or (OR4_2): out = 85, in = 56 43 13 47 
192 -56 0
192 -43 0
-192 56 43 0
193 -192 0
193 -13 0
-193 192 13 0
85 -193 0
85 -47 0
-85 193 47 0
c Gate #87: or (OR2_3): out = 86, in = 4 57 
86 -4 0
86 -57 0
-86 4 57 0
c Gate #88: or (OR2_6): out = 87, in = 23 59 
87 -23 0
87 -59 0
-87 23 59 0
c Gate #89: or (OR2_7): out = 88, in = 26 66 
88 -26 0
88 -66 0
-88 26 66 0
c Gate #90: or (OR2_8): out = 89, in = 25 70 
89 -25 0
89 -70 0
-89 25 70 0
c Gate #91: nand (NAND2_0): out = 90, in = 16 46 
90 16 0
90 46 0
-90 -16 -46 0
c Gate #92: nand (NAND4_0): out = 91, in = 16 46 48 43 
-195 16 0
-195 46 0
195 -16 -46 0
-196 195 0
-196 48 0
196 -195 -48 0
-194 196 0
-194 43 0
194 -196 -43 0
91 194 0
-91 -194 0
c Gate #93: nand (NAND2_2): out = 92, in = 23 59 
92 23 0
92 59 0
-92 -23 -59 0
c Gate #94: nand (NAND2_3): out = 93, in = 83 82 
93 83 0
93 82 0
-93 -83 -82 0
c Gate #95: nand (NAND2_4): out = 94, in = 85 84 
94 85 0
94 84 0
-94 -85 -84 0
c Gate #96: nand (NAND4_1): out = 95, in = 15 47 52 69 
-198 15 0
-198 47 0
198 -15 -47 0
-199 198 0
-199 52 0
199 -198 -52 0
-197 199 0
-197 69 0
197 -199 -69 0
95 197 0
-95 -197 0
c Gate #97: nand (NAND4_2): out = 96, in = 78 80 14 69 
-201 78 0
-201 80 0
201 -78 -80 0
-202 201 0
-202 14 0
202 -201 -14 0
-200 202 0
-200 69 0
200 -202 -69 0
96 200 0
-96 -200 0
c Gate #98: nand (NAND3_0): out = 97, in = 79 77 69 
-204 79 0
-204 77 0
204 -79 -77 0
-203 204 0
-203 69 0
203 -204 -69 0
97 203 0
-97 -203 0
c Gate #99: nand (NAND2_8): out = 98, in = 92 87 
98 92 0
98 87 0
-98 -92 -87 0
c Gate #100: nand (NAND2_9): out = 99, in = 81 88 
99 81 0
99 88 0
-99 -81 -88 0
c Gate #101: nand (NAND3_1): out = 100, in = 45 46 94 
-206 45 0
-206 46 0
206 -45 -46 0
-205 206 0
-205 94 0
205 -206 -94 0
100 205 0
-100 -205 0
c Gate #102: nand (NAND2_10): out = 101, in = 86 89 
101 86 0
101 89 0
-101 -86 -89 0
c Gate #103: nor (NOR3_0): out = 102, in = 16 15 14 
208 -16 0
208 -15 0
-208 16 15 0
207 -208 0
207 -14 0
-207 208 14 0
102 207 0
-102 -207 0
c Gate #104: nor (NOR3_1): out = 103, in = 24 23 22 
210 -24 0
210 -23 0
-210 24 23 0
209 -210 0
209 -22 0
-209 210 22 0
103 209 0
-103 -209 0
c Gate #105: nor (NOR3_2): out = 104, in = 20 19 18 
212 -20 0
212 -19 0
-212 20 19 0
211 -212 0
211 -18 0
-211 212 18 0
104 211 0
-104 -211 0
c Gate #106: nor (NOR2_0): out = 105, in = 37 103 
-105 -37 0
-105 -103 0
105 37 103 0
c Gate #107: nor (NOR3_3): out = 106, in = 40 39 38 
214 -40 0
214 -39 0
-214 40 39 0
213 -214 0
213 -38 0
-213 214 38 0
106 213 0
-106 -213 0
c Gate #108: nor (NOR2_1): out = 107, in = 40 39 
-107 -40 0
-107 -39 0
107 40 39 0
c Gate #109: nor (NOR2_2): out = 108, in = 52 56 
-108 -52 0
-108 -56 0
108 52 56 0
c Gate #110: nor (NOR4_0): out = 109, in = 15 47 43 56 
216 -15 0
216 -47 0
-216 15 47 0
217 -216 0
217 -43 0
-217 216 43 0
215 -217 0
215 -56 0
-215 217 56 0
109 215 0
-109 -215 0
c Gate #111: nor (NOR2_3): out = 110, in = 4 105 
-110 -4 0
-110 -105 0
110 4 105 0
c Gate #112: nor (NOR3_4): out = 111, in = 105 58 56 
219 -105 0
219 -58 0
-219 105 58 0
218 -219 0
218 -56 0
-218 219 56 0
111 218 0
-111 -218 0
c Gate #113: nor (NOR4_1): out = 112, in = 36 35 34 110 
221 -36 0
221 -35 0
-221 36 35 0
222 -221 0
222 -34 0
-222 221 34 0
220 -222 0
220 -110 0
-220 222 110 0
112 220 0
-112 -220 0
c Gate #114: nor (NOR3_5): out = 113, in = 36 35 110 
224 -36 0
224 -35 0
-224 36 35 0
223 -224 0
223 -110 0
-223 224 110 0
113 223 0
-113 -223 0
c Gate #115: nor (NOR3_6): out = 114, in = 33 110 104 
226 -33 0
226 -110 0
-226 33 110 0
225 -226 0
225 -104 0
-225 226 104 0
114 225 0
-114 -225 0
c Gate #116: nor (NOR2_4): out = 115, in = 36 110 
-115 -36 0
-115 -110 0
115 36 110 0
c Gate #117: nor (NOR4_2): out = 116, in = 76 75 74 73 
228 -76 0
228 -75 0
-228 76 75 0
229 -228 0
229 -74 0
-229 228 74 0
227 -229 0
227 -73 0
-227 229 73 0
116 227 0
-116 -227 0
c Gate #118: nor (NOR2_5): out = 117, in = 45 95 
-117 -45 0
-117 -95 0
117 45 95 0
c Gate #119: nor (NOR3_9): out = 118, in = 105 98 56 
231 -105 0
231 -98 0
-231 105 98 0
230 -231 0
230 -56 0
-230 231 56 0
118 230 0
-118 -230 0
c Gate #120: nand (NAND2_1): out = 119, in = 22 107 
119 22 0
119 107 0
-119 -22 -107 0
c Gate #121: nand (NAND2_5): out = 120, in = 45 109 
120 45 0
120 109 0
-120 -45 -109 0
c Gate #122: not (NOT_52): out = 121, in = 101 
121 101 0
-121 -101 0
c Gate #123: nand (NAND2_12): out = 122, in = 18 113 
122 18 0
122 113 0
-122 -18 -113 0
c Gate #124: nand (NAND2_13): out = 123, in = 19 115 
123 19 0
123 115 0
-123 -19 -115 0
c Gate #125: and (AND2_0): out = 124, in = 12 91 
-124 12 0
-124 91 0
124 -12 -91 0
c Gate #126: not (NOT_48): out = 125, in = 110 
125 110 0
-125 -110 0
c Gate #127: or (OR4_3): out = 126, in = 47 13 5 90 
232 -47 0
232 -13 0
-232 47 13 0
233 -232 0
233 -5 0
-233 232 5 0
126 -233 0
126 -90 0
-126 233 90 0
c Gate #128: or (OR2_4): out = 127, in = 21 106 
127 -21 0
127 -106 0
-127 21 106 0
c Gate #129: or (OR2_5): out = 128, in = 22 107 
128 -22 0
128 -107 0
-128 22 107 0
c Gate #130: not (NOT_50): out = 129, in = 114 
129 114 0
-129 -114 0
c Gate #131: not (NOT_51): out = 130, in = 99 
130 99 0
-130 -99 0
c Gate #132: or (OR2_9): out = 131, in = 17 112 
131 -17 0
131 -112 0
-131 17 112 0
c Gate #133: or (OR2_10): out = 132, in = 18 113 
132 -18 0
132 -113 0
-132 18 113 0
c Gate #134: or (OR2_11): out = 133, in = 19 115 
133 -19 0
133 -115 0
-133 19 115 0
c Gate #135: or (OR2_12): out = 134, in = 20 125 
134 -20 0
134 -125 0
-134 20 125 0
c Gate #136: nor (NOR2_6): out = 135, in = 124 96 
-135 -124 0
-135 -96 0
135 124 96 0
c Gate #137: nor (NOR4_3): out = 136, in = 32 31 30 129 
235 -32 0
235 -31 0
-235 32 31 0
236 -235 0
236 -30 0
-236 235 30 0
234 -236 0
234 -129 0
-234 236 129 0
136 234 0
-136 -234 0
c Gate #138: nor (NOR3_10): out = 137, in = 32 31 129 
238 -32 0
238 -31 0
-238 32 31 0
237 -238 0
237 -129 0
-237 238 129 0
137 237 0
-137 -237 0
c Gate #139: nor (NOR3_11): out = 138, in = 29 129 102 
240 -29 0
240 -129 0
-240 29 129 0
239 -240 0
239 -102 0
-239 240 102 0
138 239 0
-138 -239 0
c Gate #140: nor (NOR2_7): out = 139, in = 32 129 
-139 -32 0
-139 -129 0
139 32 129 0
c Gate #141: nand (NAND2_16): out = 140, in = 122 132 
140 122 0
140 132 0
-140 -122 -132 0
c Gate #142: nand (NAND2_17): out = 141, in = 123 133 
141 123 0
141 133 0
-141 -123 -133 0
c Gate #143: nand (NAND2_19): out = 142, in = 14 137 
142 14 0
142 137 0
-142 -14 -137 0
c Gate #144: nand (NAND2_20): out = 143, in = 15 139 
143 15 0
143 139 0
-143 -15 -139 0
c Gate #145: not (NOT_49): out = 144, in = 127 
144 127 0
-144 -127 0
c Gate #146: and (AND2_4): out = 145, in = 130 68 
-145 130 0
-145 68 0
145 -130 -68 0
c Gate #147: nand (NAND2_6): out = 146, in = 126 108 
146 126 0
146 108 0
-146 -126 -108 0
c Gate #148: nand (NAND2_7): out = 147, in = 119 128 
147 119 0
147 128 0
-147 -119 -128 0
c Gate #149: not (NOT_55): out = 148, in = 131 
148 131 0
-148 -131 0
c Gate #150: not (NOT_56): out = 149, in = 129 
149 129 0
-149 -129 0
c Gate #151: or (OR2_13): out = 150, in = 13 136 
150 -13 0
150 -136 0
-150 13 136 0
c Gate #152: or (OR2_14): out = 151, in = 14 137 
151 -14 0
151 -137 0
-151 14 137 0
c Gate #153: or (OR2_15): out = 152, in = 15 139 
152 -15 0
152 -139 0
-152 15 139 0
c Gate #154: nand (NAND2_11): out = 153, in = 120 146 
153 120 0
153 146 0
-153 -120 -146 0
c Gate #155: nor (NOR3_7): out = 154, in = 105 144 56 
242 -105 0
242 -144 0
-242 105 144 0
241 -242 0
241 -56 0
-241 242 56 0
154 241 0
-154 -241 0
c Gate #156: nor (NOR3_8): out = 155, in = 105 147 56 
244 -105 0
244 -147 0
-244 105 147 0
243 -244 0
243 -56 0
-243 244 56 0
155 243 0
-155 -243 0
c Gate #157: or (OR2_16): out = 156, in = 16 149 
156 -16 0
156 -149 0
-156 16 149 0
c Gate #158: and (AND2_6): out = 157, in = 121 67 
-157 121 0
-157 67 0
157 -121 -67 0
c Gate #159: nand (NAND2_14): out = 158, in = 20 125 
158 20 0
158 125 0
-158 -20 -125 0
c Gate #160: nand (NAND2_15): out = 159, in = 100 146 
159 100 0
159 146 0
-159 -100 -146 0
c Gate #161: nor (NOR3_12): out = 160, in = 114 148 56 
246 -114 0
246 -148 0
-246 114 148 0
245 -246 0
245 -56 0
-245 246 56 0
160 245 0
-160 -245 0
c Gate #162: nor (NOR3_13): out = 161, in = 114 140 56 
248 -114 0
248 -140 0
-248 114 140 0
247 -248 0
247 -56 0
-247 248 56 0
161 247 0
-161 -247 0
c Gate #163: nor (NOR3_14): out = 162, in = 114 141 56 
250 -114 0
250 -141 0
-250 114 141 0
249 -250 0
249 -56 0
-249 250 56 0
162 249 0
-162 -249 0
c Gate #164: nand (NAND2_18): out = 163, in = 158 134 
163 158 0
163 134 0
-163 -158 -134 0
c Gate #165: nand (NAND2_21): out = 164, in = 16 149 
164 16 0
164 149 0
-164 -16 -149 0
c Gate #166: not (NOT_53): out = 165, in = 153 
165 153 0
-165 -153 0
c Gate #167: not (NOT_54): out = 166, in = 153 
166 153 0
-166 -153 0
c Gate #168: nand (NAND2_22): out = 167, in = 142 151 
167 142 0
167 151 0
-167 -142 -151 0
c Gate #169: nand (NAND2_23): out = 168, in = 143 152 
168 143 0
168 152 0
-168 -143 -152 0
c Gate #170: and (AND2_3): out = 169, in = 34 153 
-169 34 0
-169 153 0
169 -34 -153 0
c Gate #171: and (AND2_7): out = 170, in = 159 166 
-170 159 0
-170 166 0
170 -159 -166 0
c Gate #172: nand (NAND2_24): out = 171, in = 164 156 
171 164 0
171 156 0
-171 -164 -156 0
c Gate #173: and (AND2_8): out = 172, in = 93 166 
-172 93 0
-172 166 0
172 -93 -166 0
c Gate #174: not (NOT_57): out = 173, in = 165 
173 165 0
-173 -165 0
c Gate #175: not (NOT_58): out = 174, in = 150 
174 150 0
-174 -150 0
c Gate #176: and (AND2_5): out = 175, in = 34 159 
-175 34 0
-175 159 0
175 -34 -159 0
c Gate #177: nor (NOR3_15): out = 176, in = 114 163 56 
252 -114 0
252 -163 0
-252 114 163 0
251 -252 0
251 -56 0
-251 252 56 0
176 251 0
-176 -251 0
c Gate #178: nor (NOR2_8): out = 177, in = 175 170 
-177 -175 0
-177 -170 0
177 175 170 0
c Gate #179: nor (NOR2_9): out = 178, in = 169 172 
-178 -169 0
-178 -172 0
178 169 172 0
c Gate #180: nor (NOR3_16): out = 179, in = 138 174 56 
254 -138 0
254 -174 0
-254 138 174 0
253 -254 0
253 -56 0
-253 254 56 0
179 253 0
-179 -253 0
c Gate #181: nor (NOR3_17): out = 180, in = 138 167 56 
256 -138 0
256 -167 0
-256 138 167 0
255 -256 0
255 -56 0
-255 256 56 0
180 255 0
-180 -255 0
c Gate #182: nor (NOR3_18): out = 181, in = 138 168 56 
258 -138 0
258 -168 0
-258 138 168 0
257 -258 0
257 -56 0
-257 258 56 0
181 257 0
-181 -257 0
c Gate #183: nor (NOR3_19): out = 182, in = 138 171 56 
260 -138 0
260 -171 0
-260 138 171 0
259 -260 0
259 -56 0
-259 260 56 0
182 259 0
-182 -259 0
c
c Random XOR constraints start here
c
-261 182 179 0
-261 -182 -179 0
261 -182 179 0
261 182 -179 0
261 0
c Rand xor clause 1 with 2 lits
-262 182 179 0
-262 -182 -179 0
262 -182 179 0
262 182 -179 0
262 0
c Rand xor clause 2 with 2 lits
-263 182 179 0
-263 -182 -179 0
263 -182 179 0
263 182 -179 0
263 0
c Rand xor clause 3 with 2 lits
