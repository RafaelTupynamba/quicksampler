p cnf 384 1020
c
c CNF representation of circuit s526n with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 218 Total inputs 24
c
c
p cnf 384 1020
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 0
c
c Gate #26: not (NOT_0): out = 25, in = 1 
25 1 0
-25 -1 0
c Gate #27: not (NOT_1): out = 26, in = 2 
26 2 0
-26 -2 0
c Gate #28: not (NOT_2): out = 27, in = 3 
27 3 0
-27 -3 0
c Gate #29: not (NOT_3): out = 28, in = 4 
28 4 0
-28 -4 0
c Gate #30: not (NOT_4): out = 29, in = 5 
29 5 0
-29 -5 0
c Gate #31: not (NOT_5): out = 30, in = 6 
30 6 0
-30 -6 0
c Gate #32: not (NOT_6): out = 31, in = 6 
31 6 0
-31 -6 0
c Gate #33: not (NOT_7): out = 32, in = 6 
32 6 0
-32 -6 0
c Gate #34: not (NOT_8): out = 33, in = 14 
33 14 0
-33 -14 0
c Gate #35: not (NOT_9): out = 34, in = 14 
34 14 0
-34 -14 0
c Gate #36: not (NOT_10): out = 35, in = 14 
35 14 0
-35 -14 0
c Gate #37: not (NOT_11): out = 36, in = 7 
36 7 0
-36 -7 0
c Gate #38: not (NOT_12): out = 37, in = 7 
37 7 0
-37 -7 0
c Gate #39: not (NOT_13): out = 38, in = 15 
38 15 0
-38 -15 0
c Gate #40: not (NOT_14): out = 39, in = 15 
39 15 0
-39 -15 0
c Gate #41: not (NOT_15): out = 40, in = 15 
40 15 0
-40 -15 0
c Gate #42: not (NOT_16): out = 41, in = 8 
41 8 0
-41 -8 0
c Gate #43: not (NOT_17): out = 42, in = 16 
42 16 0
-42 -16 0
c Gate #44: not (NOT_18): out = 43, in = 24 
43 24 0
-43 -24 0
c Gate #45: not (NOT_19): out = 44, in = 24 
44 24 0
-44 -24 0
c Gate #46: not (NOT_20): out = 45, in = 9 
45 9 0
-45 -9 0
c Gate #47: not (NOT_21): out = 46, in = 17 
46 17 0
-46 -17 0
c Gate #48: not (NOT_22): out = 47, in = 17 
47 17 0
-47 -17 0
c Gate #49: not (NOT_23): out = 48, in = 10 
48 10 0
-48 -10 0
c Gate #50: not (NOT_24): out = 49, in = 18 
49 18 0
-49 -18 0
c Gate #51: not (NOT_25): out = 50, in = 18 
50 18 0
-50 -18 0
c Gate #52: not (NOT_26): out = 51, in = 11 
51 11 0
-51 -11 0
c Gate #53: not (NOT_27): out = 52, in = 19 
52 19 0
-52 -19 0
c Gate #54: not (NOT_28): out = 53, in = 19 
53 19 0
-53 -19 0
c Gate #55: not (NOT_29): out = 54, in = 12 
54 12 0
-54 -12 0
c Gate #56: not (NOT_30): out = 55, in = 12 
55 12 0
-55 -12 0
c Gate #57: not (NOT_31): out = 56, in = 20 
56 20 0
-56 -20 0
c Gate #58: not (NOT_32): out = 57, in = 13 
57 13 0
-57 -13 0
c Gate #59: not (NOT_33): out = 58, in = 21 
58 21 0
-58 -21 0
c Gate #60: not (NOT_34): out = 59, in = 22 
59 22 0
-59 -22 0
c Gate #61: not (NOT_35): out = 60, in = 22 
60 22 0
-60 -22 0
c Gate #62: not (NOT_36): out = 61, in = 23 
61 23 0
-61 -23 0
c Gate #63: not (NOT_37): out = 62, in = 23 
62 23 0
-62 -23 0
c Gate #64: not (NOT_38): out = 63, in = 25 
63 25 0
-63 -25 0
c Gate #65: not (NOT_39): out = 64, in = 26 
64 26 0
-64 -26 0
c Gate #66: not (NOT_40): out = 65, in = 27 
65 27 0
-65 -27 0
c Gate #67: not (NOT_41): out = 66, in = 46 
66 46 0
-66 -46 0
c Gate #68: not (NOT_42): out = 67, in = 49 
67 49 0
-67 -49 0
c Gate #69: not (NOT_43): out = 68, in = 53 
68 53 0
-68 -53 0
c Gate #70: not (NOT_44): out = 69, in = 56 
69 56 0
-69 -56 0
c Gate #71: not (NOT_45): out = 70, in = 57 
70 57 0
-70 -57 0
c Gate #72: not (NOT_46): out = 71, in = 70 
71 70 0
-71 -70 0
c Gate #73: not (NOT_47): out = 72, in = 58 
72 58 0
-72 -58 0
c Gate #74: not (NOT_48): out = 73, in = 60 
73 60 0
-73 -60 0
c Gate #75: not (NOT_49): out = 74, in = 63 
74 63 0
-74 -63 0
c Gate #76: not (NOT_50): out = 75, in = 64 
75 64 0
-75 -64 0
c Gate #77: not (NOT_51): out = 76, in = 65 
76 65 0
-76 -65 0
c Gate #78: not (NOT_52): out = 77, in = 74 
77 74 0
-77 -74 0
c Gate #79: and (AND2_0): out = 78, in = 5 4 
-78 5 0
-78 4 0
78 -5 -4 0
c Gate #80: and (AND3_0): out = 79, in = 8 5 4 
-219 8 0
-219 5 0
219 -8 -5 0
-79 219 0
-79 4 0
79 -219 -4 0
c Gate #81: and (AND3_1): out = 80, in = 20 7 15 
-220 20 0
-220 7 0
220 -20 -7 0
-80 220 0
-80 15 0
80 -220 -15 0
c Gate #82: and (AND2_1): out = 81, in = 29 28 
-81 29 0
-81 28 0
81 -29 -28 0
c Gate #83: and (AND2_2): out = 82, in = 15 30 
-82 15 0
-82 30 0
82 -15 -30 0
c Gate #84: and (AND2_3): out = 83, in = 37 32 
-83 37 0
-83 32 0
83 -37 -32 0
c Gate #85: and (AND2_4): out = 84, in = 6 37 
-84 6 0
-84 37 0
84 -6 -37 0
c Gate #86: and (AND2_5): out = 85, in = 38 6 
-85 38 0
-85 6 0
85 -38 -6 0
c Gate #87: and (AND3_2): out = 86, in = 7 40 35 
-221 7 0
-221 40 0
221 -7 -40 0
-86 221 0
-86 35 0
86 -221 -35 0
c Gate #88: and (AND2_6): out = 87, in = 32 40 
-87 32 0
-87 40 0
87 -32 -40 0
c Gate #89: and (AND4_0): out = 88, in = 9 41 29 4 
-222 9 0
-222 41 0
222 -9 -41 0
-223 222 0
-223 29 0
223 -222 -29 0
-88 223 0
-88 4 0
88 -223 -4 0
c Gate #90: and (AND3_3): out = 89, in = 9 41 4 
-224 9 0
-224 41 0
224 -9 -41 0
-89 224 0
-89 4 0
89 -224 -4 0
c Gate #91: and (AND2_7): out = 90, in = 41 28 
-90 41 0
-90 28 0
90 -41 -28 0
c Gate #92: and (AND2_8): out = 91, in = 41 29 
-91 41 0
-91 29 0
91 -41 -29 0
c Gate #93: and (AND2_10): out = 92, in = 47 7 
-92 47 0
-92 7 0
92 -47 -7 0
c Gate #94: and (AND2_11): out = 93, in = 6 50 
-93 6 0
-93 50 0
93 -6 -50 0
c Gate #95: and (AND2_12): out = 94, in = 12 51 
-94 12 0
-94 51 0
94 -12 -51 0
c Gate #96: and (AND2_13): out = 95, in = 12 51 
-95 12 0
-95 51 0
95 -12 -51 0
c Gate #97: and (AND3_4): out = 96, in = 15 7 52 
-225 15 0
-225 7 0
225 -15 -7 0
-96 225 0
-96 52 0
96 -225 -52 0
c Gate #98: and (AND2_14): out = 97, in = 54 11 
-97 54 0
-97 11 0
97 -54 -11 0
c Gate #99: and (AND2_15): out = 98, in = 57 51 
-98 57 0
-98 51 0
98 -57 -51 0
c Gate #100: and (AND2_16): out = 99, in = 7 59 
-99 7 0
-99 59 0
99 -7 -59 0
c Gate #101: and (AND2_17): out = 100, in = 24 64 
-100 24 0
-100 64 0
100 -24 -64 0
c Gate #102: and (AND2_18): out = 101, in = 23 65 
-101 23 0
-101 65 0
101 -23 -65 0
c Gate #103: and (AND2_23): out = 102, in = 48 74 
-102 48 0
-102 74 0
102 -48 -74 0
c Gate #104: and (AND2_24): out = 103, in = 74 43 
-103 74 0
-103 43 0
103 -74 -43 0
c Gate #105: and (AND3_10): out = 104, in = 11 10 74 
-226 11 0
-226 10 0
226 -11 -10 0
-104 226 0
-104 74 0
104 -226 -74 0
c Gate #106: and (AND2_25): out = 105, in = 12 74 
-105 12 0
-105 74 0
105 -12 -74 0
c Gate #107: and (AND4_4): out = 106, in = 12 11 10 74 
-227 12 0
-227 11 0
227 -12 -11 0
-228 227 0
-228 10 0
228 -227 -10 0
-106 228 0
-106 74 0
106 -228 -74 0
c Gate #108: and (AND2_26): out = 107, in = 13 74 
-107 13 0
-107 74 0
107 -13 -74 0
c Gate #109: and (AND2_27): out = 108, in = 44 75 
-108 44 0
-108 75 0
108 -44 -75 0
c Gate #110: and (AND2_28): out = 109, in = 62 76 
-109 62 0
-109 76 0
109 -62 -76 0
c Gate #111: or (OR2_0): out = 110, in = 7 14 
110 -7 0
110 -14 0
-110 7 14 0
c Gate #112: or (OR2_1): out = 111, in = 6 15 
111 -6 0
111 -15 0
-111 6 15 0
c Gate #113: or (OR2_2): out = 112, in = 11 10 
112 -11 0
112 -10 0
-112 11 10 0
c Gate #114: or (OR3_0): out = 113, in = 8 5 28 
229 -8 0
229 -5 0
-229 8 5 0
113 -229 0
113 -28 0
-113 229 28 0
c Gate #115: or (OR2_3): out = 114, in = 19 32 
114 -19 0
114 -32 0
-114 19 32 0
c Gate #116: or (OR2_4): out = 115, in = 7 32 
115 -7 0
115 -32 0
-115 7 32 0
c Gate #117: or (OR2_5): out = 116, in = 21 32 
116 -21 0
116 -32 0
-116 21 32 0
c Gate #118: or (OR2_6): out = 117, in = 7 32 
117 -7 0
117 -32 0
-117 7 32 0
c Gate #119: or (OR3_1): out = 118, in = 6 15 35 
230 -6 0
230 -15 0
-230 6 15 0
118 -230 0
118 -35 0
-118 230 35 0
c Gate #120: or (OR2_7): out = 119, in = 6 36 
119 -6 0
119 -36 0
-119 6 36 0
c Gate #121: or (OR4_0): out = 120, in = 37 6 15 14 
231 -37 0
231 -6 0
-231 37 6 0
232 -231 0
232 -15 0
-232 231 15 0
120 -232 0
120 -14 0
-120 232 14 0
c Gate #122: or (OR4_1): out = 121, in = 37 6 15 14 
233 -37 0
233 -6 0
-233 37 6 0
234 -233 0
234 -15 0
-234 233 15 0
121 -234 0
121 -14 0
-121 234 14 0
c Gate #123: or (OR2_8): out = 122, in = 21 40 
122 -21 0
122 -40 0
-122 21 40 0
c Gate #124: or (OR3_2): out = 123, in = 7 40 35 
235 -7 0
235 -40 0
-235 7 40 0
123 -235 0
123 -35 0
-123 235 35 0
c Gate #125: or (OR3_3): out = 124, in = 18 37 40 
236 -18 0
236 -37 0
-236 18 37 0
124 -236 0
124 -40 0
-124 236 40 0
c Gate #126: or (OR4_2): out = 125, in = 45 41 29 28 
237 -45 0
237 -41 0
-237 45 41 0
238 -237 0
238 -29 0
-238 237 29 0
125 -238 0
125 -28 0
-125 238 28 0
c Gate #127: or (OR4_3): out = 126, in = 45 8 5 28 
239 -45 0
239 -8 0
-239 45 8 0
240 -239 0
240 -5 0
-240 239 5 0
126 -240 0
126 -28 0
-126 240 28 0
c Gate #128: or (OR3_4): out = 127, in = 51 48 43 
241 -51 0
241 -48 0
-241 51 48 0
127 -241 0
127 -43 0
-127 241 43 0
c Gate #129: or (OR4_4): out = 128, in = 57 12 48 43 
242 -57 0
242 -12 0
-242 57 12 0
243 -242 0
243 -48 0
-243 242 48 0
128 -243 0
128 -43 0
-128 243 43 0
c Gate #130: nand (NAND3_0): out = 129, in = 4 5 8 
-245 4 0
-245 5 0
245 -4 -5 0
-244 245 0
-244 8 0
244 -245 -8 0
129 244 0
-129 -244 0
c Gate #131: nand (NAND4_0): out = 130, in = 13 14 15 30 
-247 13 0
-247 14 0
247 -13 -14 0
-248 247 0
-248 15 0
248 -247 -15 0
-246 248 0
-246 30 0
246 -248 -30 0
130 246 0
-130 -246 0
c Gate #132: nand (NAND4_1): out = 131, in = 14 15 6 36 
-250 14 0
-250 15 0
250 -14 -15 0
-251 250 0
-251 6 0
251 -250 -6 0
-249 251 0
-249 36 0
249 -251 -36 0
131 249 0
-131 -249 0
c Gate #133: nand (NAND4_2): out = 132, in = 4 29 41 9 
-253 4 0
-253 29 0
253 -4 -29 0
-254 253 0
-254 41 0
254 -253 -41 0
-252 254 0
-252 9 0
252 -254 -9 0
132 252 0
-132 -252 0
c Gate #134: nand (NAND2_0): out = 133, in = 10 51 
133 10 0
133 51 0
-133 -10 -51 0
c Gate #135: nand (NAND3_1): out = 134, in = 10 51 54 
-256 10 0
-256 51 0
256 -10 -51 0
-255 256 0
-255 54 0
255 -256 -54 0
134 255 0
-134 -255 0
c Gate #136: nand (NAND4_3): out = 135, in = 10 51 54 13 
-258 10 0
-258 51 0
258 -10 -51 0
-259 258 0
-259 54 0
259 -258 -54 0
-257 259 0
-257 13 0
257 -259 -13 0
135 257 0
-135 -257 0
c Gate #137: nand (NAND4_4): out = 136, in = 54 13 14 38 
-261 54 0
-261 13 0
261 -54 -13 0
-262 261 0
-262 14 0
262 -261 -14 0
-260 262 0
-260 38 0
260 -262 -38 0
136 260 0
-136 -260 0
c Gate #138: nand (NAND4_6): out = 137, in = 7 116 122 118 
-264 7 0
-264 116 0
264 -7 -116 0
-265 264 0
-265 122 0
265 -264 -122 0
-263 265 0
-263 118 0
263 -265 -118 0
137 263 0
-137 -263 0
c Gate #139: nand (NAND2_1): out = 138, in = 43 126 
138 43 0
138 126 0
-138 -43 -126 0
c Gate #140: nand (NAND3_2): out = 139, in = 74 113 125 
-267 74 0
-267 113 0
267 -74 -113 0
-266 267 0
-266 125 0
266 -267 -125 0
139 266 0
-139 -266 0
c Gate #141: nand (NAND4_8): out = 140, in = 74 112 127 128 
-269 74 0
-269 112 0
269 -74 -112 0
-270 269 0
-270 127 0
270 -269 -127 0
-268 270 0
-268 128 0
268 -270 -128 0
140 268 0
-140 -268 0
c Gate #142: nor (NOR2_0): out = 141, in = 31 7 
-141 -31 0
-141 -7 0
141 31 7 0
c Gate #143: nor (NOR4_0): out = 142, in = 28 5 8 45 
272 -28 0
272 -5 0
-272 28 5 0
273 -272 0
273 -8 0
-273 272 8 0
271 -273 0
271 -45 0
-271 273 45 0
142 271 0
-142 -271 0
c Gate #144: nor (NOR2_1): out = 143, in = 45 48 
-143 -45 0
-143 -48 0
143 45 48 0
c Gate #145: nor (NOR3_0): out = 144, in = 8 45 48 
275 -8 0
275 -45 0
-275 8 45 0
274 -275 0
274 -48 0
-274 275 48 0
144 274 0
-144 -274 0
c Gate #146: nor (NOR2_2): out = 145, in = 57 33 
-145 -57 0
-145 -33 0
145 57 33 0
c Gate #147: nor (NOR3_1): out = 146, in = 12 57 33 
277 -12 0
277 -57 0
-277 12 57 0
276 -277 0
276 -33 0
-276 277 33 0
146 276 0
-146 -276 0
c Gate #148: nor (NOR2_3): out = 147, in = 63 4 
-147 -63 0
-147 -4 0
147 63 4 0
c Gate #149: nor (NOR2_4): out = 148, in = 86 80 
-148 -86 0
-148 -80 0
148 86 80 0
c Gate #150: nor (NOR2_5): out = 149, in = 24 88 
-149 -24 0
-149 -88 0
149 24 88 0
c Gate #151: nor (NOR4_1): out = 150, in = 63 81 78 89 
279 -63 0
279 -81 0
-279 63 81 0
280 -279 0
280 -78 0
-280 279 78 0
278 -280 0
278 -89 0
-278 280 89 0
150 278 0
-150 -278 0
c Gate #152: nor (NOR4_2): out = 151, in = 63 91 90 79 
282 -63 0
282 -91 0
-282 63 91 0
283 -282 0
283 -90 0
-283 282 90 0
281 -283 0
281 -79 0
-281 283 79 0
151 281 0
-151 -281 0
c Gate #153: nor (NOR2_6): out = 152, in = 94 98 
-152 -94 0
-152 -98 0
152 94 98 0
c Gate #154: nor (NOR3_2): out = 153, in = 71 95 97 
285 -71 0
285 -95 0
-285 71 95 0
284 -285 0
284 -97 0
-284 285 97 0
153 284 0
-153 -284 0
c Gate #155: nor (NOR2_7): out = 154, in = 103 102 
-154 -103 0
-154 -102 0
154 103 102 0
c Gate #156: nor (NOR2_8): out = 155, in = 105 104 
-155 -105 0
-155 -104 0
155 105 104 0
c Gate #157: nor (NOR2_9): out = 156, in = 107 106 
-156 -107 0
-156 -106 0
156 107 106 0
c Gate #158: nor (NOR3_4): out = 157, in = 63 100 108 
287 -63 0
287 -100 0
-287 63 100 0
286 -287 0
286 -108 0
-286 287 108 0
157 286 0
-157 -286 0
c Gate #159: nor (NOR3_5): out = 158, in = 63 101 109 
289 -63 0
289 -101 0
-289 63 101 0
288 -289 0
288 -109 0
-288 289 109 0
158 288 0
-158 -288 0
c Gate #160: and (AND4_8): out = 159, in = 153 144 4 29 
-290 153 0
-290 144 0
290 -153 -144 0
-291 290 0
-291 4 0
291 -290 -4 0
-159 291 0
-159 29 0
159 -291 -29 0
c Gate #161: and (AND3_11): out = 160, in = 153 24 10 
-292 153 0
-292 24 0
292 -153 -24 0
-160 292 0
-160 10 0
160 -292 -10 0
c Gate #162: and (AND3_6): out = 161, in = 132 43 51 
-293 132 0
-293 43 0
293 -132 -43 0
-161 293 0
-161 51 0
161 -293 -51 0
c Gate #163: and (AND3_7): out = 162, in = 132 43 54 
-294 132 0
-294 43 0
294 -132 -43 0
-162 294 0
-162 54 0
162 -294 -54 0
c Gate #164: and (AND3_8): out = 163, in = 132 43 57 
-295 132 0
-295 43 0
295 -132 -43 0
-163 295 0
-163 57 0
163 -295 -57 0
c Gate #165: nand (NAND4_5): out = 164, in = 141 23 34 39 
-297 141 0
-297 23 0
297 -141 -23 0
-298 297 0
-298 34 0
298 -297 -34 0
-296 298 0
-296 39 0
296 -298 -39 0
164 296 0
-164 -296 0
c Gate #166: and (AND3_9): out = 165, in = 132 43 33 
-299 132 0
-299 43 0
299 -132 -43 0
-165 299 0
-165 33 0
165 -299 -33 0
c Gate #167: and (AND4_3): out = 166, in = 143 4 29 41 
-300 143 0
-300 4 0
300 -143 -4 0
-301 300 0
-301 29 0
301 -300 -29 0
-166 301 0
-166 41 0
166 -301 -41 0
c Gate #168: nand (NAND4_7): out = 167, in = 145 10 51 54 
-303 145 0
-303 10 0
303 -145 -10 0
-304 303 0
-304 51 0
304 -303 -51 0
-302 304 0
-302 54 0
302 -304 -54 0
167 302 0
-167 -302 0
c Gate #169: and (AND2_22): out = 168, in = 135 33 
-168 135 0
-168 33 0
168 -135 -33 0
c Gate #170: and (AND2_9): out = 169, in = 129 45 
-169 129 0
-169 45 0
169 -129 -45 0
c Gate #171: and (AND4_1): out = 170, in = 141 61 14 39 
-305 141 0
-305 61 0
305 -141 -61 0
-306 305 0
-306 14 0
306 -305 -14 0
-170 306 0
-170 39 0
170 -306 -39 0
c Gate #172: and (AND4_2): out = 171, in = 141 61 14 39 
-307 141 0
-307 61 0
307 -141 -61 0
-308 307 0
-308 14 0
308 -307 -14 0
-171 308 0
-171 39 0
171 -308 -39 0
c Gate #173: and (AND2_19): out = 172, in = 132 43 
-172 132 0
-172 43 0
172 -132 -43 0
c Gate #174: and (AND2_20): out = 173, in = 132 43 
-173 132 0
-173 43 0
173 -132 -43 0
c Gate #175: and (AND2_21): out = 174, in = 132 43 
-174 132 0
-174 43 0
174 -132 -43 0
c Gate #176: and (AND3_5): out = 175, in = 132 43 48 
-309 132 0
-309 43 0
309 -132 -43 0
-175 309 0
-175 48 0
175 -309 -48 0
c Gate #177: and (AND2_29): out = 176, in = 164 42 
-176 164 0
-176 42 0
176 -164 -42 0
c Gate #178: and (AND2_30): out = 177, in = 164 42 
-177 164 0
-177 42 0
177 -164 -42 0
c Gate #179: and (AND4_5): out = 178, in = 138 10 11 12 
-310 138 0
-310 10 0
310 -138 -10 0
-311 310 0
-311 11 0
311 -310 -11 0
-178 311 0
-178 12 0
178 -311 -12 0
c Gate #180: and (AND4_6): out = 179, in = 138 146 10 51 
-312 138 0
-312 146 0
312 -138 -146 0
-313 312 0
-313 10 0
313 -312 -10 0
-179 313 0
-179 51 0
179 -313 -51 0
c Gate #181: and (AND4_7): out = 180, in = 152 144 4 29 
-314 152 0
-314 144 0
314 -152 -144 0
-315 314 0
-315 4 0
315 -314 -4 0
-180 315 0
-180 29 0
180 -315 -29 0
c Gate #182: or (OR2_9): out = 181, in = 142 24 
181 -142 0
181 -24 0
-181 142 24 0
c Gate #183: nor (NOR3_3): out = 182, in = 135 33 172 
317 -135 0
317 -33 0
-317 135 33 0
316 -317 0
316 -172 0
-316 317 172 0
182 316 0
-182 -316 0
c Gate #184: nor (NOR4_3): out = 183, in = 135 33 38 173 
319 -135 0
319 -33 0
-319 135 33 0
320 -319 0
320 -38 0
-320 319 38 0
318 -320 0
318 -173 0
-318 320 173 0
183 318 0
-183 -318 0
c Gate #185: nor (NOR4_4): out = 184, in = 167 85 82 174 
322 -167 0
322 -85 0
-322 167 85 0
323 -322 0
323 -82 0
-323 322 82 0
321 -323 0
321 -174 0
-321 323 174 0
184 321 0
-184 -321 0
c Gate #186: or (OR4_5): out = 185, in = 149 130 134 63 
324 -149 0
324 -130 0
-324 149 130 0
325 -324 0
325 -134 0
-325 324 134 0
185 -325 0
185 -63 0
-185 325 63 0
c Gate #187: or (OR4_6): out = 186, in = 149 131 135 63 
326 -149 0
326 -131 0
-326 149 131 0
327 -326 0
327 -135 0
-327 326 135 0
186 -327 0
186 -63 0
-186 327 63 0
c Gate #188: or (OR3_5): out = 187, in = 182 63 38 
328 -182 0
328 -63 0
-328 182 63 0
187 -328 0
187 -38 0
-187 328 38 0
c Gate #189: nor (NOR2_10): out = 188, in = 139 169 
-188 -139 0
-188 -169 0
188 139 169 0
c Gate #190: or (OR3_6): out = 189, in = 183 63 30 
329 -183 0
329 -63 0
-329 183 63 0
189 -329 0
189 -30 0
-189 329 30 0
c Gate #191: nor (NOR3_6): out = 190, in = 63 176 170 
331 -63 0
331 -176 0
-331 63 176 0
330 -331 0
330 -170 0
-330 331 170 0
190 330 0
-190 -330 0
c Gate #192: nor (NOR2_11): out = 191, in = 177 171 
-191 -177 0
-191 -171 0
191 177 171 0
c Gate #193: nor (NOR4_5): out = 192, in = 77 168 165 179 
333 -77 0
333 -168 0
-333 77 168 0
334 -333 0
334 -165 0
-334 333 165 0
332 -334 0
332 -179 0
-332 334 179 0
192 332 0
-192 -332 0
c Gate #194: nor (NOR3_7): out = 193, in = 140 161 180 
336 -140 0
336 -161 0
-336 140 161 0
335 -336 0
335 -180 0
-335 336 180 0
193 335 0
-193 -335 0
c Gate #195: nor (NOR3_8): out = 194, in = 154 175 166 
338 -154 0
338 -175 0
-338 154 175 0
337 -338 0
337 -166 0
-337 338 166 0
194 337 0
-194 -337 0
c Gate #196: nor (NOR3_9): out = 195, in = 155 162 178 
340 -155 0
340 -162 0
-340 155 162 0
339 -340 0
339 -178 0
-339 340 178 0
195 339 0
-195 -339 0
c Gate #197: nor (NOR4_6): out = 196, in = 156 160 163 159 
342 -156 0
342 -160 0
-342 156 160 0
343 -342 0
343 -163 0
-343 342 163 0
341 -343 0
341 -159 0
-341 343 159 0
196 341 0
-196 -341 0
c Gate #198: nor (NOR4_7): out = 197, in = 191 87 83 92 
345 -191 0
345 -87 0
-345 191 87 0
346 -345 0
346 -83 0
-346 345 83 0
344 -346 0
344 -92 0
-344 346 92 0
197 344 0
-197 -344 0
c Gate #199: or (OR4_8): out = 198, in = 20 37 32 191 
347 -20 0
347 -37 0
-347 20 37 0
348 -347 0
348 -32 0
-348 347 32 0
198 -348 0
198 -191 0
-198 348 191 0
c Gate #200: and (AND2_31): out = 199, in = 191 12 
-199 191 0
-199 12 0
199 -191 -12 0
c Gate #201: or (OR3_7): out = 200, in = 184 63 36 
349 -184 0
349 -63 0
-349 184 63 0
200 -349 0
200 -36 0
-200 349 36 0
c Gate #202: not (NOT_53): out = 201, in = 191 
201 191 0
-201 -191 0
c Gate #203: nand (NAND2_2): out = 202, in = 119 181 
202 119 0
202 181 0
-202 -119 -181 0
c Gate #204: nand (NAND2_3): out = 203, in = 189 185 
203 189 0
203 185 0
-203 -189 -185 0
c Gate #205: nand (NAND2_5): out = 204, in = 200 186 
204 200 0
204 186 0
-204 -200 -186 0
c Gate #206: nand (NAND4_9): out = 205, in = 201 124 123 121 
-351 201 0
-351 124 0
351 -201 -124 0
-352 351 0
-352 123 0
352 -351 -123 0
-350 352 0
-350 121 0
350 -352 -121 0
205 350 0
-205 -350 0
c Gate #207: nand (NAND4_10): out = 206, in = 201 115 114 120 
-354 201 0
-354 115 0
354 -201 -115 0
-355 354 0
-355 114 0
355 -354 -114 0
-353 355 0
-353 120 0
353 -355 -120 0
206 353 0
-206 -353 0
c Gate #208: nand (NAND4_11): out = 207, in = 201 111 110 117 
-357 201 0
-357 111 0
357 -201 -111 0
-358 357 0
-358 110 0
358 -357 -110 0
-356 358 0
-356 117 0
356 -358 -117 0
207 356 0
-207 -356 0
c Gate #209: nor (NOR3_10): out = 208, in = 205 84 93 
360 -205 0
360 -84 0
-360 205 84 0
359 -360 0
359 -93 0
-359 360 93 0
208 359 0
-208 -359 0
c Gate #210: nor (NOR2_12): out = 209, in = 206 96 
-209 -206 0
-209 -96 0
209 206 96 0
c Gate #211: nor (NOR2_14): out = 210, in = 207 99 
-210 -207 0
-210 -99 0
210 207 99 0
c Gate #212: or (OR4_7): out = 211, in = 202 136 133 63 
361 -202 0
361 -136 0
-361 202 136 0
362 -361 0
362 -133 0
-362 361 133 0
211 -362 0
211 -63 0
-211 362 63 0
c Gate #213: and (AND3_12): out = 212, in = 148 201 32 
-363 148 0
-363 201 0
363 -148 -201 0
-212 363 0
-212 32 0
212 -363 -32 0
c Gate #214: and (AND2_32): out = 213, in = 137 201 
-213 137 0
-213 201 0
213 -137 -201 0
c Gate #215: or (OR2_10): out = 214, in = 55 201 
214 -55 0
214 -201 0
-214 55 201 0
c Gate #216: nand (NAND2_4): out = 215, in = 187 211 
215 187 0
215 211 0
-215 -187 -211 0
c Gate #217: nor (NOR2_13): out = 216, in = 199 213 
-216 -199 0
-216 -213 0
216 199 213 0
c Gate #218: nand (NAND2_6): out = 217, in = 214 198 
217 214 0
217 198 0
-217 -214 -198 0
c Gate #219: nor (NOR2_15): out = 218, in = 217 212 
-218 -217 0
-218 -212 0
218 217 212 0
c
c Random XOR constraints start here
c
-364 218 197 0
-364 -218 -197 0
364 -218 197 0
364 218 -197 0
-365 364 192 0
-365 -364 -192 0
365 -364 192 0
365 364 -192 0
-366 365 158 0
-366 -365 -158 0
366 -365 158 0
366 365 -158 0
366 0
c Rand xor clause 1 with 4 lits
-367 218 197 0
-367 -218 -197 0
367 -218 197 0
367 218 -197 0
-368 367 192 0
-368 -367 -192 0
368 -367 192 0
368 367 -192 0
-369 368 158 0
-369 -368 -158 0
369 -368 158 0
369 368 -158 0
369 0
c Rand xor clause 2 with 4 lits
-370 218 197 0
-370 -218 -197 0
370 -218 197 0
370 218 -197 0
-371 370 192 0
-371 -370 -192 0
371 -370 192 0
371 370 -192 0
-372 371 158 0
-372 -371 -158 0
372 -371 158 0
372 371 -158 0
372 0
c Rand xor clause 3 with 4 lits
-373 218 197 0
-373 -218 -197 0
373 -218 197 0
373 218 -197 0
-374 373 192 0
-374 -373 -192 0
374 -373 192 0
374 373 -192 0
-375 374 158 0
-375 -374 -158 0
375 -374 158 0
375 374 -158 0
375 0
c Rand xor clause 4 with 4 lits
-376 218 197 0
-376 -218 -197 0
376 -218 197 0
376 218 -197 0
-377 376 192 0
-377 -376 -192 0
377 -376 192 0
377 376 -192 0
-378 377 158 0
-378 -377 -158 0
378 -377 158 0
378 377 -158 0
378 0
c Rand xor clause 5 with 4 lits
-379 218 197 0
-379 -218 -197 0
379 -218 197 0
379 218 -197 0
-380 379 192 0
-380 -379 -192 0
380 -379 192 0
380 379 -192 0
-381 380 158 0
-381 -380 -158 0
381 -380 158 0
381 380 -158 0
381 0
c Rand xor clause 6 with 4 lits
-382 218 197 0
-382 -218 -197 0
382 -218 197 0
382 218 -197 0
-383 382 192 0
-383 -382 -192 0
383 -382 192 0
383 382 -192 0
-384 383 158 0
-384 -383 -158 0
384 -383 158 0
384 383 -158 0
384 0
c Rand xor clause 7 with 4 lits
