p cnf 216 545
c
c CNF representation of circuit s349 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 185 Total inputs 24
c
c
p cnf 216 545
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 18 19 20 0
c ind 21 22 23 24 0
c
c Gate #26: not (NOT_1): out = 25, in = 11 
25 11 0
-25 -11 0
c Gate #27: not (NOT_2): out = 26, in = 10 
26 10 0
-26 -10 0
c Gate #28: not (NOT_3): out = 27, in = 11 
27 11 0
-27 -11 0
c Gate #29: not (NOT_5): out = 28, in = 12 
28 12 0
-28 -12 0
c Gate #30: not (NOT_6): out = 29, in = 12 
29 12 0
-29 -12 0
c Gate #31: not (NOT_20): out = 30, in = 1 
30 1 0
-30 -1 0
c Gate #32: not (NOT_21): out = 31, in = 13 
31 13 0
-31 -13 0
c Gate #33: not (NOT_22): out = 32, in = 14 
32 14 0
-32 -14 0
c Gate #34: not (NOT_23): out = 33, in = 15 
33 15 0
-33 -15 0
c Gate #35: not (NOT_24): out = 34, in = 16 
34 16 0
-34 -16 0
c Gate #36: not (NOT_35): out = 35, in = 17 
35 17 0
-35 -17 0
c Gate #37: not (NOT_36): out = 36, in = 18 
36 18 0
-36 -18 0
c Gate #38: not (NOT_37): out = 37, in = 19 
37 19 0
-37 -19 0
c Gate #39: not (NOT_38): out = 38, in = 20 
38 20 0
-38 -20 0
c Gate #40: nand (NAND3_0): out = 39, in = 10 25 12 
-187 10 0
-187 25 0
187 -10 -25 0
-186 187 0
-186 12 0
186 -187 -12 0
39 186 0
-39 -186 0
c Gate #41: nand (NAND2_10): out = 40, in = 24 38 
40 24 0
40 38 0
-40 -24 -38 0
c Gate #42: nand (NAND2_11): out = 41, in = 23 38 
41 23 0
41 38 0
-41 -23 -38 0
c Gate #43: nand (NAND2_12): out = 42, in = 22 38 
42 22 0
42 38 0
-42 -22 -38 0
c Gate #44: nand (NAND2_13): out = 43, in = 21 38 
43 21 0
43 38 0
-43 -21 -38 0
c Gate #45: nor (NOR3_0): out = 44, in = 10 11 12 
189 -10 0
189 -11 0
-189 10 11 0
188 -189 0
188 -12 0
-188 189 12 0
44 188 0
-44 -188 0
c Gate #46: nor (NOR2_4): out = 45, in = 28 27 
-45 -28 0
-45 -27 0
45 28 27 0
c Gate #47: not (NOT_4): out = 46, in = 29 
46 29 0
-46 -29 0
c Gate #48: not (NOT_47): out = 47, in = 39 
47 39 0
-47 -39 0
c Gate #49: not (NOT_56): out = 48, in = 44 
48 44 0
-48 -44 0
c Gate #50: and (AND2_26): out = 49, in = 35 47 
-49 35 0
-49 47 0
49 -35 -47 0
c Gate #51: and (AND2_28): out = 50, in = 36 47 
-50 36 0
-50 47 0
50 -36 -47 0
c Gate #52: and (AND2_30): out = 51, in = 37 47 
-51 37 0
-51 47 0
51 -37 -47 0
c Gate #53: and (AND2_32): out = 52, in = 38 47 
-52 38 0
-52 47 0
52 -38 -47 0
c Gate #54: and (AND2_34): out = 53, in = 21 48 
-53 21 0
-53 48 0
53 -21 -48 0
c Gate #55: and (AND2_36): out = 54, in = 22 48 
-54 22 0
-54 48 0
54 -22 -48 0
c Gate #56: and (AND2_38): out = 55, in = 23 48 
-55 23 0
-55 48 0
55 -23 -48 0
c Gate #57: and (AND2_40): out = 56, in = 24 48 
-56 24 0
-56 48 0
56 -24 -48 0
c Gate #58: nand (NAND2_0): out = 57, in = 45 10 
57 45 0
57 10 0
-57 -45 -10 0
c Gate #59: nand (NAND2_3): out = 58, in = 46 11 
58 46 0
58 11 0
-58 -46 -11 0
c Gate #60: not (NOT_16): out = 59, in = 40 
59 40 0
-59 -40 0
c Gate #61: not (NOT_17): out = 60, in = 41 
60 41 0
-60 -41 0
c Gate #62: not (NOT_18): out = 61, in = 42 
61 42 0
-61 -42 0
c Gate #63: not (NOT_19): out = 62, in = 43 
62 43 0
-62 -43 0
c Gate #64: nor (NOR2_1): out = 63, in = 58 26 
-63 -58 0
-63 -26 0
63 58 26 0
c Gate #65: not (NOT_0): out = 64, in = 39 
64 39 0
-64 -39 0
c Gate #66: nor (NOR2_6): out = 65, in = 28 64 
-65 -28 0
-65 -64 0
65 28 64 0
c Gate #67: not (NOT_41): out = 66, in = 47 
66 47 0
-66 -47 0
c Gate #68: not (NOT_43): out = 67, in = 47 
67 47 0
-67 -47 0
c Gate #69: not (NOT_45): out = 68, in = 47 
68 47 0
-68 -47 0
c Gate #70: not (NOT_7): out = 69, in = 64 
69 64 0
-69 -64 0
c Gate #71: not (NOT_48): out = 70, in = 48 
70 48 0
-70 -48 0
c Gate #72: not (NOT_50): out = 71, in = 48 
71 48 0
-71 -48 0
c Gate #73: not (NOT_52): out = 72, in = 48 
72 48 0
-72 -48 0
c Gate #74: not (NOT_54): out = 73, in = 48 
73 48 0
-73 -48 0
c Gate #75: and (AND2_2): out = 74, in = 31 62 
-74 31 0
-74 62 0
74 -31 -62 0
c Gate #76: and (AND2_5): out = 75, in = 32 61 
-75 32 0
-75 61 0
75 -32 -61 0
c Gate #77: and (AND2_8): out = 76, in = 33 60 
-76 33 0
-76 60 0
76 -33 -60 0
c Gate #78: and (AND2_27): out = 77, in = 4 66 
-77 4 0
-77 66 0
77 -4 -66 0
c Gate #79: and (AND2_29): out = 78, in = 3 67 
-78 3 0
-78 67 0
78 -3 -67 0
c Gate #80: and (AND2_31): out = 79, in = 2 68 
-79 2 0
-79 68 0
79 -2 -68 0
c Gate #81: and (AND2_33): out = 80, in = 9 70 
-80 9 0
-80 70 0
80 -9 -70 0
c Gate #82: and (AND2_35): out = 81, in = 8 71 
-81 8 0
-81 71 0
81 -8 -71 0
c Gate #83: and (AND2_37): out = 82, in = 7 72 
-82 7 0
-82 72 0
82 -7 -72 0
c Gate #84: and (AND2_39): out = 83, in = 6 73 
-83 6 0
-83 73 0
83 -6 -73 0
c Gate #85: or (OR2_1): out = 84, in = 65 11 
84 -65 0
84 -11 0
-84 65 11 0
c Gate #86: or (OR2_2): out = 85, in = 69 12 
85 -69 0
85 -12 0
-85 69 12 0
c Gate #87: or (OR2_3): out = 86, in = 31 62 
86 -31 0
86 -62 0
-86 31 62 0
c Gate #88: or (OR2_4): out = 87, in = 32 61 
87 -32 0
87 -61 0
-87 32 61 0
c Gate #89: or (OR2_5): out = 88, in = 33 60 
88 -33 0
88 -60 0
-88 33 60 0
c Gate #90: or (OR2_6): out = 89, in = 34 59 
89 -34 0
89 -59 0
-89 34 59 0
c Gate #91: nand (NAND2_5): out = 90, in = 65 11 
90 65 0
90 11 0
-90 -65 -11 0
c Gate #92: nand (NAND2_7): out = 91, in = 69 12 
91 69 0
91 12 0
-91 -69 -12 0
c Gate #93: nand (NAND2_9): out = 92, in = 34 59 
92 34 0
92 59 0
-92 -34 -59 0
c Gate #94: nor (NOR2_0): out = 93, in = 44 64 
-93 -44 0
-93 -64 0
93 44 64 0
c Gate #95: nor (NOR2_3): out = 94, in = 58 64 
-94 -58 0
-94 -64 0
94 58 64 0
c Gate #96: not (NOT_39): out = 95, in = 47 
95 47 0
-95 -47 0
c Gate #97: nor (NOR2_23): out = 96, in = 50 77 
-96 -50 0
-96 -77 0
96 50 77 0
c Gate #98: nor (NOR2_24): out = 97, in = 51 78 
-97 -51 0
-97 -78 0
97 51 78 0
c Gate #99: nor (NOR2_25): out = 98, in = 52 79 
-98 -52 0
-98 -79 0
98 52 79 0
c Gate #100: nor (NOR2_26): out = 99, in = 53 80 
-99 -53 0
-99 -80 0
99 53 80 0
c Gate #101: nor (NOR2_27): out = 100, in = 54 81 
-100 -54 0
-100 -81 0
100 54 81 0
c Gate #102: nor (NOR2_28): out = 101, in = 55 82 
-101 -55 0
-101 -82 0
101 55 82 0
c Gate #103: nor (NOR2_29): out = 102, in = 56 83 
-102 -56 0
-102 -83 0
102 56 83 0
c Gate #104: and (AND2_20): out = 103, in = 35 93 
-103 35 0
-103 93 0
103 -35 -93 0
c Gate #105: and (AND2_22): out = 104, in = 36 93 
-104 36 0
-104 93 0
104 -36 -93 0
c Gate #106: and (AND2_24): out = 105, in = 37 93 
-105 37 0
-105 93 0
105 -37 -93 0
c Gate #107: and (AND2_25): out = 106, in = 5 95 
-106 5 0
-106 95 0
106 -5 -95 0
c Gate #108: not (NOT_44): out = 107, in = 97 
107 97 0
-107 -97 0
c Gate #109: not (NOT_53): out = 108, in = 101 
108 101 0
-108 -101 0
c Gate #110: not (NOT_42): out = 109, in = 96 
109 96 0
-109 -96 0
c Gate #111: not (NOT_55): out = 110, in = 102 
110 102 0
-110 -102 0
c Gate #112: or (OR2_0): out = 111, in = 94 10 
111 -94 0
111 -10 0
-111 94 10 0
c Gate #113: not (NOT_49): out = 112, in = 99 
112 99 0
-112 -99 0
c Gate #114: not (NOT_46): out = 113, in = 98 
113 98 0
-113 -98 0
c Gate #115: not (NOT_14): out = 114, in = 92 
114 92 0
-114 -92 0
c Gate #116: nand (NAND2_2): out = 115, in = 94 10 
115 94 0
115 10 0
-115 -94 -10 0
c Gate #117: not (NOT_33): out = 116, in = 93 
116 93 0
-116 -93 0
c Gate #118: nand (NAND2_4): out = 117, in = 90 84 
117 90 0
117 84 0
-117 -90 -84 0
c Gate #119: and (AND3_2): out = 118, in = 33 60 114 
-190 33 0
-190 60 0
190 -33 -60 0
-118 190 0
-118 114 0
118 -190 -114 0
c Gate #120: nand (NAND2_6): out = 119, in = 91 85 
119 91 0
119 85 0
-119 -91 -85 0
c Gate #121: nand (NAND2_8): out = 120, in = 92 89 
120 92 0
120 89 0
-120 -92 -89 0
c Gate #122: and (AND2_7): out = 121, in = 88 114 
-121 88 0
-121 114 0
121 -88 -114 0
c Gate #123: not (NOT_15): out = 122, in = 120 
122 120 0
-122 -120 0
c Gate #124: not (NOT_34): out = 123, in = 93 
123 93 0
-123 -93 0
c Gate #125: not (NOT_51): out = 124, in = 100 
124 100 0
-124 -100 0
c Gate #126: and (AND2_10): out = 125, in = 31 116 
-125 31 0
-125 116 0
125 -31 -116 0
c Gate #127: nor (NOR2_5): out = 126, in = 1 117 
-126 -1 0
-126 -117 0
126 1 117 0
c Gate #128: nor (NOR2_7): out = 127, in = 1 119 
-127 -1 0
-127 -119 0
127 1 119 0
c Gate #129: nor (NOR2_13): out = 128, in = 76 121 
-128 -76 0
-128 -121 0
128 76 121 0
c Gate #130: nor (NOR2_22): out = 129, in = 49 106 
-129 -49 0
-129 -106 0
129 49 106 0
c Gate #131: and (AND2_12): out = 130, in = 32 116 
-130 32 0
-130 116 0
130 -32 -116 0
c Gate #132: and (AND2_14): out = 131, in = 33 116 
-131 33 0
-131 116 0
131 -33 -116 0
c Gate #133: and (AND2_16): out = 132, in = 34 116 
-132 34 0
-132 116 0
132 -34 -116 0
c Gate #134: or (OR3_2): out = 133, in = 33 60 114 
191 -33 0
191 -60 0
-191 33 60 0
133 -191 0
133 -114 0
-133 191 114 0
c Gate #135: not (NOT_25): out = 134, in = 116 
134 116 0
-134 -116 0
c Gate #136: and (AND2_23): out = 135, in = 113 123 
-135 113 0
-135 123 0
135 -113 -123 0
c Gate #137: nand (NAND2_1): out = 136, in = 115 111 
136 115 0
136 111 0
-136 -115 -111 0
c Gate #138: and (AND2_18): out = 137, in = 122 93 
-137 122 0
-137 93 0
137 -122 -93 0
c Gate #139: not (NOT_27): out = 138, in = 116 
138 116 0
-138 -116 0
c Gate #140: and (AND2_21): out = 139, in = 107 123 
-139 107 0
-139 123 0
139 -107 -123 0
c Gate #141: and (AND2_6): out = 140, in = 128 133 
-140 128 0
-140 133 0
140 -128 -133 0
c Gate #142: not (NOT_29): out = 141, in = 116 
141 116 0
-141 -116 0
c Gate #143: not (NOT_13): out = 142, in = 128 
142 128 0
-142 -128 0
c Gate #144: nor (NOR2_2): out = 143, in = 1 136 
-143 -1 0
-143 -136 0
143 1 136 0
c Gate #145: not (NOT_31): out = 144, in = 116 
144 116 0
-144 -116 0
c Gate #146: not (NOT_40): out = 145, in = 129 
145 129 0
-145 -129 0
c Gate #147: nor (NOR2_12): out = 146, in = 140 118 
-146 -140 0
-146 -118 0
146 140 118 0
c Gate #148: and (AND2_19): out = 147, in = 109 123 
-147 109 0
-147 123 0
147 -109 -123 0
c Gate #149: nor (NOR2_19): out = 148, in = 103 147 
-148 -103 0
-148 -147 0
148 103 147 0
c Gate #150: nor (NOR2_20): out = 149, in = 104 139 
-149 -104 0
-149 -139 0
149 104 139 0
c Gate #151: nor (NOR2_21): out = 150, in = 105 135 
-150 -105 0
-150 -135 0
150 105 135 0
c Gate #152: and (AND3_1): out = 151, in = 32 61 142 
-192 32 0
-192 61 0
192 -32 -61 0
-151 192 0
-151 142 0
151 -192 -142 0
c Gate #153: or (OR3_1): out = 152, in = 32 61 142 
193 -32 0
193 -61 0
-193 32 61 0
152 -193 0
152 -142 0
-152 193 142 0
c Gate #154: and (AND2_17): out = 153, in = 145 123 
-153 145 0
-153 123 0
153 -145 -123 0
c Gate #155: not (NOT_12): out = 154, in = 146 
154 146 0
-154 -146 0
c Gate #156: and (AND2_4): out = 155, in = 87 142 
-155 87 0
-155 142 0
155 -87 -142 0
c Gate #157: nor (NOR2_18): out = 156, in = 137 153 
-156 -137 0
-156 -153 0
156 137 153 0
c Gate #158: and (AND2_15): out = 157, in = 154 144 
-157 154 0
-157 144 0
157 -154 -144 0
c Gate #159: nor (NOR2_11): out = 158, in = 75 155 
-158 -75 0
-158 -155 0
158 75 155 0
c Gate #160: nor (NOR2_17): out = 159, in = 132 157 
-159 -132 0
-159 -157 0
159 132 157 0
c Gate #161: not (NOT_11): out = 160, in = 158 
160 158 0
-160 -158 0
c Gate #162: or (OR3_0): out = 161, in = 31 62 160 
194 -31 0
194 -62 0
-194 31 62 0
161 -194 0
161 -160 0
-161 194 160 0
c Gate #163: and (AND2_3): out = 162, in = 158 152 
-162 158 0
-162 152 0
162 -158 -152 0
c Gate #164: and (AND2_1): out = 163, in = 86 160 
-163 86 0
-163 160 0
163 -86 -160 0
c Gate #165: nor (NOR2_9): out = 164, in = 74 163 
-164 -74 0
-164 -163 0
164 74 163 0
c Gate #166: nor (NOR2_10): out = 165, in = 162 151 
-165 -162 0
-165 -151 0
165 162 151 0
c Gate #167: and (AND2_0): out = 166, in = 164 161 
-166 164 0
-166 161 0
166 -164 -161 0
c Gate #168: and (AND3_0): out = 167, in = 31 62 160 
-195 31 0
-195 62 0
195 -31 -62 0
-167 195 0
-167 160 0
167 -195 -160 0
c Gate #169: not (NOT_10): out = 168, in = 165 
168 165 0
-168 -165 0
c Gate #170: not (NOT_32): out = 169, in = 159 
169 159 0
-169 -159 0
c Gate #171: not (NOT_9): out = 170, in = 164 
170 164 0
-170 -164 0
c Gate #172: and (AND2_13): out = 171, in = 168 141 
-171 168 0
-171 141 0
171 -168 -141 0
c Gate #173: nor (NOR2_16): out = 172, in = 131 171 
-172 -131 0
-172 -171 0
172 131 171 0
c Gate #174: and (AND2_9): out = 173, in = 170 134 
-173 170 0
-173 134 0
173 -170 -134 0
c Gate #175: nand (NAND2_17): out = 174, in = 169 30 
174 169 0
174 30 0
-174 -169 -30 0
c Gate #176: not (NOT_30): out = 175, in = 172 
175 172 0
-175 -172 0
c Gate #177: nor (NOR2_8): out = 176, in = 166 167 
-176 -166 0
-176 -167 0
176 166 167 0
c Gate #178: nor (NOR2_14): out = 177, in = 125 173 
-177 -125 0
-177 -173 0
177 125 173 0
c Gate #179: not (NOT_26): out = 178, in = 177 
178 177 0
-178 -177 0
c Gate #180: not (NOT_8): out = 179, in = 176 
179 176 0
-179 -176 0
c Gate #181: nand (NAND2_16): out = 180, in = 175 30 
180 175 0
180 30 0
-180 -175 -30 0
c Gate #182: and (AND2_11): out = 181, in = 179 138 
-181 179 0
-181 138 0
181 -179 -138 0
c Gate #183: nand (NAND2_14): out = 182, in = 178 30 
182 178 0
182 30 0
-182 -178 -30 0
c Gate #184: nor (NOR2_15): out = 183, in = 130 181 
-183 -130 0
-183 -181 0
183 130 181 0
c Gate #185: not (NOT_28): out = 184, in = 183 
184 183 0
-184 -183 0
c Gate #186: nand (NAND2_15): out = 185, in = 184 30 
185 184 0
185 30 0
-185 -184 -30 0
c
c Random XOR constraints start here
c
-196 150 126 0
-196 -150 -126 0
196 -150 126 0
196 150 -126 0
-197 196 185 0
-197 -196 -185 0
197 -196 185 0
197 196 -185 0
-198 197 57 0
-198 -197 -57 0
198 -197 57 0
198 197 -57 0
198 0
c Rand xor clause 1 with 4 lits
-199 150 126 0
-199 -150 -126 0
199 -150 126 0
199 150 -126 0
-200 199 185 0
-200 -199 -185 0
200 -199 185 0
200 199 -185 0
-201 200 57 0
-201 -200 -57 0
201 -200 57 0
201 200 -57 0
201 0
c Rand xor clause 2 with 4 lits
-202 150 126 0
-202 -150 -126 0
202 -150 126 0
202 150 -126 0
-203 202 185 0
-203 -202 -185 0
203 -202 185 0
203 202 -185 0
-204 203 57 0
-204 -203 -57 0
204 -203 57 0
204 203 -57 0
204 0
c Rand xor clause 3 with 4 lits
-205 150 126 0
-205 -150 -126 0
205 -150 126 0
205 150 -126 0
-206 205 185 0
-206 -205 -185 0
206 -205 185 0
206 205 -185 0
-207 206 57 0
-207 -206 -57 0
207 -206 57 0
207 206 -57 0
207 0
c Rand xor clause 4 with 4 lits
-208 150 126 0
-208 -150 -126 0
208 -150 126 0
208 150 -126 0
-209 208 185 0
-209 -208 -185 0
209 -208 185 0
209 208 -185 0
-210 209 57 0
-210 -209 -57 0
210 -209 57 0
210 209 -57 0
210 0
c Rand xor clause 5 with 4 lits
-211 150 126 0
-211 -150 -126 0
211 -150 126 0
211 150 -126 0
-212 211 185 0
-212 -211 -185 0
212 -211 185 0
212 211 -185 0
-213 212 57 0
-213 -212 -57 0
213 -212 57 0
213 212 -57 0
213 0
c Rand xor clause 6 with 4 lits
-214 150 126 0
-214 -150 -126 0
214 -150 126 0
214 150 -126 0
-215 214 185 0
-215 -214 -185 0
215 -214 185 0
215 214 -185 0
-216 215 57 0
-216 -215 -57 0
216 -215 57 0
216 215 -57 0
216 0
c Rand xor clause 7 with 4 lits
