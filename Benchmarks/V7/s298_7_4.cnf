p cnf 223 586
c
c CNF representation of circuit s298 with a subset ofoutputs randomly xor-ed
c Generated by mMsim
c Total gates: 136 Total inputs 17
c
c
p cnf 223 586
c
c Declaration of independent support
c
c ind 1 2 3 4 5 0
c ind 6 7 8 9 10 0
c ind 11 12 13 14 15 0
c ind 16 17 0
c
c Gate #19: not (NOT_1): out = 18, in = 4 
18 4 0
-18 -4 0
c Gate #20: not (NOT_2): out = 19, in = 7 
19 7 0
-19 -7 0
c Gate #21: not (NOT_3): out = 20, in = 6 
20 6 0
-20 -6 0
c Gate #22: not (NOT_4): out = 21, in = 5 
21 5 0
-21 -5 0
c Gate #23: not (NOT_5): out = 22, in = 8 
22 8 0
-22 -8 0
c Gate #24: not (NOT_6): out = 23, in = 17 
23 17 0
-23 -17 0
c Gate #25: not (NOT_7): out = 24, in = 5 
24 5 0
-24 -5 0
c Gate #26: not (NOT_8): out = 25, in = 7 
25 7 0
-25 -7 0
c Gate #27: not (NOT_9): out = 26, in = 6 
26 6 0
-26 -6 0
c Gate #28: not (NOT_10): out = 27, in = 16 
27 16 0
-27 -16 0
c Gate #29: not (NOT_11): out = 28, in = 9 
28 9 0
-28 -9 0
c Gate #30: not (NOT_12): out = 29, in = 10 
29 10 0
-29 -10 0
c Gate #31: not (NOT_13): out = 30, in = 29 
30 29 0
-30 -29 0
c Gate #32: not (NOT_14): out = 31, in = 11 
31 11 0
-31 -11 0
c Gate #33: not (NOT_15): out = 32, in = 31 
32 31 0
-32 -31 0
c Gate #34: not (NOT_16): out = 33, in = 4 
33 4 0
-33 -4 0
c Gate #35: not (NOT_17): out = 34, in = 5 
34 5 0
-34 -5 0
c Gate #36: not (NOT_18): out = 35, in = 10 
35 10 0
-35 -10 0
c Gate #37: not (NOT_19): out = 36, in = 6 
36 6 0
-36 -6 0
c Gate #38: not (NOT_20): out = 37, in = 11 
37 11 0
-37 -11 0
c Gate #39: not (NOT_21): out = 38, in = 8 
38 8 0
-38 -8 0
c Gate #40: not (NOT_22): out = 39, in = 12 
39 12 0
-39 -12 0
c Gate #41: not (NOT_23): out = 40, in = 7 
40 7 0
-40 -7 0
c Gate #42: not (NOT_25): out = 41, in = 15 
41 15 0
-41 -15 0
c Gate #43: not (NOT_26): out = 42, in = 12 
42 12 0
-42 -12 0
c Gate #44: not (NOT_27): out = 43, in = 42 
43 42 0
-43 -42 0
c Gate #45: not (NOT_28): out = 44, in = 13 
44 13 0
-44 -13 0
c Gate #46: not (NOT_29): out = 45, in = 44 
45 44 0
-45 -44 0
c Gate #47: not (NOT_31): out = 46, in = 16 
46 16 0
-46 -16 0
c Gate #48: not (NOT_32): out = 47, in = 3 
47 3 0
-47 -3 0
c Gate #49: not (NOT_33): out = 48, in = 47 
48 47 0
-48 -47 0
c Gate #50: not (NOT_35): out = 49, in = 17 
49 17 0
-49 -17 0
c Gate #51: not (NOT_36): out = 50, in = 1 
50 1 0
-50 -1 0
c Gate #52: not (NOT_37): out = 51, in = 50 
51 50 0
-51 -50 0
c Gate #53: not (NOT_38): out = 52, in = 2 
52 2 0
-52 -2 0
c Gate #54: not (NOT_39): out = 53, in = 52 
53 52 0
-53 -52 0
c Gate #55: not (NOT_40): out = 54, in = 14 
54 14 0
-54 -14 0
c Gate #56: not (NOT_41): out = 55, in = 54 
55 54 0
-55 -54 0
c Gate #57: not (NOT_42): out = 56, in = 15 
56 15 0
-56 -15 0
c Gate #58: not (NOT_43): out = 57, in = 56 
57 56 0
-57 -56 0
c Gate #59: and (AND3_0): out = 58, in = 7 20 4 
-137 7 0
-137 20 0
137 -7 -20 0
-58 137 0
-58 4 0
58 -137 -4 0
c Gate #60: and (AND2_2): out = 59, in = 5 4 
-59 5 0
-59 4 0
59 -5 -4 0
c Gate #61: and (AND2_3): out = 60, in = 21 18 
-60 21 0
-60 18 0
60 -21 -18 0
c Gate #62: and (AND3_1): out = 61, in = 6 5 4 
-138 6 0
-138 5 0
138 -6 -5 0
-61 138 0
-61 4 0
61 -138 -4 0
c Gate #63: and (AND2_4): out = 62, in = 20 18 
-62 20 0
-62 18 0
62 -20 -18 0
c Gate #64: and (AND2_5): out = 63, in = 20 21 
-63 20 0
-63 21 0
63 -20 -21 0
c Gate #65: and (AND3_3): out = 64, in = 13 8 6 
-139 13 0
-139 8 0
139 -13 -8 0
-64 139 0
-64 6 0
64 -139 -6 0
c Gate #66: and (AND3_4): out = 65, in = 8 36 34 
-140 8 0
-140 36 0
140 -8 -36 0
-65 140 0
-65 34 0
65 -140 -34 0
c Gate #67: and (AND2_9): out = 66, in = 35 8 
-66 35 0
-66 8 0
66 -35 -8 0
c Gate #68: and (AND2_10): out = 67, in = 38 40 
-67 38 0
-67 40 0
67 -38 -40 0
c Gate #69: and (AND2_11): out = 68, in = 40 36 
-68 40 0
-68 36 0
68 -40 -36 0
c Gate #70: and (AND2_12): out = 69, in = 7 37 
-69 7 0
-69 37 0
69 -7 -37 0
c Gate #71: and (AND2_13): out = 70, in = 7 38 
-70 7 0
-70 38 0
70 -7 -38 0
c Gate #72: and (AND3_5): out = 71, in = 6 8 39 
-141 6 0
-141 8 0
141 -6 -8 0
-71 141 0
-71 39 0
71 -141 -39 0
c Gate #73: and (AND2_16): out = 72, in = 8 41 
-72 8 0
-72 41 0
72 -8 -41 0
c Gate #74: and (AND2_18): out = 73, in = 16 48 
-73 16 0
-73 48 0
73 -16 -48 0
c Gate #75: and (AND2_20): out = 74, in = 17 53 
-74 17 0
-74 53 0
74 -17 -53 0
c Gate #76: or (OR4_0): out = 75, in = 19 20 21 18 
142 -19 0
142 -20 0
-142 19 20 0
143 -142 0
143 -21 0
-143 142 21 0
75 -143 0
75 -18 0
-75 143 18 0
c Gate #77: or (OR3_0): out = 76, in = 6 5 18 
144 -6 0
144 -5 0
-144 6 5 0
76 -144 0
76 -18 0
-76 144 18 0
c Gate #78: or (OR4_1): out = 77, in = 38 7 6 5 
145 -38 0
145 -7 0
-145 38 7 0
146 -145 0
146 -6 0
-146 145 6 0
77 -146 0
77 -5 0
-77 146 5 0
c Gate #79: or (OR2_0): out = 78, in = 12 40 
78 -12 0
78 -40 0
-78 12 40 0
c Gate #80: or (OR2_1): out = 79, in = 8 40 
79 -8 0
79 -40 0
-79 8 40 0
c Gate #81: or (OR3_1): out = 80, in = 7 6 34 
147 -7 0
147 -6 0
-147 7 6 0
80 -147 0
80 -34 0
-80 147 34 0
c Gate #82: or (OR2_2): out = 81, in = 14 36 
81 -14 0
81 -36 0
-81 14 36 0
c Gate #83: or (OR2_3): out = 82, in = 14 40 
82 -14 0
82 -40 0
-82 14 40 0
c Gate #84: or (OR2_5): out = 83, in = 8 40 
83 -8 0
83 -40 0
-83 8 40 0
c Gate #85: or (OR2_6): out = 84, in = 8 5 
84 -8 0
84 -5 0
-84 8 5 0
c Gate #86: or (OR2_7): out = 85, in = 7 6 
85 -7 0
85 -6 0
-85 7 6 0
c Gate #87: or (OR4_3): out = 86, in = 38 7 6 5 
148 -38 0
148 -7 0
-148 38 7 0
149 -148 0
149 -6 0
-149 148 6 0
86 -149 0
86 -5 0
-86 149 5 0
c Gate #88: or (OR3_2): out = 87, in = 8 36 34 
150 -8 0
150 -36 0
-150 8 36 0
87 -150 0
87 -34 0
-87 150 34 0
c Gate #89: or (OR3_3): out = 88, in = 11 38 36 
151 -11 0
151 -38 0
-151 11 38 0
88 -151 0
88 -36 0
-88 151 36 0
c Gate #90: nand (NAND3_0): out = 89, in = 4 5 6 
-153 4 0
-153 5 0
153 -4 -5 0
-152 153 0
-152 6 0
152 -153 -6 0
89 152 0
-89 -152 0
c Gate #91: nand (NAND4_0): out = 90, in = 4 21 20 7 
-155 4 0
-155 21 0
155 -4 -21 0
-156 155 0
-156 20 0
156 -155 -20 0
-154 156 0
-154 7 0
154 -156 -7 0
90 154 0
-90 -154 0
c Gate #92: nand (NAND4_4): out = 91, in = 8 82 81 80 
-158 8 0
-158 82 0
158 -8 -82 0
-159 158 0
-159 81 0
159 -158 -81 0
-157 159 0
-157 80 0
157 -159 -80 0
91 157 0
-91 -157 0
c Gate #93: nor (NOR2_0): out = 92, in = 51 4 
-92 -51 0
-92 -4 0
92 51 4 0
c Gate #94: nor (NOR4_0): out = 93, in = 51 60 59 58 
161 -51 0
161 -60 0
-161 51 60 0
162 -161 0
162 -59 0
-162 161 59 0
160 -162 0
160 -58 0
-160 162 58 0
93 160 0
-93 -160 0
c Gate #95: nor (NOR4_1): out = 94, in = 51 63 62 61 
164 -51 0
164 -63 0
-164 51 63 0
165 -164 0
165 -62 0
-165 164 62 0
163 -165 0
163 -61 0
-163 165 61 0
94 163 0
-94 -163 0
c Gate #96: nor (NOR2_2): out = 95, in = 19 22 
-95 -19 0
-95 -22 0
95 19 22 0
c Gate #97: nor (NOR2_4): out = 96, in = 25 8 
-96 -25 0
-96 -8 0
96 25 8 0
c Gate #98: nor (NOR2_7): out = 97, in = 65 64 
-97 -65 0
-97 -64 0
97 65 64 0
c Gate #99: and (AND2_6): out = 98, in = 89 19 
-98 89 0
-98 19 0
98 -89 -19 0
c Gate #100: and (AND4_0): out = 99, in = 95 4 21 20 
-166 95 0
-166 4 0
166 -95 -4 0
-167 166 0
-167 21 0
167 -166 -21 0
-99 167 0
-99 20 0
99 -167 -20 0
c Gate #101: and (AND3_2): out = 100, in = 90 23 22 
-168 90 0
-168 23 0
168 -90 -23 0
-100 168 0
-100 22 0
100 -168 -22 0
c Gate #102: and (AND4_1): out = 101, in = 96 27 5 26 
-169 96 0
-169 27 0
169 -96 -27 0
-170 169 0
-170 5 0
170 -169 -5 0
-101 170 0
-101 26 0
101 -170 -26 0
c Gate #103: nand (NAND4_1): out = 102, in = 96 16 24 26 
-172 96 0
-172 16 0
172 -96 -16 0
-173 172 0
-173 24 0
173 -172 -24 0
-171 173 0
-171 26 0
171 -173 -26 0
102 171 0
-102 -171 0
c Gate #104: and (AND2_7): out = 103, in = 102 28 
-103 102 0
-103 28 0
103 -102 -28 0
c Gate #105: and (AND4_2): out = 104, in = 96 27 5 26 
-174 96 0
-174 27 0
174 -96 -27 0
-175 174 0
-175 5 0
175 -174 -5 0
-104 175 0
-104 26 0
104 -175 -26 0
c Gate #106: and (AND2_8): out = 105, in = 102 28 
-105 102 0
-105 28 0
105 -102 -28 0
c Gate #107: not (NOT_0): out = 106, in = 51 
106 51 0
-106 -51 0
c Gate #108: nor (NOR3_1): out = 107, in = 51 103 101 
177 -51 0
177 -103 0
-177 51 103 0
176 -177 0
176 -101 0
-176 177 101 0
107 176 0
-107 -176 0
c Gate #109: not (NOT_30): out = 108, in = 48 
108 48 0
-108 -48 0
c Gate #110: not (NOT_34): out = 109, in = 53 
109 53 0
-109 -53 0
c Gate #111: nor (NOR2_9): out = 110, in = 105 104 
-110 -105 0
-110 -104 0
110 105 104 0
c Gate #112: or (OR4_2): out = 111, in = 13 38 40 110 
178 -13 0
178 -38 0
-178 13 38 0
179 -178 0
179 -40 0
-179 178 40 0
111 -179 0
111 -110 0
-111 179 110 0
c Gate #113: and (AND2_19): out = 112, in = 49 109 
-112 49 0
-112 109 0
112 -49 -109 0
c Gate #114: not (NOT_24): out = 113, in = 110 
113 110 0
-113 -110 0
c Gate #115: and (AND2_0): out = 114, in = 22 106 
-114 22 0
-114 106 0
114 -22 -106 0
c Gate #116: and (AND3_6): out = 115, in = 97 113 40 
-180 97 0
-180 113 0
180 -97 -113 0
-115 180 0
-115 40 0
115 -180 -40 0
c Gate #117: and (AND2_14): out = 116, in = 91 113 
-116 91 0
-116 113 0
116 -91 -113 0
c Gate #118: and (AND2_15): out = 117, in = 110 4 
-117 110 0
-117 4 0
117 -110 -4 0
c Gate #119: and (AND2_1): out = 118, in = 106 23 
-118 106 0
-118 23 0
118 -106 -23 0
c Gate #120: nor (NOR4_2): out = 119, in = 110 68 67 66 
182 -110 0
182 -68 0
-182 110 68 0
183 -182 0
183 -67 0
-183 182 67 0
181 -183 0
181 -66 0
-181 183 66 0
119 181 0
-119 -181 0
c Gate #121: and (AND2_17): out = 120, in = 46 108 
-120 46 0
-120 108 0
120 -46 -108 0
c Gate #122: nor (NOR2_8): out = 121, in = 117 116 
-121 -117 0
-121 -116 0
121 117 116 0
c Gate #123: nand (NAND3_1): out = 122, in = 106 76 75 
-185 106 0
-185 76 0
185 -106 -76 0
-184 185 0
-184 75 0
184 -185 -75 0
122 184 0
-122 -184 0
c Gate #124: nor (NOR3_3): out = 123, in = 51 73 120 
187 -51 0
187 -73 0
-187 51 73 0
186 -187 0
186 -120 0
-186 187 120 0
123 186 0
-123 -186 0
c Gate #125: nor (NOR3_4): out = 124, in = 51 74 112 
189 -51 0
189 -74 0
-189 51 74 0
188 -189 0
188 -112 0
-188 189 112 0
124 188 0
-124 -188 0
c Gate #126: nand (NAND4_5): out = 125, in = 113 85 84 83 
-191 113 0
-191 85 0
191 -113 -85 0
-192 191 0
-192 84 0
192 -191 -84 0
-190 192 0
-190 83 0
190 -192 -83 0
125 190 0
-125 -190 0
c Gate #127: nand (NAND4_2): out = 126, in = 113 88 87 86 
-194 113 0
-194 88 0
194 -113 -88 0
-195 194 0
-195 87 0
195 -194 -87 0
-193 195 0
-193 86 0
193 -195 -86 0
126 193 0
-126 -193 0
c Gate #128: nand (NAND4_3): out = 127, in = 113 79 78 77 
-197 113 0
-197 79 0
197 -113 -79 0
-198 197 0
-198 78 0
198 -197 -78 0
-196 198 0
-196 77 0
196 -198 -77 0
127 196 0
-127 -196 0
c Gate #129: nor (NOR3_2): out = 128, in = 126 70 69 
200 -126 0
200 -70 0
-200 126 70 0
199 -200 0
199 -69 0
-199 200 69 0
128 199 0
-128 -199 0
c Gate #130: nor (NOR2_5): out = 129, in = 127 71 
-129 -127 0
-129 -71 0
129 127 71 0
c Gate #131: nor (NOR2_1): out = 130, in = 122 98 
-130 -122 0
-130 -98 0
130 122 98 0
c Gate #132: nor (NOR2_10): out = 131, in = 125 72 
-131 -125 0
-131 -72 0
131 125 72 0
c Gate #133: or (OR2_4): out = 132, in = 33 113 
132 -33 0
132 -113 0
-132 33 113 0
c Gate #134: nor (NOR2_3): out = 133, in = 118 114 
-133 -118 0
-133 -114 0
133 118 114 0
c Gate #135: nand (NAND2_0): out = 134, in = 132 111 
134 132 0
134 111 0
-134 -132 -111 0
c Gate #136: nor (NOR2_6): out = 135, in = 134 115 
-135 -134 0
-135 -115 0
135 134 115 0
c Gate #137: nor (NOR3_0): out = 136, in = 133 100 99 
202 -133 0
202 -100 0
-202 133 100 0
201 -202 0
201 -99 0
-201 202 99 0
136 201 0
-136 -201 0
c
c Random XOR constraints start here
c
-203 124 123 0
-203 -124 -123 0
203 -124 123 0
203 124 -123 0
-204 203 136 0
-204 -203 -136 0
204 -203 136 0
204 203 -136 0
-205 204 57 0
-205 -204 -57 0
205 -204 57 0
205 204 -57 0
205 0
c Rand xor clause 1 with 4 lits
-206 124 123 0
-206 -124 -123 0
206 -124 123 0
206 124 -123 0
-207 206 136 0
-207 -206 -136 0
207 -206 136 0
207 206 -136 0
-208 207 57 0
-208 -207 -57 0
208 -207 57 0
208 207 -57 0
208 0
c Rand xor clause 2 with 4 lits
-209 124 123 0
-209 -124 -123 0
209 -124 123 0
209 124 -123 0
-210 209 136 0
-210 -209 -136 0
210 -209 136 0
210 209 -136 0
-211 210 57 0
-211 -210 -57 0
211 -210 57 0
211 210 -57 0
211 0
c Rand xor clause 3 with 4 lits
-212 124 123 0
-212 -124 -123 0
212 -124 123 0
212 124 -123 0
-213 212 136 0
-213 -212 -136 0
213 -212 136 0
213 212 -136 0
-214 213 57 0
-214 -213 -57 0
214 -213 57 0
214 213 -57 0
214 0
c Rand xor clause 4 with 4 lits
-215 124 123 0
-215 -124 -123 0
215 -124 123 0
215 124 -123 0
-216 215 136 0
-216 -215 -136 0
216 -215 136 0
216 215 -136 0
-217 216 57 0
-217 -216 -57 0
217 -216 57 0
217 216 -57 0
217 0
c Rand xor clause 5 with 4 lits
-218 124 123 0
-218 -124 -123 0
218 -124 123 0
218 124 -123 0
-219 218 136 0
-219 -218 -136 0
219 -218 136 0
219 218 -136 0
-220 219 57 0
-220 -219 -57 0
220 -219 57 0
220 219 -57 0
220 0
c Rand xor clause 6 with 4 lits
-221 124 123 0
-221 -124 -123 0
221 -124 123 0
221 124 -123 0
-222 221 136 0
-222 -221 -136 0
222 -221 136 0
222 221 -136 0
-223 222 57 0
-223 -222 -57 0
223 -222 57 0
223 222 -57 0
223 0
c Rand xor clause 7 with 4 lits
